Why not use `ops.current().snapshot()` directly? 
why not just rename this method to `FailedToReachCollectorException` with no change in signature? 
What is the point of this change? 
the current message of the warning is "Consider using the list, dict or set constructor. It is faster and simpler." 
Should we error out of the whole procedure if the put fails? 
Why not to follow the style of go project? 
What's the `if` condition about? Shouldn't it be `if (isGoQuorumCompatibilityMode && privacyParameters.isPresent())`? 
line 100: why do we need to check the parent's result type for this? 
It's not clear what you're attempting to achieve with this code. 
Not sure I understand the purpose of this file. Can you explain? 
Is `bool` the right type here? Can you change the comment to be more specific? 
When reviewing tests, it is often useful to review the code under test as well. I'm unsure if this is the right text for this test. 
Could we rather have a `PathTemplateCheckView` constructor that takes a `PathTemplateCheck` object? 
Is there a specific reason why you're making this change? 
Why are you adding groupId and artifactId? 
Can we please make this a real example in `examples/`? 
Perhaps we should also collect the person's `identifier_type` and `identifier_value` as well? 
if the `finally` part raises an exception, the color will be changed, but the index will not be set. 
since we have a bool arg, we need to specify in the summary what happens when it is `true` 
nit: we could use a comment to explain why we're using `cse-microservice-config-loader` 
Can you add some comments explaining what this test does and why it's necessary? 
Let's add a test to verify that we can query an empty table. 
Looks like this is now unused. Should we remove it? 
let's make this type-safe, like DocValuesWriter<T> and then we can take T getDocValues() and T getDocIdSet() 
nit: should this be called `setMinimumWindowSize`? 
What are the cases where this can be called more than once? 
Its a little bit confusing for me why we need to add the `CachedUser` and `UserRepositoryInterface` to the `BatchActionTransport` ? Is it possible that this is not used anywhere in this class? 
Seems like the condition at the top could be simplified to `if js_elem == "focused":` 
Can we move the `skipIfHasWindowsNodes` to TestNetworkPolicy instead of here? 
What's wrong with `addr.Bytes()`? 
Is there a reason we don't do a simple `strpos` instead of this loop? 
Why is this in a function called `cuda_prefetch_pointer`? 
 This model is loading a checkpoint from a github repository. 
Is there any reason for the change from `time.Duration` to `uint64`? 
Should this go under the quizzes controller? 
Here we are testing a race condition between two renders of the same component. We must have two renders because the first one will not be suspended.
Can you add `this.$container.remove();` as last line in this method? 
Can we make this async? 
Should this be using `#if NETCOREAPP3_0` and `#else` for the `If`? 
Why is this an `if` block instead of a `switch`? 
Don't we prefer `var gsRegex = regexp.MustCompile(...)`. I think we can put all the `regexp.MustCompile` initialization outside the `NewStorageClient` function. 
Can we move this into the `#parse_options` method? 
Why do we need to have both `timeFields` and `partitionFields`? It seems like `partitionFields` would suffice, since we can retrieve the time field by name. 
Looks like this is a method, not a module. Also, `start` is a reserved word. 
Shouldn't the `Upload` step always require the `upload` key? 
Any reason you're returning a `NABoolean`? 
use Time.current instead of Time.now. 
Why the `if GetHash(cStorPoolGot) == ""`? 
How is this an endpoint? 
Why are we trimming whitespace from the config values? Shouldn't we trust the users to provide valid values? 
 Hm, that is interesting. I guess it is a bad idea to suppress password edit fields? 
Be careful, this change breaks the namespace usage 
Why is the new include needed? 
Why the guard? Isn't morphSep always positive?
It's useful to specify what the test is actually doing, rather than just saying that it's "useful" 
What was the issue with the previous code? 
Is this used anywhere? 
Why are these specific dependencies necessary? Is this a complete list or are there more dependencies? 
Why are we introducing a new `var methodHEAD` variable instead of using `http.MethodHead`? 
Why is the `Email` strategy special and why did it get moved? Also, this is a bit of a footgun as it means we will only ever use the first strategy in the list as we will always fall back to `$this->strategy !== 'Email'` 
Do you think this is potentially problematic that the tests just use a different value for the arg? I think that's a good argument for not having it there. 
Why do we need this? Could you explain a bit more? 
why not just put this inside BuildSanitizer? 
Why not use `setupRegistry` as the default export? 
Do you need to update this test to create the new instance with the positive numbers? 
How about directly calling `wlr_seat_set_keyboard` instead of `roots_seat_set_focus_layer`? 
Do we need to remove this method? It seems like it will always return 0 now. 
Would it be worth having a shared example for controllers that skip the `before_action`? 
Looks like we are already using time.Duration for `waitTimeoutMillis`? 
Is 1 hour long enough for this TTL? 
Maybe add some comment to explain the difference between the `st_duration_agg_stats_t` and `st_agg_stats_t` 
Why are we introducing a new method instead of using `loadTable`? 
There's a lot of stuff removed, is this the same thing as the MITMProxy code? 
should we keep the imports in order? 
Why are you doing this? I think you should add the code to use `ExecuteAsync` instead of this method. 
Is it possible to extract the test plan box into its own partial so that we can reuse it for the other plans? 
Maybe we should move this to NetworkUtils.cpp. 
what's the difference between `kernel_shape` and `kernel_extent`? 
Can you comment the new code? 
Is there any reason we need to keep this commented code around? 
Not sure I understand the point of this comment, it seems to just be stating what the code does. 
There is no need for this method to throw IOException, it's not going to do I/O
Is this really a big enough function to warrant splitting out like this? 
ponyint => pony_int ? 
Is it possible to use the new `get_search_form` filter instead? 
Instead of this, in this case we should use the `@dagster_pd.csv_input` decorator 
How about "whether to disable validation of hostname against server certificate", or just "whether to disable hostname validation"? 
Why don't you add this as an empty constructor? 
Why is this a function? It seems like it could be a method on `Cache` or `CertificateCache`. 
Can we move the require statement to the top of the file? 
It looks like this class is in the wrong namespace. 
Can we rename this? I don't think it reflects what it does. 
Shouldn't this include the `if msg.GetGroup() == "user"` check as well? 
Is this change necessary? It seems like it's just moving this to a URL at the root. 
Should we add a specific comment here as to why we're not including the `EnqueueCertificateForSecret`? 
Why are you changing the title and artist? 
please move to antrea.io/antrea/pkg/agent/openflow/cookie/cookie.go 
Shouldn't this be in the azkaban.utils package? 
Why are we doing this in Bootstrap()? It seems like we should be able to do this unconditionally. 
It would be nice to comment the properties of the object (methods and constants) 
For this line and the following one, it's not clear to me why the type is a `string` instead of an `*url.URL`... 
Can you add a `return` here? 
Can you add a comment here explaining what this is and why it is needed? 
Why is this comment needed? it seems to be just summarizing the method name 
why do you have that "browser.tizen" condition here? 
Good catch on the multiarg. Can you format the string in the `raise` statement to use f-strings? 
Why do we catch `NLogRuntimeException`? 
Why did you change from `return PythonSdkType.isStdLib(vf, sdk) ? 2 : 1;` to `return 2;`
Shouldn't this be called `initializeGamepads`? 
random comment: we should inline `GetWorkflowExecutionResponse` code here to reduce the number of functions. 
Why were these changes made? This looks like it could be a source of trouble. 
should this really be an error? 
Why not just use `glnx_openat_rdonly` here instead of the `if` statement? 
Don't use inheritance unless you're expecting to override some behavior from the parent class. 
Would it make sense to use `RETURNING id, last_modified`? 
if (!value_env && !strcmp(name, RESOURCES_CORES)) { - this is a bit unclear. Not sure what it does. 
script_caret_changeSelection seems to not be used here, should we remove it and its usage? 
Shouldn't this be in `api/node`? 
Maybe it would be better to use `mitmproxy.addons` instead of `mitmproxy.addons.upstream_auth` because it is the same level of directory. 
Why not use a `foreach` loop instead of hardcoding it? 
Why is this 2 statements instead of 1? 
Can you please explain why this is necessary? 
Is this a new requirement from the PR? 
What happens if an error is returned? Should we return the error? 
Why is this test case being removed? 
So, the struct could be called `InstanceClient` or `ClientService` or `ClientManager` and all the methods could remain under the same struct (ideally, if there are private methods, those could be under the same package as the struct, but not exported).
Why do we need this? Can't we use np.diff without the convolve 
Not sure why you needed to add this, but you should always run `ember g serializer <model-name>` when creating a new model. 
Is this a new API? 
Why are we changing the model version? 
Would be great to be able to do a bit of validation on the field, e.g. a regex to make sure it's a valid GitHub repo. Might be a bit hard to do that validation lazily, but it would be nice. 
Assign the result of `extract_parquet` to `body, info` instead of `body` only. 
shouldn't we just return a bunch of nulls here instead of filtering out the non-numeric columns? 
Is this going to be used for more than one  ? 
Is there a reason we don't have the `sendCommandsForDownload` constants in here? 
Should we be using a helper_method for `included_in_current_users_plan?`? It seems like it should be a boolean method instead. 
Can we please use the keyword argument syntax rather than opts = {}? 
Now we have `Spec()` and `Results()` which are very similar to `ActiveQuery`'s `Query` and `Results()`. Can we harmonize the APIs to make them similar? 
Should we use the generated function name? More descriptive than `function_name` 
comment is a bit confusing - so if I call with coma_separator = 0 then the separator is ignored? 
Is this supposed to be returning a dictionary or a tuple? The docstring and code seem to disagree. 
It's not obvious what the difference between this method and `gauge(String)` is? 
can we factor out the code in the if/elif blocks into a function? 
Is there a way to make this more efficient? Would be great to not have to walk the whole tree every time 
Shouldn't this be called `RootfsMSMode` so we are consistent with the other mount options? 
Not ok, keep the pkgutil file 
How about `DisableHTTPGit`? 
So, this is the Goroutine that runs the KubeProxy instance, right? 
why not use the one in PrivacyApiMethod? 
It's needed, as we're setting a session timeout. 
Can we make this a method now? 
Do you need to restrict the parallelization of the for loop? 
Can't we use the org_id param to determine whether we should swap out the org's customizations? 
Is this file supposed to be deleted? 
It's not possible to typehint a variadic argument like `...$args`. 
Would be good to get this in a follow-up. 
Can we make a regex for "acceptable email" and "acceptable username" and use that here and in the UI? 
Looks like the test is checking for the wrong error message. Should be updated to match the new code. 
Seems like a better name for this would be `RingMonitor`. 
Why this owner object? The only purpose is to pass it to the topology. Could we improve the API to pass the owner directly? 
There's no need to echo twice. 
What about `pendingRequest.configuration.port`? Is it not necessary to set it in case of `pendingConfiguration.remoteHost`? 
What is the reasoning for this change? What problem does it solve? 
Why are you removing the error context - `open file bucket`? 
what is the value of making the sm2 flag hidden? 
Is this a good idea to call .destroy on the approval without checking if it's nil? 
IsPaused(): What about returning the value of a new `Paused` field from the struct? 
Is this method used? 
Why do we need this? It looks like a very specific test for something that shouldn't happen. 
Can you just fix this to be an instance of the desired type?  
not sure what this is supposed to be doing 
Can we add a test for `convertRetryReplication`? 
Why is `IAM` in parentheses? 
Could you join the two if block into one? 
Why is this not just a standard method we call on the task? 
Why is the `isClosed` set to `FALSE` instead of `TRUE`? 
in the first act you're not passing any props, in the 2nd one you are, is that intentional? 
Is this really the correct test? We should probably just be testing for not raising an exception. 
Could we add the name of the pool in this line, just for clarity? 
What we could do is just pass the $plugin object, and do the formatting here in this method. 
Converting the *string to string every time is a bit messy. I would probably do this. 
Need to add a description for the `generator` variable. Maybe mention that it is used to generate partitioning key predicates? 
can you make a function for the warning? 
Should we use `entry.getValue()` in the for loop instead of the `perm` variable? 
What was the rationale for this change? 
Is there a reason we need to panic in each case? 
maybe more explicit name to convey this is the initial set of shapes 
if `transfer` is not used, don't add it to the default argument list. 
why do we need to recreate the asset from the dataset item? can we use the dataset object directly? 
Not sure what's up with this eslint rule, but I don't see how this is an acronym. P, S, C don't seem to be all caps. 
It's not clear what you mean by "it's deprecated but it's not deprecated" 
Maybe we should catch NPE here?
Should it be called MarshalBinary or Marshal? 
these aren't the same number of bits. what's going on here? 
Is the default value of `initParameter` really important? 
Why do you need to use `files.get()` here? 
Is the `raise CommandException` call necessary here? Instead of catching the `PackageException`, couldn't the `CommandException` be raised directly if there is a mismatched hash? 
What's the difference between error and warn here? 
Where does the `$config` come from? 
Any reason why this is not testing for `diff.WithEquateEmpty()`? 
APIV1POSTWalletRenewResponse -> APIV1POSTAddressRenewResponse? 
Why the second function? Just use a default argument for `arg_label` with an empty string. 
Should this be returning an error if `request.ResetRequest` is nil? 
Maybe it makes sense to have a helper function that sets `xwayland` to `true` and `xwayland_lazy` to `false` and call it from both branches. 
nit: Maybe we should have more specific error messages? 
Does this method do too many things? It creates a snapshot, but also restores it? Maybe we should consider separating these two actions into separate methods for clarity. 
Use a proper command-line args parser, not string concatenation. 
Looks like the `v1` variation is not needed, as there's no code using it. 
Why is this string in the json code? 
Are you sure you don't want to return the error here? Also this is a lot simpler than using filepath.Join. 
shouldn't we use System#currentTimeMillis() to generate unique execution source?
When you add `resourceType` to `resourceDefinition`, does it replace the existing "type" property? 
What about `bpf.reset(new ebpf::BPF());`? 
Should we use `Array.Clear`? 
we're not testing `object` so we could just pass `nil` here 
Should this be moved to agent? 
Some blank lines were added in the end of file. Otherwise, LGTM. 
Should this be in the `Naming` category? 
Why did you add ruamel? We should avoid adding new dependencies if we can. 
why do you need to add `material-icons` in the class? 
what's the difference between `nyist` and `nyi`? 
Is there a way to wrap `render "offerings/meta"` in a content_for block?
Maybe add a comment here to explain what is the purpose of this function. 
Should we specify the version for ca-certificates? Should we specify the version for ca-certificates and for cmake? 
Shouldn't it be `if (accountsInOrder != null)`?
Why not just call `creature->getMaxHealth()` in the `ceil` call? 
nit: why is this being changed to take a cancellation token? 
It's better to cover all cases in our test. 
Why is this `with` statement in a try block? If you're expecting an OSError or FileNotFoundError, it would be better to catch those specifically. 
we don't need to report the error here, we just need to report that the app could not be stopped, so the message in the backticks should be "Failed to stop application" 
is it possible to wrap this whole block in a single rescue and then have all the custom error handling in one place? 
It looks like `indexByte` is a helper for `indexByteString`, so I suggest we leave `indexByte` as is, add an unexported `indexByteString` that calls `indexByte` and does some type assertions, and then have `indexByteString` call that. 
Is this the best place to dispose of the diagnostic source? 
Maybe we should check the error here, and if it's not nil, return it 
Do we ever use `domain`? Seems like a bug to me. 
Why do we not handle the `Exception`? 
Shouldn't this be `get_screenshot_as_file`? 
you should also do `a.sl = nil` and `a.clients = nil` in the `else` block 
Don't make the interface if it's not going to be used outside of the project. 
should we have a `version` variable to determine which version is missing 
Is this a test? If so, can you add a comment about what it's doing and how to invoke it? 
self._binary_location should be private 
Would it make more sense to use the existing `SystemNamespaceID`? 
Why is this working now? 
code style: if this is a utility class, then this should be a private constructor. 
Seems like unrelated change. 
Why are you adding this code directly in the middle of existing code? 
Could you help me to add some comments for this method. 
Do we need to explicitly set `computedNumOfActivePartitions` to -1? It seems like that's the default value. 
is the comment added in this patch ? 
It'll be useful to add a comment here explain that this is the API used by the PartialManifest class. 
should this be in a `scp` function? 
Use a named function instead of an anonymous one. 
Would be nice to add something that explains what the function is intended to do. 
Why not use `showMaximized` and `showNormal` instead of `showFullScreen` and `setWindowState`? 
Is 0.0001 a better default than 0.0002? 
Should we also check if the preferences actually exist? 
It looks like the `if (Sdk.SuppressInstrumentation)` check is repeated in every method of this class, maybe we should deduplicate & automate that? 
Presumably this is fine since it's a constant. 
why are we using self.handles['y_axis'] when the defined property is `yaxis`? 
Oh, I see, you're adding a new function unconditionally. I think we can get rid of the "cfg" argument and just use config everywhere. 
It might be clearer to rename the `plans` partial to `plan_list` or something similar. 
It should be noted that `curl` is included in the latest version of OS X and `wget` is not. 
It should be made sure that the `entry.getValue()` is not empty. 
Do we really want to do this? This breaks backward compatibility, which seems bad at this point. 
can we make this a YARPC method? 
get rid of this if statement, make the default "unix://" 
Is the `KeyError` a new possible exception or should the `KeyError` be re-raised as a `ValueError`? 
just noticed the test coverage is at 0. Can you please put a basic test up that just does something like `node test.js` and asserts that your class is working? 
It would be good to have some tests for this function. 
Why was this field removed? 
Why the - - - - - - - - - - - - - - - - - -? 
Can we add `mailto:` to the `feedback_url`? 
Shouldn't the generics be `?` rather than `Object`? 
maybe this `if` block should be a `switch` as well for readability? 
Should we specify the task name when getting the container? 
Is there a way to get a generic error if someone puts this into `settings.excludes`? 
What's the purpose of the `sys` variable? 
Shouldn't the `if (engineTools == null)` check be moved up higher, to where `engineTools` is actually initialized? 
Prefer expect(...).to be_truthy over expect(...).to be_true 
Should the `ContextListener` be made `static`? 
Why make the size_prefixed flag an optional parameter and not default it to true? 
Why was the pool_member_count == 0 check dropped? 
It looks like we don't do a similar check for dp_inStream in the other constructors. 
Is `funder_id` actually necessary? Also, if it is, we should add a `t.index :funder_id` as well. 
Why don't we use the `rateLimiter` from the `config`? 
As I wrote in other PR, `GetBranches` and `GetTags` should be merged. 
is this necessary? seems like `scalable_allocator.h` is already included above. 
What was the purpose of this function? It doesn't seem to be actually used for anything. 
Looks like this is just a test... what does it test?  
Is it now possible to set the number of teams? I mean, before we were fixing the number of teams to 512 but now we are not fixing the number of teams at all. 
should be a comment on the function, not the struct 
Not sure if this title fits the code changes. Also, please add some spacing between sentences in the summary. 
are these settings needed for the application to run? Maybe we can add some comments to explain their purpose. 
Is this correct? I think the visibility should be set to true only if `alreadyVisible && !singleBccRecipientFromAccount` 
comment: I added an ITableObject interface to the values package so we can pass around some values without having to import the interpreter package. I'm not sure we should keep this. It still depends on the interpreter package. 
why is this now called waitEvent? 
Line is too long. [89/80] 
Perhaps instead of hardcoding the version check for 3.3, we could use the `sys.version_info` check from earlier in the function? 
It may be better to use `!virtualNode.hasAttribute('role')` since it's ultimately just checking for undefined 
Is this method meant to be used for the actual request or for testing? 
Should we make this a property?
no need to automate, this is just a snapshot 
It's not clear how this can return null when it's a generic type. 
Looks like `InitializeStreams` should be `Initialize` to be consistent with the class name. 
Can you also add in a docstring for the `create_no_window` parameter? 
Style/TrailingCommaInHashLiteral: Use trailing comma for hash literals.
Instead of `string[]` use `IEnumerable<string>` or `IList<string>`, and instead of `string[]?` use `IEnumerable<string>?` or `IList<string>?`. 
Why is this not public? Is there a reason? 
 Is this in use? 
What is the difference between `archerCfn "github.com/aws/amazon-ecs-cli-v2/internal/pkg/deploy/cloudformation"` and `github.com/aws/amazon-ecs-cli-v2/internal/pkg/archer`? 
why is this method called "visit"? that's quite misleading. 
Shouldn't this be covered by the tests? 
Fix the comment, its not quite right. 
Make sure to add the `tracestate` header to `traceparentHeader` 
With current abstractions, metric sets have basically the same `Fetch` (and `New`) implementation for all resources, maybe we could have an only metricset for them, parametrized with the eventMapper and the enricher. 
Can this be a constexpr function? 
Why not return the exception?
Why adding this code here? 
Why does this function exist? It looks like it's just doing the same thing as the superclass. 
Should `EXECUTION_SOURCE_FLOW_TRIGGER` be renamed to `EXECUTION_SOURCE_FLOW_TRIGGERED`? 
Should we document the params to this method? 
Why is this a class member? Is it a constant? 
Why are you introducing this new parameter? Seems like `font` already has everything we need. 
Can we avoid the duplicate `session.TranscodingInfo` check? It's just an optimization, I don't think it's that important. 
Can we revert this file as well? 
Is there a reason for this? It'd be good to have some tests for this. 
Can we include a comment that this is only used by the JetStream API? 
It would be nice to have a reference to the list of valid flags. Please do this in a separate PR.
Is this a copy-paste error?  
Seems the line wrap is unnecessary 
Why is this change needed? 
Is there a reason why the UpdateSpan method is being called even if the scope is null? 
what's the point of this? 
What is the `posix='win' not in sys.platform` used for? 
Don't forget to free the `adapter_list` structs when you're done. 
Can we add a one line summary for the function docstring? 
Is there a reason we're not using TargetOrDie here? 
Why are the two "else" clauses at different indentations? 
Separate every 3 digits in the integer portion of a number with underscores(_). 
Why did you change "image = String.valueOf(javaToken.kind);"? It could be "image = javaToken.image;" 
Is the "Bayesian Networking" text needed here? It seems out of place. 
Is there a better way to do this where we don't need to do a diff? 
Can we revert these changes as part of this PR and cleanup the import in a follow-up? 
 Make sure to put some spaces between operators in conditionals such as the one above, e.g. `overwrite.lower() != 'y'` instead of `overwrite.lower()!='y'`. 
Why is this method `public`? 
Should the expected_error_message be "Series.name must be a string or a hashable type" instead? 
Shouldn't this also return the value of the underlayer's `seq` attribute? 
Shouldn't there be a space after the `static` keyword? 
if you are going to leave the forwarding code you should at least add the different pooling methods to the parameter class. We don't want to be using strings on the inside 
Should we change the log level to Warning 
Why is this error ignored? 
Can we make the `resourceRoot` configurable? I think it would be useful if we could specify a different root directory, e.g. when running in a different environment. 
Is this the right place for error notices? I'd expect this to be in the same component as the inputs, so that the error notice is rendered before the inputs. 
Why don't we just move all the extra validations in here and remove the other methods? 
Is there a reason to call <delete>api.setNavigatorObject</delete> in both of these methods? I don't think I understand the use case.
Is this a new feature? If so, please document it. 
There are 3 `add` tags in a row, is that intentional? 
Instead of making this change, could we associate the key with the class rather than the subclass? That would simplify most of this code. 
What's the purpose of this change? It just looks like a reordering of a list of strings. 
Can we add a test for this? 
Can we use `tempfile.TemporaryFile` for this use case? 
Can't we use `UserPreferences.getTheme()` to directly get the color? 
Do we still need the `if len(cnb) > 0` check, or does the new condition cover that case? 
What is the reason for the change? 
Net40 ConcurrencyQueue can seem to leak, because it doesn't clear properly on dequeue. 
Is the core type something the user can extend? 
Can you add a comment explaining why we need to dispose `delaySource` and `linkedSource`? 
Should we add a unit test? 
Why not just have `dataManifests` default to `Collections.emptyList()`? 
Can we move `fulfilled_with_github?` to `Purchaseable` and call it from there? 
Don't you need the same for 'Video'? 
Why is this a hack? We want to be able to set the value of this property without doing a *lot* of work if we do not need to. 
Why is `require` used instead of `assert`? 
Isn't this a test that should be run only on Android? 
Maybe use `refreshAfter` instead of `lastRefreshTime` and `lastUpdateTime` to make it clearer. What do you think, @jacksontj? 
seems like the info.getMaximumSimultaneousSessions() change is unrelated to the rest of this diff. 
Shouldn't this be a namespace that's internal to the tracer, not the public API? 
Why is this being moved? 
Could the JMSSerializerBundle loader be moved into its own section, with its own if statement? 
Why not `toBeProcessed.Number > 1`? 
What is this? 
Should this default to exit with error? I'm not sure I understand the rationale for this change. 
Why is this being added here? This is a helper function for the menu, so it should probably be in the same file as the menu. 
Why do you need a connection establishment timeout here? 
Do you think we should start using `java.time` classes? 
Why is this cast needed? 
Just a minor nit: I was a little surprised to see that this method returns Task instead of Task. But since that's what the code already does, leaving it alone is fine. 
Looks like some of the code is deleted and some is added. Is that correct? 
It might be worth mentioning in the summary that this function is intended for interactive prompts. 
Why do we need the try/catch? 
Shouldn't this be `master_hostname`? 
Why are we removing this? 
Do we need to specify the return type, ie. {!Builder}? 
Can we move the declaration of `key` into the loop for `range o.TrustedKeys`? 
Can we add a comment to every condition's body? 
Shouldn't this be `parent.logger` instead of `parent.s.logger`? 
Any reason not to make `tagKey2AggregatorMap` a `ConcurrentDictionary<string[], ConcurrentDictionary<object[], int>>` as well? Seems like you could eliminate a bunch of locking by doing that. 
Need to remove this line since it has been added before.
Is this change from another PR? 
Why not use the `s3.putObject` method? 
Should we change the `TEST_ARN` to something different? 
Just a note that `build_resource` should be called after `build_resource(sign_up_params)` so that the params are there. 
Can we have a comment that explains what the pinning of `name` and `mock` are for? 
Can you rebase on top of master, and split this into a separate commit? It's not clear why it's needed. 
Looks good to me, I'm just wondering if it wouldn't be better to call `args.temp_basedir` with the prefix `qutebrowser-prefix-` instead of using a separate variable. 
Why recreate() ? 
Why not use a simple `rescue Exception => e` without `if` and `else`? 
How about we make the default of `unprotectedTransactionsAllowed` `false` now, and remove the `// TODO` comment? 
That looks like a bug fix. 
Why add the `google.golang.org` import but not use it? 
Why is zvolWorkers a string? Doesn't it make more sense to be an integer? 
Why is this method package-private? 
How do we handle multiple handler.GenericErrorPage, or multiple status code for the same handler.ErrorPages? 
why is $this->name set if it's not used? 
Is this really a one-off? It seems like this could be useful to other developers (and to you in the future). If so, consider putting it in a standalone script in the extras directory so it can be reused. 
Why is the `createElement` import changed to `/src`? 
Does this need to be documented? 
nit: Login url --> The URL of the currently selected login server.
Should this be moved to the top of the file, above the imports? 
Can you inspect and see if the `$attributes['class']` has a value or not, and then add the class `lazy`? This way it's set only if it's needed. 
Why is the JsonSchema added here? 
can you add some comments to the new line please 
Can you please explain why we're going from key manager to md decryption key getter? This is not obvious just by reading the diff. 
Should this be named `NegotiateFavoritesList` (plural)? 
Do we need to create a new factory for each indexer? 
Can you add a test to this view? 
Is this code correct? The delete and add seems a bit strange.
Is this commit the result of a file rename? 
Do we want to have a separate `test_tab.py` module? 
Will this be moved to `es_starter.py`? 
Why are we still using `FLAGS_meta_server_addrs` instead of a `meta_server_addrs`? Please do not use FLAGS for members which are not CLI options. 
Would it be possible to avoid this extra blur by making sure we don't focus on the dialog at all? 
Remove the packages that are no longer needed after this change. 
Why don't we make the {@code Props} object a constructor parameter instead of a parameter to the report method? 
Could you merge the roles you are adding to PROJECT_IAM_ROLES_CLIENT into a single item? 
Why do you need the `synchronized` block here? 
Can this be split into its own PR and submitted independently? It seems like it would be relatively easy to review in isolation. 
Can we make this a little more specific than "test" 
Do we want this commented out code? 
Sorry, I don't understand the summary. 
Access is defaulting to read/write when I use `new FileStream("foo.bar", FileMode.Open)`. Is this really the desired behavior? 
Can we add a comment explaining what is happening? 
Is there a reason for this to be internal? 
Why do we need to check for allowedPostRequest(...) here? 
Can you add a comment explaining that this is the implementation of `fs.Node.Setattr`? 
It is not clear to me why this is necessary, and especially why it is necessary to not have these constraints in the property. 
Why is getimagesize() used here instead of $event->getImageSize()? 
Any reason to add the `api_quota_configs`? It seems like it is unused. 
maybe you could check for `Blockly.localConnection_ && Blockly.localConnection_.connected_` here too? 
Why is this being removed? 
can we add now, requestContext=None here so it's easier to pass that info on? 
It's possible for this function to panic, should there be an error reading the file. Is that okay? 
Why is this method called `_process` when it's actually `_apply`? 
Why do we need to run runc init before main() but after libcontainer/nsenter's nsexec()? 
More variable assignments in the same line? 
Why is the padding needed? 
Can we make `grant_id` required? Also, do we need indexes on `start_date` and `end_date`? 
Is the `if` condition correct? 
Can we use `cts.Token` instead of `cancellationToken` here? 
Hi Akshay, the horizontal advance value is not a constant, but depends on the font, so I think we should not do this "magic" factor 10 but rather use the `QFontMetrics::width(const QString &text)` method. 
Why are we using a fixed delay of 1 hour? Is it to cover all possible timezones? 
What is the purpose of the previous `if` statement and the changes made in this `if` statement? 
Why do you need to call setMode when the mode is already `PasscodeMode.Check`?
Is there a good reason why `ResetCaches` isn't using `c.lock.Lock()`? 
Is there a reason we're not using `config.TEST_DYNAMODB_URL` here? 
Why are we removing `TestTransitionDependenciesResolved`? 
Passing `dilation` in init seems redundant since it is not changing from the default. 
Let's set the color to be provided by the caller, and then we can use the color for the secondary and tertiary color as well. 
Why continue instead of return? 
Looks like 'Lifecycle' and 'Monitoring' options are missing in the code 
Is it possible that you could pass a list of licenses to ignore so that if someone wanted to use this for non-jenkins things, they could? 
autoStoreScriptVariables is false by default, no need to set it. 
It's not clear to me that the above comment is a good one to keep in this form. It seems to mention the hack, but doesn't say what the correct config looks like. 
Should be `Save Source` 
Why is `topFrame` a `var`? 
why is the (Message()) tuple deleted? 
Can you add a comment here that this is only used for tests? 
Why are we regenerating certs here? 
should we add in package.json as a script and call it from there? 
1. I think this should return an error if the system account is configured but cannot be resolved. 2. If the system account is already configured, I think we should not re-configure it. 3. This should not be needed to be called in resetSystemAccount. 
Why is `driver_.fileDetector_` being rejected? 
Consider returning an error if len(data) != 0 and len(types) != 0. 
Why is this moved to uber-cadence-tool? 
It looks like this is a bunch of functions attached to a struct, so you've got a bunch of methods, but this particular struct is just a way to namespace them. Is that right? 
What is the purpose of the `jobProps.put`? Can we remove it? 
Same thing here. This is a really useful method, but the docblock should be improved. 
Should this not be done in a compiler pass rather than a service definition? 
Shouldn't this be a unit test, not an integration test? 
Is this a duplicate of above 
Why is the return type being changed to `string|array|Markup`? 
Is this test failing? If so, should it be failing? 
As mentioned in the other PR, please add a comment indicating that this is the main call entry point. 
making `anonymous` final would be a good idea 
Is there a way to get a better error message rather than a `NullPointerException` when the key is not found? 
What is the purpose of this code? 
why swapping self.provisioning and self.aggregator? 
It would be great to extract the duplicated code here. 
Why is `eslint-config-prettier` added here? 
It looks like the added line is an example of a non-ASCII string, but the description mentions checking token types. Can you clarify the purpose of this function and what it is checking for? 
Remove all `@see`. 
Needs a blank line to separate the third-party imports. 
Why `PlatformDetector.SupportsSharableMutex`? What's wrong with `PlatformDetector.IsMobile`? 
As a reviewer, I don't understand what this does. Can you provide context for the change? 
Why is `done` not called in the `then` chain? 
Why do we need this test case? 
Line is too long. [119/80] 
What about `errors.IsUnrecognziedProcedureError(err error)`? 
It d be nice to wrap the `edit_path` links in a `#edit_menu` div, so as to make the JS work more easily. 
It looks like this class is not used in this PR? 
Maybe change to say something like "Imports necessary classes for processing dataset utility commands"? 
exported function names should start with a capital letter, so this function should be named `PausedPredicates`. 
Is there a reason to have the lock here, but not in unregister? 
why is this in a util class? 
what do you want to do here? 
Is `ignoreAria` a typo? Seems like it should be `true` since that would cause the test to fail. 
Can you say "LinkToParentDomain specifies whether DNS records should be automatically created for the parent domain. This is used to generate the zone resource."? 
Why not move this to a separate function (which you can then test) and just call it in both places? 
What about returning `protobuf.Empty` for the case where we don't have any actions? 
Should we be returning an error here? 
It's probably fine, but I'm a little leery about initializing something (the comm object) with a pointer to a function that may not run, because `El::Initialize` might throw. If it throws, then the `lbann_comm` object gets leaked. The code seems to assume that `El::Initialize` will never throw. If that's true, then that would be a good comment to add. 
Since the `org` gets created in the past, it would be good to make sure that the `template` is also created on the same date. 
Should use `self.add_target` instead 
Why is `mDesktopFile.id()` equivalent to `mPluginLoader->fileName()`? 
Why is this method here? 
So the `eff` of `Vector` is equivalent to `const` of `CharSeq`? 
Can you add a comment that explains what `granteeList` is? 
Are these global variables? They should be declared in the functions that use them. 
Why is the globalize.translate call changed from replace to the one-argument form? 
Can we make this an extension method on `Dictionary<string, object>`? 
Should we add a comment explaining why we are suppressing those warnings? 
Why is this constructor needed? 
1. Please delete the empty lines. 2. Please use spaces between the blocks. 3. Please use 4 spaces for indentation. 
Is this the `Endpoint` property? 
can we do this? `return get(element._1).exists(v -> v.contains(element._2))` 
How does this method work? 
Why are these tests disabled? 
Why do we need `qtutils.ensure_valid` here? If the user entered a bad URL or search term, shouldn't we just crash? 
Does `field.addProp` mutate the `field` object? 
Why is `member is configtypes.MappingType` a `pass` but `member is configtypes.FormatString` has a `yield`? 
Why is this change necessary? 
why do we need to return the block height here? 
Should we be testing more than one proposer here? It seems like we're just testing for the same one. 
What does this test for? 
Why are we changing this? 
Why does this change only make DesiredStatus optional but not KnownStatus? 
It would be great to get a test for this, if we make sure the generated code is correct, we could remove the previous checks in the top level directory, and just rely on the generated code. 
it looks like the original code is correct. why would you change it to catch exceptions and return false? 
Why is this a top level property? We want to be able to set the lease storage pool on a per-volume basis. 
Do we need to call RegisterGlobalHook in init? I'm not sure it's needed here. It should be enough to do it once in the process. 
can we have a more descriptive name for this method? 
Maybe add `Config` or `Configuration` to the function name to make it clear that we are setting up the config object? 
It would be better to move the file `config/packages/translation.yaml` to `config/bundles.php` instead, this way it's more clear that the bundle is needed and simplifies the steps to remove the bundle if needed. 
please restore the original code and remove this. 
Is this block of code really one big block? The "if len(args) == 3" block is the only "real" logic here. 
Isn't this already available as [`Number.MIN_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER)? 
Why did you change the `id`? 
Is it necessary to use the ternary operator when calling map_reduce.database.command()? 
It seems like we shouldn't be using a "pseudo-settlement" for transfers that we want to be reliable. 
Use `self.get_attribute()` here as well? 
Is it possible to use a `NOT IN (Status.getFinalStatusValues())` in the WHERE clause instead? 
Shouldn't VerifyWinningPoSt be in syscalls? 
Can we use ``from collections import abc`` instead of ``import operator`` and checking for ``abc``? 
Can you add a description to this method? 
return !(getFromBlock().isLatest() || getToBlock().isLatest()) ? null; 
It's a bit weird that `prune()` returns a bool, but in this function we just ignore it and call `prune()` twice. 
Is there a reason why method doesn't return `void`? 
Should we mention that the column will need to be re-rendered after being frozen? 
Is there a reason you're not using `debuggerAddress.replace("ws://", "http://")`? Is it possible that `debuggerAddress` might not start with `ws://`? 
Don't think `Callable` is defined anywhere, and `clone` doesn't have `shared_data` or `streams` kwargs. This is not a complete diff. 
can you put the two tests in separate 'it' blocks? 
Is there any way to add more intelligence to this and not print the type directly in the case of `var`? 
These are all the same, except for the error code. Shouldn't this be a parameterized test? 
Remove all `@see`. 
we should move the `c.Environment == nil` check to the top of the function. That way we only hold the lock once. 
Great, now I have to update all these for the new translations! 
Don't you think it would be a good idea to make `Transaction.FEE_SECURITY_MARGIN` a parameter? 
Is this code used elsewhere? If so, I think it would be better to turn it into a single function. 
What's the purpose of this package? Also, note that this is missing a license header. 
why is this a list of strings rather than a list of objects? 
It would be great to have a test that exercises this 
Why not use marketAddr as a key itself? 
Should `open_url` be a method instead of a function? Also, should we be using `urljoin` to construct the url? 
Could you add the type you expect for `key`? 
What happened to the object this was attached to? Where does this get used? How does this interact with other handlers? 
Is this necessary? I thought the GC was able to adjust heap size as needed. 
It's a little weird to comment on a call to a method on the next line, but ok. 
can you add a test case for this in `cpp2/GraphTest.cpp`? 
It would be nice to have test cases for each of these methods. 
Can you provide a brief description of what this code does? 
 LOG(WARNING) 
There's a lot of config to play with for this, but I think it's fine to land this for now. 
AdaptiveScalarEncoder was misnamed and yet was left like that in the code! 
What is the purpose of the "then" statement? Is this a debugging flag which is true when we are in a debug mode? 
Does this need to be a separate function? Looks like it's just a wrapper for the `show` command. 
Why not use just config.XDPEnabled? Avoids the confusion, I think. 
There is a method in this class called privacyPublicKeyFile which looks like it hasn't been changed in this PR. Can you explain why privacyPublicKeyFile returns null and how this method works when privacyPublicKeyFile is null? 
Why do we use `#if` instead of `Delete`? 
Does this need to be a separate function from `get_release_tasks()` 
Looks like the `triggerManager` can be injected into the constructor. 
Wrong summary, it should be a summary of the property, not the string. 
isn't this a little too similar to All? Maybe some comments to differentiate? 
should this be added to the comment "Initialize a new test object" 
What is this for? Should it have a test name? 
Use size_t for num_parallel_readers variables and compute_max_num_parallel_readers() return value, since they are sizes. 
Hi, I don't see why we should check `metricsToExport.Metrics.Count > 0`. Are we trying to avoid the performance cost of creating a new `Batch` instance? 
shuffle -- it would be nice to have a link to the paper describing the algorithm 
Should we make sure we're calling `.Close()` when we're done with the node? 
Is this still needed? 
Should we keep the `code` block to preserve the license headers? 
Minor: is there a reason to keep the `hasPath` variable after this change? It seems like a leftover from the old code. 
Is this change really needed? I think the current output is fine.
Why is this a `public` constructor? 
Is the `personal_options` needed here? It's not used by the command. 
is this function only used here? If so, why is it static? 
What is the name of the class? 
unused imports 
Is this part of the same change, or a separate test? 
Could you join the two methods into one? 
Looks good otherwise. Can you also change the error message key to `invalid_github_url`? 
Is this necessary? I think `new NetworkError` should do the trick. 
Why is this plugin creating tasks on the afterEvaluate block? 
Is there a reason why this is an int? 
It's a good idea to explicitly specify a default value so that it's clear what it defaults to (and so that it's extra clear what happens if this test is run in an environment without KOALAS_USAGE_LOGGER). 
Without a summary, it's hard to judge the usefulness of this code. 
Should be `@param predicate the predicate used to filter elements from the sequence, not null` (line 1) 
Why does this need to be a const? You should not use `const` when you need a non-const variable. 
Is there a reason to keep the `prefetch_` vector? It seems like you could just have `prefetch_free_` and `prefetch_full_`? 
Could you document this method? (although I guess it's self-explanatory) 
Can we have a test that uses a very large number (say, 1 million)? 
Why not just return the `reviewPosition` object itself? 
Before the for loop, should we check if accessInfo.GetContent() is nil? 
It would be nice to have the rest of the method. 
Should we be throwing an error if `config.sync.fullSynchronization` is undefined? Or should we be setting it to `false` in that case? 
Why are we exporting this? 
Should we also have a `sortOrderId` default implementation that returns `null`? 
Why move this? Is the path different on FreeBSD? Note this is currently unimplemented on Linux. 
Can you describe why we have to fix the v value for private transactions? 
Since this is a validation, I would expect it to return true/false. 
Would it make sense to validate the zone format against some known regex? 
Why don't we use `var` here? 
Already explained in the `summary` section. 
Why do we need to handle spaceRet here? It looks to me that we can directly return if the space is not found. 
Is this an update for a custom translation? 
What is `reminder_email`? It doesn't seem to be defined anywhere. 
How about a `versions[analyzer_bin] = 'unknown'` in the `except` block? 
What is this `decreasing_generator` used for? 
Why is this deletion of Driver.prototype.VENDOR_COMMAND_PREFIX necessary? 
should we return the user object from `from_oauth_hash`? 
Oh, this is a very very slow query. 
It seems like this test is relying on a lot of outside code to run properly. Is there a way to refactor this to make it more independent? 
Could you please explain what is the purpose of this code? 
How about filtering out the rules that don't apply ? 
Can we add a `t.citext :content` to make the search case-insensitive by default? 
Why is this test called "HeadResponseCanContainContentLengthHeaderButBodyNotWritten"? It doesn't seem to match what the test is actually testing. 
It would be nice to have a comment explaining why we need this method, since the code seems to indicate we don't actually use that "src" option? 
Instead of passing a `FeedFile` here, we could pass a `DownloadRequest` and remove the `FeedFile` dependency. 
Is this the entire file? 
Should this be moved to an interface like Scheduler? 
Is this going to be a problem for the new ping/pong? It's a lot of boilerplate to update the tests to support that. 
Same concern as other test: I'd avoid using `render_template` here, you can just check the `response.data` directly. 
if we're changing all these other commits to include blockNumber, shouldn't we be changing this one as well? 
um, why is there a defer rep.Close() here? 
can we get rid of hiveTableName as an input and just make it a local string? 
Is it time for a PageStreamingDescriptorView#toBuilder? 
Does this mean that the setOnMouseClicked can only be called once? Why not pass in a Supplier<Consumer> so it can be called multiple times? 
Don't use t.Fatal in your code, if you do you can't run anything else. 
Should we ensure that the sandbox directory is created before adding it to the environment variables? 
Why are you adding the `if` twice? 
Why not use the `Flag...` vars? 
can you remove the unused imports as well? 
Why do you need to add single quotes around hostname? 
Is this test still needed? 
It's better to break this into smaller functions. 
What are the semantics of Dilation? Can you add a comment 
Should this be `TelemetryEntry`? 
Should this not be `lint_roles`? 
Can you add a test to assert that the thread is aborted? 
Should we name this self_protected 
Looks like this is cleaning up the code from a previous commit. Looks good 
 I don't understand the logic here. Why is the repository being retrieved twice? 
How come you don't need to do this for all the protobufs? 
Why was `weakrand` removed? It's still needed in `middleware.go`. 
Why don't we just set a default value for `this._prevValue` and not worry about it? 
Why is this change necessary? 
Namespace aliases should be added for the new namespaces. 
the comment does not make sense to me, where is the code that does the described things? 
```go var ( nameRegex = regexp.MustCompile(api.Name + "=([0-9A-Za-z_-]+),?") // ... ) ``` 
Maybe remove this line so we can use go generate to re-generate? 
Why do you need to explicitly import mpi4py? Doesn't PyMPIComm_Get throw if it's not available? 
Can you make the condition `if useRustParser()`? Avoid negations whenever possible. 
Can you comment on the difference between this and ExpectValidCertificates? 
Can we add a docstring for this method? 
Remove the extra whitespace at the end of the first and last line. 
Shouldn't `groundTransform` be just a local variable in `findPersistentVariable()`? 
Why did you delete `import os`? 
What is the purpose of the expand argument? It's not clear from the docstring or the code 
can you refactor this into a helper function that takes in a function to call ? 
Is this a new file? If so, please add a copy of the copyright header from `src/wp-includes/class-wp-hook.php`. 
Instead of a boolean, use `Union[Callable, bool]` and then set `self.connected = self.resize_completion.emit` 
Use `switch` instead of `if` chain. 
Don't forget to change the checksum flavor from thrift to protobuf. 
It would be better to use a template library for this, because we could then use a template which is much better for creating HTML. 
Can we add a comment here explaining what the `idxCurrentSort` variable is used for? 
consider making this a struct with named fields 
Can we add a comment here that the `*meta.RESTMapping` is only used for logging purposes. 
What is the purpose of this code? 
Need to add a comment on why the block is retrieved with write transaction. 
What is the purpose of this migration exactly? 
Why is the service api version 2 here vs in the tests? 
What does `self.proposal.update(status: 'approved')` do if there are no new approvers added? 
Why not return ResultCode::ERR_CHECKPOINT_ERROR for failure? 
It's kind of confusing that this is named `onLongClick` but it also does `selectAllPhotosUpToFav`. 
Should we check the email of the first name and last name as well? 
Is it worth having two versions: one with and one without this function? Seems like most things won't need the ability to override the host. 
Why is there a need to hardcode the node name in the subcommand_state? 
Would be good to test that the location constraint was *not* populated, now that we're doing it. 
Why do we need to use `babel-loader` and not just `@wordpress/scripts`? 
What we could do is to document that the user can use the `getAvailableLogTypes` method to query the list of available log types. 
What is the purpose of the additional check? It appears to be checking `IsReadOnly` but I don't understand the purpose of this. 
Some of these changes are unrelated to the general "add aspect_string" theme of the CL. This is a little confusing, and probably difficult to review. It might be easier to review if this CL was split up into one that just adds "aspect" as a parameter, and a separate CL that changes the GL code to use it. 
Maybe extracting the feed filtering code into a separate method would make the code easier to read. 
can you provide an example of what these strings look like? 
Is the package private so we can't break API? 
Why do we need to do this synchronously? 
Not sure if we should be using "input" and "table" since this is a file scan task. Perhaps we should be using "task" and "file" instead? 
What do you think about removing this and just doing a normal return from the test without the condition? 
What is the purpose of this function? It seems to do two different things. 
Could we not use `select( STORE_NAME ).getSiteInfo()[ propName ]` directly instead of creating a function? 
nit:If this is a test, it should be labeled as such, no? 
What's the purpose of the `$acceptedContentTypes` parameter? 
Make sure to also test that the file is not included in the output. 
Can you please add a test for this? 
When using `super`, you should use `super()` to actually call the method.
It is weird that this method returns GetBlkOrActResponse, but the comment speaks about CreateDeposit. 
Is it worth documenting these environment variables here as well? 
It would be nice to have a bit more descriptive name for the test 
It's better to use a timeout of 0 if we're waiting on the main thread. 
It looks like you are checking an error here - how about using `t.Fatalf` instead of `t.Errorf` since this is a failed test case 
It seems like this method would be more robust if it checked for a null bundle before attempting to use it. 
It might be better for this method to return the status instead of throwing an exception. 
Can we just add the comment about the compression in the `UncompressedUserData` field itself? 
Why 0.5? 
should this be named `columns_config`? 
maybe this function should be renamed to something like `WithOutboundServices` so that the parameter's name is more clear? 
What does `--dns-discovery-url` do? 
Is there a way to differentiate "can load because we've failed" vs "can load because we've been successful", and return a slightly more informative error message? 
ParameterView: Not sure what the purpose of this is for, but we should be able to get the type of parameter being passed in. 
Why is this needed? 
Why are we creating a new byte array here? Just use the iv variable in the cipher.init() call below. 
Do we need to add `calcGenBlk` to the fetcher before creating the syncer? 
Don't we need to set this.process to null somewhere? 
Any reason the hermesID isn't just passed in as a string? 
Can we use the spread operator instead of `Object.assign()`? Also, what's the purpose of adding the X-Request-ID header here? 
Why is this showing up? 
Why do we need to import `keyconf` here? 
What do you think about renaming this to `addNewKey` or `addConfig` or `addConfigItem` or `addConfigNode` etc? 
Why is the logger not ever used? 
file_patterns = ["vasprun*", "OUTCAR*"] is not needed for GGA_OPT. You should add <add>if task_type == TaskType.GGA_OPT:<add>"OUTCAR*", to not include unnecessary files. 
Why is this method called? 
Should this be default 6 hours? That seems like a long time. 
please squash this with the previous commit that removed the usage of this import 
Is it possible that the error is just that the pod was already deleted? Maybe we should just ignore the error if the pod was already deleted? 
Should we be using gtm_format here instead? 
Do we want to include a comment about the failure in the log? 
Can we extract a method to handle the list of imports? 
Do we need to keep the `try: except:` block? 
Should we remove the log message that says "Error getting node index". I doubt any humans will see this message. 
... the error message of the LeaseInLedgerError. 
why not use createElement? 
Remove extra line breaks. 
Can you change the text to be: "Video tutorial for **product name**" 
Why are the openebs/maya/pkg imports being removed? 
Would be nice to add a comment explaining why we need to wait here. Otherwise, the code looks good to me. 
Could we make this return the validatedObject? E.g. `validatedObject = validate(testObject, {...` 
Can we make the default propagator be `CompositeTextMapPropagator` with `Propagators.DefaultTextMapPropagator` and `BaggagePropagator`? 
Is there a good reason to add a blank line at the end of each segment? 
Move the `_run_as` merge into the `If` block 
Why do we need the comments here?
Shouldn't this method be called quit? 
Actually, it might be a good idea to move this function to the `mmcv` library 
Also, there's a bug in the code as it doesn't check for the existence of `tmp.props` before trying to use it. 
Wondering if the previous default for `c.Wireguard.MTU` is needed anymore? 
Looks like the code currently just takes the first one. I'm not sure that's a good idea, but I can't really think of a better one. 
It seems like this method is doing a lot of things. Can we split this into separate methods or a separate class for better organization? 
Can you add a comment here that explains why the `norm_cfg` is a dict instead of a string like in other places? 
Is this `internal` because we are not using it in the code? 
Can we keep the existing copyright headers in place? 
It would be clearer if the `require` messages mentioned that this is for the first call to Fetch or Notify. 
Do we want to move this to a `utils.go` file together with `ignoreFile`? 
Is there a way we can avoid the `if` statement? I'm not familiar with the codebase, so I don't know if this is a legitimate concern. Is there a more elegant way to do this? Maybe a default value? 
It looks like there's no test coverage for this class. 
Why is this in a try-except block? 
Seems like a good opportunity to use a sentinel error. 
Why is `RandBin` a new-style class and `RandTermString` is not? 
Can you add a comment here about why we're black-holing resource exhausted errors? 
What's the reason to use `RSPEC_SKIP_IMPLEMENTATION` instead of just calling `super`? 
Could you please explain what the purpose of this code is? The current comment is not sufficient.
It's a little weird to test json.Marshal here. I think we should test that the API returns the same struct we are passing in. 
Shouldn't this be called OptionsPackage? 
It seems that order of the imports is important here, and that we need to import NameGenerator before the resource to avoid the circular import. Or am I missing something? 
Can you put the umask change somewhere else? There's no reason to have that inside the run func, right? 
Why does this extend AbstractJavaAccessTypeNode? Isn't it just an ASTAnyTypeDeclaration? 
There's something off about the string formatting, why is `URL` in bold? 
There are two resetOpenedWindowsCount methods, one in TelemetryWrapper and one in GleanMetricsService. Can we just use one? 
Maybe add an extra line to explain that this function creates the options for the nagios plot? 
is it possible to use Predicate here? 
Can you rename this to `CheckerStatistics`? 
what's the point of this? 
Maybe rename `update_policy` to `update_mode`? `policy` implies a set of rules to be applied, but I think here you are just specifying the action to be taken, so `mode` makes more sense to me. 
Can you move the cleanupSyncsSoupIfNeeded call to the SmartStore constructor? 
Why is this here? 
That's a bit weird to do in ServeHTTP. Is it possible to use a middleware to restore the context? 
Why is the `result` stuff being added? It seems like it's already handled by the `if tab in self._tabs:` above? 
Why is this class called TestSeleniumCore? Is it actually a test? 
Probably a good idea to write a test case where the date is exactly at the first of the year. 
Can we call this `run_command`? 
Why is this called `TestHandler` if it's not a test? Should this be re-named to something not test-specific?
Can we do the same for .build_defs ? 
Kind of weird to see `convertTo` and `convertFrom` in the same function. 
Can you add an `expect` to ensure `_googlesitekitBaseData` is set as expected? 
instead of taking a pointer, why not just take the value? 
Could we move the new constants to the class which defines them? 
When jsx code is transform to `createVNode` function, it will has a `key` property in `props`, so the first condition should be `key[0]==='k' && key[1]==='e'` 
shoudn't we check the max number of subs here too? 
Why do we need this? should it not be part of `Collections`? 
It seems that there is a multi-threaded race condition here. Is there a way to make this test single-threaded? 
Why `keyList`? 
Is the filterCache being enabled by default now or is it part of the test setup? 
Why not just `CompletableFuture.completedFuture(null)`. 
missing license header 
Why is this class called `XUnitIntegration`? 
should we have a lab class and a research group class in this PR as well? 
Are all these attributes required? 
It's a bit hard for me to understand what's going on here. Can you include a docstring with an example of how to use this? 
What is the purpose of this PR? 
Looks like ParseStartLine and ParseHeaders will be used by Frame to parse the request line and headers respectively. Is that right? 
Seems weird to have a function that creates another function, but maybe that's just me. 
What do the `##` and `#` comments mean? 
Have you tested these? I'm a bit concerned that the names might be too short, especially `url`. Maybe use `repo-url` instead? 
Can we please merge the `go-difflib` and `rust-proofs` commands into one command? 
It's not clear what the purpose of this new method is, or how it would work. It looks like it doesn't do anything, since self.scripts is empty. 
nit: move up library-go import 
There are many tests that are not covered. It would be great to cover more cases. 
What if `filename` is an invalid path? You should probably handle that case as well. 
What's wrong with the way it currently works? 
Perhaps we could add a `# TODO` comment here about how we can improve the performance of `item()` by using `self.spark_column`? 
When reading the code it is not immediately clear what this method is doing. Please add a short description (javadoc) and rename the parameters to be more descriptive. 
It would be nice to mention the default values of these. 
Why are we not checking for the error here? 
Should we use `apis.CStorPool` instead of `openebs.CStorPool` everywhere? 
Why is this needed? Seems like a bad idea. 
Why are you not using a Logger here? 
how about instead of a fallback, we do: return None if scmd == '[PROCESS_WITH_PID={}]'.format(pid) else scmd 
Do you want to use `::class` for the constants? 
Is this some sort of Jupyter plugin? 
Why did you remove the copyright for 2013 and 2014? 
It appears that `AgreementFilterTimeoutPeriod0` is a typo and should be `AgreementFilterTimeoutPeriod`? 
Need to return the headers you generate. 
Should the pool phase be pending unless the pool is created? 
It should be sufficient to use `const { Readable } = require('stream').Readable;
Do we need to make sure to remove the finalizer if the object is deleted? 
Either add a docstring or remove the class from the public API.
Why this change? I don't see how it's related to your current feature. 
Why do we need `claimFromRewardingFundBaseGas`? 
Should we return the session after closing it? 
What is the purpose of this method? The name suggests it is displaying something, but it doesnt seem to do anything nor does it return anything 
Can you please move the `gce` impls into a separate package? 
It looks like the code that was commented out was not a trivial change. Can you describe why you're commenting out this code? 
What is the default for `swarm.beat_period`? 
What happened to the line `newRow.entity = newEntity;` ? 
Looks like this PR is just changing the log level of this. Can we keep this on a different PR? 
Why are you including so much here?
Why are you replacing `$quoted_remove_var_id` with `preg_quote($quoted_remove_var_id, '/')`? 
Also, could you expose this as `RetryAfterHeader` so it's clear it's a header key? 
What are the allowed values for ``time_range``? 
maxResult is not mentioned in the class documentation. 
Maybe mention that this is the upid? 
Why not use the following code instead of the new function? if obj.IAccessible: states = obj._get_states() if controlTypes.STATE_READONLY in states: return [PresentationalList] 
What is this `$kernel->loadClassCache()` doing? 
Should we log an error if we can't access the block? 
Why are we adding 'group' to the list of elements? I don't see it used anywhere in this code. 
nit: rather than importing twice, can we just do `from boto.compat import json, six`? 
unclear why this is necessary. why not just make registerServiceForOS a noop on Linux 
Can you revert this change? I think it's more clear to leave the description as the name of the class, not rename it to `AlwaysOffSampler`. 
EndsWith? Seems like this might be too broad if the class names are not unique. 
What was the motivation behind adding this test? Where does this mock come from? 
Why are we using the JS file from the SWP plugin instead of the one from the Social Sharing plugin? 
Should we add a comment explaining why we are specifying the Linux node selector? I assume it is because cert-manager only runs on Linux, but it would be good to document that.
Shouldn't `use Backend;` move to after `use Request;`? 
Can you add an `assert`ion to make sure that `START_OF_NEW_6X_APPROVAL_POLICY` is in the past? 
Are you sure this is correct? The code you removed includes a check for a parent node, but this always returns 0. Please double check. 
Should we consider adding a @summary tag to explain what this method is for? 
Does it make sense to use reflect.Indirect instead of this so that we don't have to deal with pointers? 
Why do we need this function? 
Why is this test not in net.sourceforge.pmd.lang.java? 
Is this really one type? Make sure this doesn't get out of hand.
Why do we need to specify the value of the input? 
Do we need to check if the secret is nil? 
**Question:** Do we need to keep this method? 
Also, I'm not sure what the purpose of checking for the `reject` case here is, since the `keep` statement below already handles this case. Maybe we can remove the `catch` altogether? 
Should a variable of type `struct wlr_backend *` be named `*wlr_backend`? 
Why is this class necessary? It seems like it could be simplified or removed entirely. 
isAssignableFrom does the same thing as `==` in this case, so it's not really doing anything useful. 
Maybe validate that the password is actually changed. 
Why are we removing the following code? It looks like we are doing the same thing, but with a different `idToConstant` map. 
Is there a reason for the rename? 
Will this work if the "replicas" field is set to a value that is different from the number of replicas in the statefulset? 
you are not planning to use `config` in this function nor is it an input so should it be removed from the argument list? 
Why is this abstract? 
^Nitpick: The indentation seems off on the last line of this snippet. 
shouldn't this be a private method? 
There is a lot going on here. I would prefer to see a `ServerSettings` class that contains a `ServerConfig` and a `TransportConfig` and has a few static methods that make it easier to create a `ServerSettings` from a `StoreConfig`. 
Do we want to make the feedback service more generic? ie: allow more complex metadata to be passed in? 
Do we want to use a different name than `software_name`? It's a bit misleading. 
Is this going to be true even after the `is_placeholder` refactor? 
Maybe 'relay' is a better name than 'broker'? 
What's the purpose of this? This is a pretty obscure-looking function. 
can we change the exception to `KeyError`? i think that's more clear than `TypeError` 
Same as above. 
1) can we use a more generic type than E, like T? 2) can this be an interface instead? 
Should we have a different param name for this? 
Can we move the `var` to the top of the file, just before `appInitAppTypePrompt`? 
Could you keep the `@inheritdoc` annotation too please? 
What do you think about just returning `text/plain` for everything by default, unless it's explicitly been set? 
Missing javadoc 
Where is the implementation of this method? 
Again, why is this in a `utils` folder?
line 7: uint32 is not an appropriate type for ID. 
What about `pendingRequest.configuration.port`? Is it not necessary to set it in case of `pendingConfiguration.remoteHost`? 
What is the significance of the `ecsAttributesUsage` and `licenseUsage`? 
Why not just do `export TRAVIS_FILTERED=1` and avoid the extra shell? 
Can we clarify the usage of lldb::eNoDynamicValues and synthetic_value? 
Why are we leaving a blank line here? 
It might be helpful to add a comment here: "This is the same as the catch callback for the component, but with an added flag to prevent the component from hydrating." 
Make the test data-driven. 
Change package name to `aws` instead of `aws_test` 
Can we make attached_listener_mutex a member of CompoundReaderListener to avoid the singleton? 
Can you add a description for the `--channel` option? 
should this return an error if the matcher is not available? 
Is there a reason we don't always set `UseResourceUpdates` to true? 
Why is the port remapped? Was this a typo? 
It's possible that this change is a functional change, as a `nil` could now be returned here. It's also possible that we're relying on the behavior of `updateOrderStatus` to return a non-nil error when it fails, so there may be no functional change. 
Can we move the type ref to the surface view model? 
What about the case where we have a null value? 
Perhaps it's worth explicitly pointing out that the caller will be blocked until the task is completed on the caller thread. 
It might make sense to move this into its own module. 
Looks like the new code will always return `WORKFLOW_BACKOFF_TYPE_UNSPECIFIED`. Probably it's not what we want. 
Can we please remove the second notice? We only need one MIT LICENSE notice. 
Can you explain why this was changed? It hasn't been changed in other tests. 
Is there any way to make this a little more self-documenting? It's not obvious how the protocol goes into this calculation. (I assume the caller needs to cast the result to struct sockaddr*)&ipaddr->addr, but again it's not obvious what that's doing for us.) 
is there a reason to use a lambda here rather than a simple inline helper function? 
What is the difference between `options.source` and `options.db`? 
Is this part of a larger change that we don't have enough context to review here? 
Either add a license or remove this class 
not sure I understand. Are you saying you want to add new tests on top of this PR? 
Can you update the link to the new documentation? 
Can we add a comment about what the GetParserWithBuiltins does and why we need it? 
Is this needed? The `navigatingURL` is only used to make sure the active dialog is closed when the user navigates, but the `isNavigating` selector doesn't take into account the URL. 
Oh, sorry - I had to step away for a sec. I'm don't think I can approve it given my conflicts, but I'll take care of those in a sec and merge it. Thanks for the heads up! 
why not use a JSONPointer for this? 
How about linking to the original spec? 
Based on the spec, the timestamp is supposed to be the timestamp of the block. Does this really need to be a uint64 ? 
Why is this method called `onResume`? It doesn't seem to have anything to do with the activity lifecycle. 
Can you add a comment to the `Skip` attribute explaining why the test is skipped? 
Why do we need to include the metadata object for the current platform? 
Why do we have the `if "usbID" in port` check twice? 
as we're using `java.util.stream.Stream` before, maybe we can try to use `methods.stream()` now. 
When you remove a line, try to put it in the same line as the next one, with a space in between. 
keeper is an implementation detail of the harness, why not just NewKeeper and return driver.Keeper? 
Why remove the NET452 condition? 
It might be worth having tests that actually verify that the elements have the right accessibility attributes. 
Why are we importing `binascii` and `DRBG` separately instead of using `from .drbg import binascii, DRBG`? 
Code Standards: Please remove leading `\` in `use` statements. 
Should we use log.Fatal here ? 
How about g_return_val_if_fail (name != NULL, NULL); and g_return_val_if_fail (name[0] != '\0', NULL); then you don't need the second check. 
Should we use `if connection.table_exists? "roles"` here like we do in `ensure_system_roles_exist`? 
How does this test that we get a routing loop? 
Do we need to update any of the other tests to account for this? 
Why do we always use magic numbers for the domain id?
 This is not a good design. Having the return value change depending on the input is bad. 
Can't we delete the `/feedback` routes? 
Is it possible for the loop to go into an infinite loop if `i.hasNext()` is always true? 
we can keep it in the code, but I'm not sure that this is necessary here. 
Maybe this logic should be in the puppet_library plugin, so that it can be called in other contexts. Maybe in the `initialize` method? 
  This is really verbose and hard to follow. Is there a cleaner way to write these tests? 
isn't this `isHydrating` flag same as the one defined in line 159 `renderComponentToDom` ? 
Why are you adding the argument $countryCodeFormat? This function is not called from anywhere. 
Could use lombok's constructor builder annotation instead of using this method. This way we can avoid the need for a constructor and static method. 
Can you add a reference to the Java grammar here, or at least the concept of a method declaration? 
Can we add a comment for the two new configs? 
Is this change right? (I haven't looked at it in detail, so I don't know.) The old code unconditionally set `v4IPNet`, but the new code sets `v4IPNet` only if it's still nil. Is that right? Does the same logic need to be applied to `v6IPNet`? 
Various typos: "batch of messages that have queued up for the subscription..." "blocking until there is at least one, or the context is done" "if the service returns no messages" 
Why does this need the `tabindex`? 
Why are we subtracting self.footerHeight and self.scrollbarWidth from scrollPixels when enableCellEditOnFocus is true? I think I'm missing something from the conversation. 
It would be good to see a test for this. 
Why did you change it to derive from `wx.Dialog`? It doesn't have a parent, nor does it have a `panel` 
Is there any reason we are not using io.ReaderCloser (which already has the reader and closer interfaces)? 
It's not clear how this function is used outside this file, so it's difficult to suggest refactoring. However, it looks like it's doing too much. It's checking for hasFoundationBonusExtension, which is a state field, which is not what I would expect from a function. 
What do you mean by `prim`? 
Can we make this more explicit? Like the following: 
Why is this change needed for the test code? 
Missing space after #.<br>Line is too long. [81/80] 
Maybe it's worth adding an explicit error for this? `return fmt.Errorf("error reading packet: %s", err)` 
Wrong import order. 
Why do you need to log this function? 
Why do we need to document the parent class's docstring? 
Could we refactor this so there's not a separate `WriteByte` method for each bus width? The only difference between them is the cast on `Value`. 
Does the `null` here make sense? I think the new form logic should have been put in a separate issue. 
can you add a comment above the test saying something like `This test verifies that the resolve option is not passed when calling the Puppetfile installer`? 
Should we be adding `|| ioError || connectError` to the `if` statement, or should we be replacing the whole `if` statement with `if (httpNotFound || forbidden || notEnoughSpace || wrongFileType || httpGone || httpBadReq || ioError || connectError) {` ? 
Do we need to handle cases where the pending status is not actionable? 
Maybe, use more specific names for the arguments, like `has_poppler`, `enable_poppler` or `with_poppler` 
why use `Object` and not `void`? 
Code duplication, I think we can extract the shutdown code to `shutdown` method. 
Why are you adding 2nd `export const buttonStyle = ...` statement? It seems to be a duplicate of the first one in the code you're working on. 
Is it not possible to use `os.abspath` in the constructor? 
Is there a reason why we would use the word "transform" instead of "convert"? 
Is there a reason why the CancellationToken is no longer being passed in? 
Can we add `table.schema()` as a parameter instead of passing it through `spec`? 
Why is this change necessary? 
Is this for use by the child workflow executor? 
Can we please make sure that the value of the default space sum is higher than the default parts number and the replica factor? Also, can we add a comment explaining the difference between the `default_replica_factor` and `default_max_replica_factor` flags? 
Why not put the remove logic in a method and call it from both places? 
There are a few minor things that could be improved, but nothing that would prevent me from merging this PR. 
Also, there's a missing error check on `Wait()`, but it looks like that might have been deliberate to avoid busy-waiting on a long running process? 
nit: lets use the `m_` prefix on these variables, since we use that everywhere else. 
Why is this needed? 
Is this controller concern about the user's `current_user.offering_licenses`? 
Why is `selfNS` a `bool` to `string`? 
Is this just a test of the tool? It seems like it should be in a different repository (maybe the Kokkos one?) if it's real code. 
Do we need to add a TODO to migrate this to the labels package? 
Why is `np.inf` needed here? 
What is the intention of the new timeout? 
MyGraphsTree is not used. Should this be updated? 
Why are we adding `block_processor*` flags? I thought we've talked about moving these options into the config file. 
missing translation 
Can we get rid of this and just use glog directly? 
nit: This is in no package, move it to `mock` package 
Is there a way to avoid the repetition of the URL? 
Can we use a more descriptive variable name than `v` here? 
Should this be `config.test_grep`? Also, should we just not have a default `config.test_grep` to avoid all this? 
Without knowing the context, it's hard to understand what this method does. Could you please add a code comment explaining the purpose of this method? 
Is this going to be called for all possible sub-surfaces, even when they don't have a parent? 
Can you return an error here instead of nil? 
singleton: I didn't see this used anywhere. 
Why not check the value of `this.hot.countCols()` instead of `columnsMapperLen` ? 
What is the purpose? 
Maybe it would be better to use `get_theme_mod` in the `get_builder` function, so it's easier to read. 
Good find. 
Is this a good way to set the parent provider? It seems like it could cause issues if you forget to set it. 
Can you use the `except` block to handle any potential errors instead of a specific `OSError`? 
Why is this a workaround? It seems like this is the only way we can make this work. 
Why do we return empty string here if there is no hostname label? 
Why do we need this method? Just use `plan.num_answered_questions` directly? 
Would you prefer "New version: %s" or "Updated version: %s" for this log message? 
Why is SQLAlchemyTarget being imported here? It doesn't seem to be used in this method. 
What is the purpose of this function? It doesn't seem to be used. 
Why are you ignoring the return value of `uidMapInUserNS`? 
Why are you including boost format if you're not using it? 
Why is the first path not shown? 
Why is the struct called `CompletedRule`? 
Isn't the `if ss := mset.store.FilteredState(o.sseq, o.cfg.FilterSubject); ss.Msgs > 0 {` condition enough? 
Can we avoid the duplicate code by using a lambda? 
Why do we need this class? 
Why is this being moved? Are you planning to use this file in other places? 
Why do you need to backup and purge event hooks here? This isn't explained in the commit message. 
What is the purpose of this method? What file is being deleted? 
Can you explain the significance of the changes to the summary? 
There's a TODO here - Erik thinks we should think about a language-agnostic mechanism. I think that would be great. What do you think? 
Should we add comments about why this is being deleted? 
What is this used for? 
Should we also add a comment block to indicate that this will be used in serialization/deserialization for the purpose of distinguishing such fields from others? 
Why the change in the version number? 
Is there a reason to keep the Conditional attribute? 
Can you actually test that the mock was called with the correct arguments? 
are you sure this is the correct place to put this code? The join above is obviously a special case, but I'm not so sure this code is. 
Should `create_pause` take a `duration` argument? 
It looks like those `swift::CanType` calls should be `swift::Type` calls now (the `Can` type was removed). 
Why do we need to make the queue twice? We could return the `q` and use that in the constructor.
What's the point, if the input is empty here, why not just return null and skip the loop 
Is this a useful comment? Is it worth keeping? 
Is this a copy-paste error from #ifdef LBANN_HAS_ALUMINUM? 
Is there a reason why the delete lines are not removed? 
Why is the list of method keys here and not in the `GrpcStreamingDetailView` object? 
Why do we need so many imports from the same module? 
Why is the scale always set to 1 here ? 
Why not a single class with a `ssl = [true, false]` ? 
Why the change from `milliseconds` to `nameof(milliseconds)`? 
it'll be nice if we can add a unit test for this, even if it just verifies that the function exists 
It's probably okay to use `this` for all of these. 
Is there a reason we can't just use the `attrs` property of `ClassEntity`? 
Remove the `Returns` line and add a `:return:` line for the return value 
Do you think we should start with a bare "changed" event that just has the section and option names, and then later add the value (like you're doing here)? That way, we can avoid breaking your current code. 
It'd be good to have some tests for this. 
While you're here, does this `if` need to be inside the `for`? 
Need to remove these comments. 
It seems that this test case is not doing what the test class name reads. Please rename. 
Any reason why you didn't do this in ParseNameValue?<add>i.e. the next line should deal with the case where the field isn't in the schema
Don't forget to call `decode` in `get_bboxes_single` to get the confidences. 
Why are these changes needed? I don't see a test case for this. 
Is there a reason to cast here? 
error if len(sha1) < 7 { <s>This should be `if len(sha1) > 7` 
Is there a reason for the timeout of 5 seconds? If not, can we remove it? 
 I think this class is going to be deleted. In master we have the a `FacetsComponent` which takes on the functionality of this helper. 
the summary should say what the code does, not what it modifies. 
Is this ever used? I think this function is never called anywhere. 
Doesn't this need to be in a try/finally? 
What is the purpose of the `mdc-layout-grid__cell`? 
Why are you verifying the entire hash here instead of a specific key? 
Can we also add a `Debug.Assert(LogFactory != null);` or `throw new InvalidOperationException();`? 
Can we move the computation of `neg_prob` after `torch.clamp()` so that we don't need to clamp it? 
What's the purpose of this `fmt.Printf(...)`? 
Shouldn't this be an additional item in the for loop above? 
Why the change from `GetMetricPoints` to `GetMetricPointsAccessor`? 
Why is `tabindex="-1"` needed here? 
Don't we need to remove the nil return? 
Can we get rid of this? I don't think we support SRV with the connection string (only via options). 
Should we be doing something different with `googlesitekit.pageTitle` or `decodeHtmlEntity()`? Not sure if it's intentional to put an empty string into the title if the page title is empty. 
Why the non-null check for allowedExtensions? 
Why did you change the private method `GetFrameworkDependenciesSection` to return `JObject` instead of `JToken`? 
Could we add a comment here explaining why we don't add a default context? 
Should `envFlag` be `env`? 
Ok i missed that, i've added the comment to the workflow.<br><br>One additional comment. Could you refactor this change to be done in a single patch, instead of a series of patches. 
Can we use `ExpectedException` here? 
Why not just `return handle` ? 
nit: What is the point of this change? This is not the same as the `targetSplitSize` method above. 
Why change the imports? 
Should we really be using c.NewPoolConfig instead of c.newPoolConfig, since the latter is an internal function and we are already in the same package? 
Which API version is this for? 
Why is this class being imported? Is it used in the code? 
Move this into a function so we don't have a huge block of code here. 
can you add a comment to explain why you need this `should_drop_columns`? 
Are we going to remove the return from the `prepareAssets()` method? 
It seems like `rwa_number` should be required, since it is in the list of validations. 
if (spec == PartitionSpec.unpartitioned()) can we replace this with Objects.equal(spec, PartitionSpec.unpartitioned())? 
Do we have to include both `h2o.rb` and `acl.rb`? 
ERROR: Builtin type: should use `cls.from_inner_type()` instead. 
Why this change? 
Why was this change needed? 
Do we want to change this to just be if (device_extensions.vk_ext_scalar_block_layout) { `if` checks the value. The comment is correct, but the actual code is wrong. 
Can this be `static`? 
Can you move the new `numeric_only` parameter to the end? It's the last parameter in all the other methods. 
nit: rename to copilotTask to distinguish from ECS task groups. 
Can we remove `Manage jobs` from the list? There is already a different link for that. 
Why is this implemented as separate functions and not just as a constructor ? 
why do we need to check the config file again? 
why is this needed? 
Looks like we removed the DefaultLogMessageRateLimit constant? 
Why is this not inheriting from `GroupByError`? 
Can we make this code more readable? Maybe use a helper function to initialize the attribute and check for errors? 
Why was this change made? 
Could we just not set conditions when we can't find the certs? 
spacing is off 
Why do we have a separate `newVXLANManager` and `newVXLANManagerWithShims`? It seems like we can do this in a single function. 
can we put this type of method on the classmethod? 
Make sure to log the current Joplin version as well as the profile version. 
Why this interface ? It would be nice if it had a Javadoc and a default method to get the modifiers... 
Why is this called `PkgInfo` instead of something more descriptive like `PackageInfo`? 
Looks like the import paths changed? 
Why not use array_values instead of call_user_func_array?
Is this really needed? 
Maybe the comment should specify what happens if a packet is not going to a workload endpoint. 
subscription.status is not a valid status for the label. Should we default it to a proper value if it is not present? 
Can we move the default values to the corresponding classes? 
It looks like you're removing the `examples/cdn` directory, is that intended? 
Why is the IDP response handled here and the passcode response handled at the next level up? 
code duplication: if aws.StringValue(existingContainerInstanceArn) != "" { return "", errors.Errorf("cannot specify a container instance ARN when registering a new container instance") } 
What is the purpose of this function? 
why do you need this private function? Could we make it a public method? 
Why do we check if the startup script is empty? This should be ok. 
It would be great if this could be in a test since it's a bit tricky to follow otherwise. 
Is this code right? (I don't understand why it's returning null for other versions) 
Missing comments for package and type. 
Is there a typo in `duration`? 
Why is this being deleted? 
Just wondering, is there a way to use the strongly typed methods here instead of the raw string names? 
Do we need to add a comment or docstring for `scp` method? 
Is there a way to make `STATUSES` an attribute of the class so that it can be accessed directly as `self.STATUSES`? 
Should we move `WithNeighbors` to p2p package? 
Based on the input arguments, it looks like this function is only used to evaluate expressions that have already been parsed and checked. 
Why not simply use moment(value, dateFormat || true) ? 
Is it a good idea to use `Exception` as a base class? It may be too generic. 
Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body beginning. 
Why is this error ignored? 
How about using `Comparators.naturalComparator()` instead of that method reference? 
  - The plugin is pretty unreadable with the 1 line if statements without braces. 
Why do you need to return the name of the node? It's already stored in the `name` variable. 
Why move from `networks.testnet` to `networks['btc'].testnet`? 
What is the purpose of this function? It is not clear from the name or the code comments. 
Why is this class called TestSeleniumCore? Is it actually a test? 
Can we rename `Secret` to `SecretRef` for consistency with the other APIs? 
Why do we need to have an extra type here? 
Why is this exported? 
It would be good to explain why is it necessary to have this method here? 
Should AssetData be changed to include the index? 
Why does this need to be in the axe.commons namespace? 
Why do we need this? 
Why don't we pass the predicted field name as an argument to the `run` method? This way we could remove the check.
Is this needed? Why can't we just use the input params? 
Looks like a URL at the top of the file got changed to a non-URL. 
Is this part of the paymentchannel package? If not, where should it reside? 
It's not clear what this code is supposed to do. Please add some comments or documentation to explain the purpose of these functions. 
Should we use `ReflectionUtils.invokeMethod` instead of `setAccessible`? 
Why call `argparse` directly rather than use the `ArgumentParser` class in `common_options.py`? 
Okay so I'm not sure if the AWS client does any caching, so it may be a good idea to close it when the object is closed. 
Could you also explain why this is needed? 
Is there any reason to keep this struct? It's only used inside MemoryPool2. 
Why do you inject the controller resolver? 
Don't we want to add a default value to the format config here? 
Should this be `updateEthContext`? 
Prefer single-quoted strings when you don't need string interpolation or special symbols. 
why is this being removed? 
Why do we need to move useInView to a hook? 
What's the reason for aliasing to extra methods rather than just adding the profile= method? 
nit: "This method is used to determine the next document ID." could be removed. 
Can we use the "new" style of casting here? i.e. `auto scan = child(0)->cast_ptr<Scan>();` 
It's going to be either an HTTP or HTTPS request no? 
Can we get rid of this whole -b/--before thing? I think it was for a very specific use case. 
Should we also check if `self.process` is not None before calling `.kill()`? 
It would be better to move this code to the top, because it is not related with any of the changes below. 
There's no need to have this copyright header in every file. You can add the copyright in the LICENSE file. 
It's better to include the entire docstring. Also, you can include a section about the parameters and return values. 
What is this class for? 
Why was this line removed: `updated_by: 1,`? 
Can this be broken up into two methods? The two actions seem unrelated. 
Why not use `from functools import reduce`? 
Can you keep this in sync by just doing `SetContractState` with the key being directly passed in? 
Why not pass the function that creates the logger as a parameter to the function? That way, we could use the same function for the `Logger` field of `systemConfig`, no?
Can we add a test for the exception case here? 
Why you don't use `IPLocator::toIPv4string()` to get the address? 
Why do you need both `H2O_USE_LIBUV` and `H2O_ASYNC_NOTIFY_USING_EVENTFD`? 
Is it necessary to check `newVNode.type === 'progress'` if `newProps.value` is always defined? 
It's not clear what the intended behavior is here. 
What's the relationship between these two methods? Do you have an example of a parameter-less type that could be used in this overload? 
why are we adding this here? 
nit: The function is called `insertedIntoFocusOrder`, not `insertedIntoFocusOrder_`, so maybe we should rename it to `insertedIntoFocusOrder` in the codebase. 
Why do we need `operation` and not just set the `tag` on the span directly? 
Can we make `readonly`? 
can you explain what this does? If it's just for testing, use a constant and don't change it. 
consider moving some of the logic in this function into `isBadNode` for clarity 
How about call it 'stress_test_timeout' to make it clear that it is a time limit? 
It would be better to remove this string concatenation and use String.format() instead. 
So is it VoucherInterval or ChannelExpiryInterval? 
As discussed, let's commit this for now as the fee logic is going to change anyway. 
maybe `get_notebook_data` can take in a `Path` type for `notebook_path`? then we don't need to run `os.path.abspath` in the function 
Why do we need the modified configure command? Why not just call ``buildSystem.configure``? 
Just to be clear, the query is getting all organizationally visible templates that are published and are not a customization of another template? 
Is it possible to provide more context? Like a class name or function name? 
Do we need both Delete and DeleteByTLF? 'Delete' seems to be the simpler version, so probably we can just keep that one? 
Bus width and clock frequency can't be ignored for all slots. This needs to be addressed. 
do we want to support a wait condition that can return a Promise? 
What's with the magic number 2? We should probably use a more descriptive assert here. 
Thanks, LGTM. Just one question, do we need `H2O_COMPRESS_HINT_DISABLE`? I think `H2O_COMPRESS_HINT_ENABLE` is enough, and we should use `H2O_COMPRESS_HINT_DISABLE` for `H2O_COMPRESS_HINT_AUTO` as well. What do you think? 
Can we rename the variables to better reflect their meaning? 
Why is the order of `security_group_ids` and `security_groups` different between `run_instances` and `launch_instances`? 
Who calls this? Can this be called multiple times with the same pull_info? 
Is this a single test? 
Why is this called cluster port? 
It might be worth documenting the possible error conditions so users of this function can better handle them. 
Why not add the `test_name` to the `step` and `on` lines? 
Can we get the timeout in this struct field, and not in the `Container` struct? 
Why is this method needed? 
Why are these enums private? 
Why are we changing this from `h2o_iovec_t*` to `h2o_sendvec_t*`? It looks like the patch is changing a bunch of code that takes `h2o_iovec_t*` now, which seems like a non-trivial amount of work. 
1. Why do we need a separate `New` for `BackendService`? Can't we just use `New` in `common`? 2. Do we need to have `UnmarshalBinary` here? 3. Why is this file named `common`? It seems to be specific to `BackendService`. 
Instead of using `msg` as a local variable, can you use `msg := &Message{...}`? 
1) I think we need a bit more information here. What does this call do? Why does it require a `node-name` parameter? 2) I think we should be checking to see if the `NODE_NAME` environment variable is already set and if so, skipping this call. What do you think? 
Why is the context hack necessary? 
Why is this change needed? Did the tests fail without it? 
Looks good. Some minor questions: - Is there a reason this is called `on_head` and not `on_response` for example? 
It doesn't seem like this is right. The `auto purePrompt` line was deleted in the diff. 
Why is there no comment on OwnerUID? 
Is there a particular reason why you're doing the assert here rather than in the caller? 
Why are you changing the disk cert cache flag? 
Why is the default value "true" instead of "false" ? 
Does this belong in the `internal` package? 
Could we instead just pass `setupFunc` here, and then check if it is nil before calling it in `directiveSetup`? 
Can you add an assertion about `link` and `target_link` not being the same? 
Can we use something other than `getSupportFragmentManager()` to set the adapter? This should probably be a `FragmentPagerAdapter` rather than a `ProductFragmentPagerAdapter` 
Why is this called `TestContainerNextState` when it's not a test? 
Remove the comment if it's no longer applicable 
So this is getting the first plan. Maybe call it `first_plan`? 
It's great we make sure the error is what we expected, but for debugging purposes it'd be great if we could print the actual error too. 
What's the purpose of balanceTrackers in the session? 
why always set to_ts to int(time.time())? 
Isn't this constructor just `init(null)`? (So why not make the parameter required?) 
Are these strings ever used? If not, delete them. 
Why are the `set_checker_enabled` calls added, and what happens if they are not added? `SpecialReturnValueCollector` works differently than `ReturnValueCollector`. 
if we know the status code is 400, should we return an error here instead of a response and a nil error? 
When updating a test, try to keep the indentation level the same for readability. 
move the IsProcessBackground(t.fd) check to the outer if 
nit: This function is perhaps too long. 
What happens if there are conflicting updates? 
There is no need to use klog in this file. 
please use a better name than SPLIT_BY_PARTITION. may be SPLIT_BY_PARTITION_NUMBER? 
Why are we doing 4 init functions and then this? 
What URL should be used for the Ethereum 1 client? 
Why is the geometry not used? 
Is this a duplicate of `func IsStripePoolSpec(poolSpec *apisv1alpha1.PoolSpec) bool {` 
Shouldn't this test case be renamed as well? 
Why are we setting `options.promiseLibrary`? 
scopeManager isn't used anywhere, is it just a holdover from the old method? 
There are a lot of <delete> and <keep> - I'm not sure if they are correct 
Is there any gain for the static readonly fields to be private? 
Use the new Ruby 1.9 hash syntax. 
It would be nice to use a `regex` for this, and associate it with `webDataStreamID` property in the `properties` definition. 
Why do we need to test this twice? 
Why are we deleting this? 
Move the tolerance setting to a constant. 
Need to raise an exception if the default link is not found. 
Can you explain the change for `VERSION_CURRENT`? It looks like you're just incrementing the value without changing any code. 
Can you add a comment explaining what the Debug fields are used for? 
Should we move this to a separate package? 
Are you sure the version number should be changed here? 
Why not getattr with a default? 
Wondering if the previous stack allocation was problematic and the fix is just to do the allocation outside the call to visit. If you're not sure, lgtm. 
That is really a style choice. It looks good on the FE and this is a small component. I'm okay with leaving it as is. 
Do we need to check whether $metadata['associationType'] is set or not? 
as this is a long running integration test, it would be nice if everything was logged 
Do we need to use `self.num_of_searches`? Can't we use `self._flags` to keep track of the searches instead? 
Why is `makeflow_abort_flag` `sig_atomic_t`? No signal handler modifies it. 
Why the first method is named `newContextWithTimeout` but the new one is called `newContextForBackground`? 
Need more context on what this hook is doing and how it is being used. Also, what is the purpose of the currentIndex variable? 
nit: no-arg constructor should be first 
Is there a reason we use `1<<31 - 1` instead of `math.MaxInt32`? 
Why is this called `_expands_user` ? It should be in a context related to the dialog's sequence.
There is no comments on the arguments and return value. 
Shouldn't this be asserted in the reconcile function? 
Comment is incorrect as this function is not used to add a counter. 
Why do we need to add a new argument? 
What is the use case for this? It seems like a regression for anyone who needed to run on-prem. 
Why are some now static and others not? 
Why do you need this checkContext variable? It seems to me this test could be done without it. 
Why is this `if` statement here? What happens if you remove it? 
Can we also mock the `google-site-kit/v1/data/` endpoint? 
should this be `isManuallyBuilt(svc interface{})`?
err should be renamed to err_msg (or something with `message` in it) to be more specific 
Can we do one more level of abstraction? internal_disassemble_impl() which contains the whole switch statement, and calls opmask_with_dsts() to pass in the `bool src_dst`? 
It seems like all of the files here are .js files, so why not just use `import`? 
There's no need for this to be public. 
is there a way to make this more readable? 
Should this also check if the key is valid? 
why not just use docs.size() instead of assertEquals? 
Can you put a newline between the return definition and the return statement? 
Yes, definitely. `respond_with` is a bit of a magic thing, but I think we should continue using it in this case. I'm going to revise the test and leave only the simplest one. 
Can we get rid of the `GetFormattedMessage` method? It seems pretty superfluous. 
So we don't care about SIGQUIT? 
Is this test flaky? 
nit: Would it be better to use `auto`? 
Remove the multi-line comment. 
Why not use `scoped_session` as provided by SQLAlchemy, instead of duplicating it here? 
It seems like if we have a `orphanBlock` then we know it must be a `shadowBlock` given the above.  So I think we can assume the previous `if` is the only one we need. 
Just a small nit, maybe you should write "tag name" instead of "tagId" to be more clear. 
Why is this necessary? `if logrus.StandardLogger().Out != logrus.New().Out` 
Could you please add some comments to explain what this code does? 
Can we make this not ignore errors? I think the code could be cleaner if we actually handled them in the calling code. 
Should we be returning a `CompletableFuture` instead of throwing an exception? 
Is there a reason to add `show_legend`? From the docstring it seems like it's a property of `Plot` and not just `Spikes`? 
Remove the TODO or replace it by a comment explaining what the code is doing. 
Can we use something other than `TaskInfo` for this name? We have used it too many times. 
Is this a new function or an existing one? If new, move the function to a more appropriate module. If not, update the docstring to reflect this as a new feature. 
Why have an empty implementation of `smoothingScore` here? 
 should we thaw cgroup v2 for SIGKILL as well, since it's expected to do nothing in a frozen cgroup? 
Is this correct? 
What is the purpose of this? Shouldn't debug be set from the config? 
Why is this necessary? My understanding was that this would just be a single status code, and that we'd rely on the status of the flow itself to determine whether or not the flow was finished. 
Why leave the `blockInterval` out of the constructor? 
Can you add a comment explaining what this code does? 
Do we need to add the other fields here or is `getJwt` enough? 
Move find_current_user to the helper so it can be used in the application layout. 
why are we changing the value of MAX_MEASSTATS_ENTRY? 
Can we add a comment explaining why we're doing this? 
How about "from remote to local"? 
nit: It would be great to add a comment here describing how the tokenization works (i.e. split on spaces, remove punctuation, etc.) so it's clear what input is expected 
Why do we first lock on `c` and then on `c.nc`? 
It would have been nice to refactor out the common code from this function and rexec_output_str() into a function that just does the work of `ioencode()` and takes the rank as an argument. 
Why does this need to be a subclass of `Path`? Why not just `Path`? 
using `Instant` to calculate a year seems like a bit of overkill. How about using `LocalDateTime` instead? 
Should we be checking for the existing of the `config.registry.statsd` object before trying to access its `timer` property? 
Can we make sure that the scratch disks don't collide with the destination disks? (e.g. by using a random UUID or something?) 
How about dropping the "for" and the "." at the end? "Create a counter that is monotonic" 
minor style nit: the space before the `(` is not needed, same below 
It's not clear to me why you need this one. Maybe we can discuss and find a better solution. 
the last two lines are very strange, I don't think this is correct 
What is the purpose of this function? 
looks like this code is duplicated - can it be refactored? 
Can we update the comment to explain what this namespace is used for? 
even in the secondary_emails method, you don't need to return nil since the method will return nil by default if there are no emails found 
maybe we should test some of the other pages too? 
What about `to` and `out`? 
can't you use `big.Int` directly here? 
Is this needed for the magic cape menu? 
hash.update(string.encode('unicode_escape')) -> hash.update(string) 
Why is this being printed? It is too much information to be useful. 
is this a bug if you have a cron job running more frequently than this? 
just naming this to culture seems off as I would expect it to be a culture name not a separator. 
Could we refactor this so it's not a global? 
Do we need this check? It's not adding a lot of value. 
It would be nice if this could be split into smaller functions. 
It would be better to use the same API in the previous code and this code. 
Can you add a comment here about the `not globalVars.appArgs.secure` check? Seems like it's related to something else. 
Is there a reason why the `@@additional_pkgs` variable is added in the middle of the other variables? Also, is there a reason why there is a separate `ETC_HOSTS_PATH_SOLARIS` variable instead of just using the `ETC_HOSTS_PATH` variable? 
Is this a new dependency? It is not mentioned in the summary. 
It is not entirely clear to me what this is going to do. Can you please add more comments and possibly an example. Also, why the name 'Controller'? 
It seems like this would be the right time to figure out what the types of these arguments should be. 
Can we use `isUri` to validate `url` here? 
Could use some more documentation on what exactly this struct represents. 
Technically this is a constructor (which is called to initialize an object's data members), but it's named like a function. It would be clearer if we named it something like "resetDefaults". 
Should we also cache the ErrNotExist? 
On the whole, I'm not sure I see the value of this patch. Do we really need to extract 10 lines of code (which have been duplicated since 2006, so they seem unlikely to change) into a separate file? 
What is the reason for clipping the recordings to top 1000? 
It would be nice to see the new prune.Mode in action. 
Should the comment for the check_flags OPTION be updated as well to include the pre-emptive switch? 
Shouldn't we wrap this in a `options` method that returns a list of allowed methods? Also, maybe we should specify the origin? 
we should move this to some kind of docusaurus preset plugin 
Do we need the `locked_wallet=True` kwarg? is it for the UI? 
same here - also move the return into the `if` and use `else` for the other case.
Do you ever use the session's ID? If not, why do we have it? 
Removing the `MIN_PASSCODE_LENGTH` constant doesn't seem like a good idea. It's better to change the value inside the class. 
There are 6 defines added here, why are they necessary and are they being used elsewhere? Also please wrap lines over 80 characters. 
Not 100% sure I understand what this function is doing. The patch seems to change player->tradeItem but then pass in the old tradeItem1 into the eventPlayerOnTradeAccept call. 
Also, why is this a separate function and not part of the `Track()` function? 
Why is the URL pointing to Google News? 
Should this be using initValue.getValue() instead of initValueConfig.getValue() ? 
Should we error out here if an IPv4-mapped address is found? It seems like a misconfiguration. 
rather than random guid, could we use `Path.GetTempFileName`? 
As discussed in #1918, this can be removed now
Is there a reason you changed the memory allocation here? 
why not use `ClassUtils.getPublicNonStaticMethodsIfAvailable` instead of try-catch? 
Do we need to validate the chainID is valid? 
Missing YolactHead, YolactProtonet, YolactSegmHead from __all__ 
Why not make the class final if it's purpose is to be immutable ? 
Remove the `humanName` method for now? It looks like it is not currently used anywhere, and we can re-add it later if we need it. 
Can you update comment to say Len returns the number of unique labels in the list. 
There are a lot of BOOST_ASSERTs in this file that we should get rid of. 
Why remove the `extractorLen_` assignment ? 
Why do we need to UTC-ify the time here? 
Should we be using `cni_version.All` instead of listing all of the supported versions? 
Why'd you switch it to `wire`? 
Typo: "Snaphot". 
ARG_IMPORT_PEAK_BOUNDARIES should be added to GROUP_IMPORT 
It seems a bit strange that we have `AddPeersErr` and `AddPeerErr` to be honest. 
Think you have the parameter order wrong in the docblock. 
Can you clarify why this retry loop is needed? I'm not sure I understand why the first invocation would return an error. 
can we make this more explicit by doing something like `purchaseable.collection?` or `video_page.purchaseable.collection?`? 
Why are we returning the same string for both the extension and the extension format? 
Could you add a comment to this method so that it's clear what it does? 
where is the source_id being used? 
Can we check if parsed_url.username and parsed_url.password are not None before trying to make the token? This is a little obscure. 
Consider removing memoization and calling Locale.list directly in the controller so we can cache the results. 
When using `EqualsBuilder` I think you should chain the calls to `append`. 
Looks good. Should we also document this function in R-package.R? 
Code is still using http request instead of curl. 
Why is the `pollInterval` constant here? Seems unrelated to the function. 
Why is this called "runCommandWithStdout" but it returns stdout and stderr? 
if we return early, we should probably use `err` as the 2nd return value. 
Maybe consider to use the WordPress dependencies like in line 1-5. 
Why not `self.selectedMenuItem` instead of `selectedMenuItem` 
What is the purpose of this code? It seems to be incomplete 
are you sure this is the right place to be doing this? 
using moment function instead of if statements to setHours 
Why do we need to make a copy of ReplicaSet.Nodes? 
Should this be returning an error also? I guess that would be more consistent with the rest of the code... 
Prefer `transform` over `webkitTransform` since the latter is deprecated. 
While you're here, please do `if File.exist?(path)` and then call `read_yaml_hash` rather than using the ternary. 
Having a sort by order changed is pretty odd in terms of sorting alphabetically. 
It's worth considering if we want to export LoadSaver directly vs having a type that embeds both. 
Why is the default case unimplemented? 
Why did you change the variable name from `it` to `noext`? 
Can you split this into two tests? One to exercise the srcStageMask checks, and one for the dstStageMask checks? 
Why is this being changed? 
Why aren't these defined in the metadata package? 
Why do you need the `_log_callback` function? If you need this for debugging purposes, please wrap it in an `if __debug__:` statement and add a comment explaining its purpose. 
Can't we move the entire if condition to `onPrepareOptionsMenu`? 
There's no doc or link here, so I can't judge this.
Why not return just one channel instead of returning 2 channels and a function? 
As android developer you should use apply() instead of commit() as it's asynchronous and won't lock the UI thread. 
Looks like this is just a helper method to some other function. Should it be made private? 
Wow, this command runs bash? Is it safe? 
are you sure this is a test? It looks more like a step in the flow. 
Do we need to error on `false` case? 
How about a different name so that it doesn't clash with flow properties in FlowOptions? 
Have you considered using a `Secret` type instead of an `interface{}` for the `Secret` field? 
Why do we need `lambda_handler`? It seems like `generic_handler` is never used. 
you should only enqueue the script when you need it, right? 
Is this a new feature? 
Is this string OK? Looks like you missed some text at the end. 
Is there an equivalent to this for the `Toolbar`? 
should we move the tooltip to the right of the label. I have seen it on the left before. 
Can you add a comment that says this is a unit test and explains what we're testing? I assume this is testing that the deal is successfully queried from the miner. 
Why adding an empty config here? It was fine in the other test files without it 
Why is this change needed? 
There is no need for this method to be public, it's only used by this class. 
nit: could be named `AbstractExecution` so that it's not confusing 
Can we get rid of the `lockAcquired` parameter and just assume the lock was acquired? 
There should be a docstring here explaining what `path` is. I know it's a string, but what does it represent? 
Really this should just return no error if the dir already exists. 
Why the duplication of the `UseLane` type? Can't we just check for `instruction.suppressed`? 
Do we want to hardcode the default namespace? Or should we do this in a different way? 
Why are we using a function that always returns true? 
Can we make a change here to be more explicit when the path is not supplied? Something like: "if (typeof path === 'undefined')". It would be a bit more explicit and easier to understand. 
Should we also have a `setAuthentication` method on the alert or web driver? 
Are you sure that this change fixes the issue when type name contains the '_''? I think that this change will get rid of the exception, but it will also change the type name. 
My apologies, I was wrong about that part. I think this is good to go then. 
There is no need for this check, the test is already above 
Is there a reason you don't use `create_consumers`? 
why do we need to get the namespace here? 
Why is envName being added here? 
what is this cache_slug? 
Should we do a `Optional.empty()` in case the report is not found? 
Would be good to have a test that actually checks that the exception is raised. 
Can we move this into `Delegate`? It seems like a reasonable method to have (and would mean less reflection in the caller). 
Remove the extra space between the words "missing" and "test"? 
can you use a template function instead of a macro? 
Can you add a brief description of what these parameters are? I'm not sure what "role" is 
What is the application for this function? 
Could we keep the name StorageClient for the class and just rename the method to `initFromMeta`? 
shouldn't we also update the time in case the difficulty is 1? 
Should the function have a comment to explain what it's doing? 
is it possible to de-dupe this with the equivalent code in `func Build`? 
see if you can get this down to an 80-character line 
Just got this to work on my local machine - thanks for the guidance! 
Why not just pass in the `pid` field directly? 
It seems that there is no need to lock. Whether it is locked or not, the mutex will automatically unlock when the function is returned. 
Could you add a summary of what this class does? 
Should we update this to the new `genesis` field? 
Why is this constructor private? Can't we just hide the constructor (add @private annotation)? 
Can we merge this code with the one in `Controller`? We can add a `toggleBooleanProperty()` method in the base controller. 
Why is ThreadAgnostic only internal set, not private? 
What is the difference between the `protected_mode` and the `else` case? 
Why do we need to use `fs` here? Can't we just use the `yarnOut` string? 
Why is this code just printing stuff? 
Should this be moved to `pkg/server`? 
So, this doesn't actually make it to the end of the loop. It seems like it should be at the end of the loop, since we're going to have to get to the end of the loop to get to the next log. 
nit: can we cleanup the indentation in this file? 
Looks like we added a new import but also removed an existing import. Why? 
Why are these added? They don't seem to be used anywhere. 
what is this code doing? 
is this a good time to switch to the new rails 5 redirect approach? 
Why adding `#ifdef MPI`? 
Which is it? Patched or synced? Can this be determined by the verb? 
Would it make sense to extract the creation of both diskImporterDiskName and scratchDiskDiskName to a helper function? This would also reduce the amount of code in the function. 
Can we add a comment to explain why `_parentDom` is set to `null` here? 
Why was the Amazon copyright deleted? 
It looks like the only usage of this import is to get the `download_path_suggestion` function so I think we can remove it completely. 
Should we be doing the same check for ClusterInstallRef down in reconcileInstalledClusterProvision as well? 
Is this hack for now? Can we just always set the index reader as null? 
Is there an error being returned here that should be used as the return error? Otherwise, I don't think the `err` in `return reconcile.Result{}, err` is valid. 
RootlessContainer is a new concept for me. I assume this is important for some security/scoping reason? 
Is there a reason for not using r.WithContext to construct the context? 
Without knowing the context, it's hard to understand what this method does. Could you please add a docstring? 
Why have we got a <keep> here? It looks like the code is just going to be deleted. 
Extract should probably return the span context, not the context. 
There are a few methods in this class that look like they could be private now. 
Why not just set `DT_INSTALLED` to `False` in the `except ImportError` block? 
Should we also change the type name? 
Why do you need to set the local height to the best peer's height? 
Can you leave a TODO here to remove the `<delete>` as part of the final commit? 
Why is this necessary? It seems like it could cause problems if the pool is already stopped. 
hmm, this code was already commented out but it looks like it's going to be removed? 
 Remove the panic and return an error? 
Is the summary here a bit misleading? The code seems to be for test setup. 
Shouldn't `ADMIN` be `0x8000000`? 
It's not immediately apparent that `IntegrationSpecHelper` and `EnvironmentSpecHelper` are also included in the `[:feature, :request]` loop. Maybe we can rename them to `FeatureSpecHelper` and `RequestSpecHelper` for consistency? 
So this PR is about removing `choice_name`? 
what do you mean by "single term The Scorer used to compute the term of a" 
Why do we have a `buildRequired()` function and not a `buildArgs()` function? 
 Don't think permissions should ever be null. 
Why are we not serializing the logger? 
Why invoke onStartSendRequest() here? Seems like it should be called in the RestClientSender. 
What is the purpose of this code? Since you're not `handleRekey`, I'm not sure what this function is supposed to be doing. 
Is this test meant to fail? It seems like it should get the work properly and not just generate it. 
Why do we need to drop metrics? And why are we commenting it out? 
can you add a comment on top of init_secret() explaining why this is needed? 
Can we use a different name for the `systemdsystemgeneratordir` variable? It's really hard to read and understand. 
It seems like this controller is missing some required parameters for the `before_filter` 
Can we call this OnChainSize so it isn't confused with the Go `len` function? 
Can you please remove the reference to tigera? We're no longer using their code. 
Looks good to me. There are a few hardcoded paths like `~/.quilt3` and `~/.aws`, but I think that's fine. 
Is the port value of c->proxy.port always 0 here? There is already a debug log message in http_client.c:161 that shows the proxy port. 
While you're here, does this need to use `openssl_verify_mode: OpenSSL::SSL::VERIFY_NONE` anymore? 
Should we be using `runner.executableToDebug.getParent()` instead of `runner.executableToDebug.getPath()` here? 
Is this really necessary, given the logic in wlr_output_commit? 
can we use Map.getOrDefault instead of two statements? 
Why the change of locking behavior? This is a new method, unrelated to the change in behavior. 
nit: this method is not used, right? 
maybe you could check for `args[0] == "--debug"? 
How about using a struct with two fields and their tag is `json:",omitempty"`? 
Could you please add a comment about "cgroup name" and "cgroup path" 
Why does it need to be a snapshot rather than a regular object? 
Is this function doing too much? 
could you add a comment why this is done? 
might be named `getProductsByTypeAndSegment` to make it clear that it takes a segment id 
nit: This comment is a bit verbose. I think it would be clearer if we split it into 2 comments. This is a helper function that flushes the response trailers and then copies the response trailers to the response. 
Can you use more specific exception type? 
Why do we need to strip the vendor name from the model? Shouldn't that be handled elsewhere? 
Why is `ApplicationScheduler` a settable property? 
Is it necessary to specify the type of error here? Can we just use a generic error type instead? 
Is this code being used? I'm not sure I understand the purpose of this change. 
Looks good to me. 
Is it necessary to pass spark session? 
Nullable should be by default false in Type\Union 
Why did you change this from `FormEvents::BIND` to `FormEvents::SUBMIT`? 
Can we just log the error and continue? 
Should this be `enum`? 
How about using a list of functions and then validating the object with all of them? 
Can we get rid of the `master` prefix from `masterPivotFacet`? I don't think it adds any clarity here. 
nit: would be nice to have a comment explaining what this is about. 
why do you need to check for table exists? 
will this still work correctly without the Thread.new and .value calls? 
Are we going to make this setup class abstract for user to inherit? 
Why do we need to compare the binary representation? Wouldn't it be enough to compare the returned plot object instead? 
Should this be `disableIptables`? 
Why is this function not implemented? 
Why is every condition on a new line? 
nit: The command names are plural, so `dealStatusCmd` should be `dealStatusesCmd`. Same for `dealListCmd` -> `dealListsCmd` and `dealCloseCmd` -> `dealClosesCmd`. 
~I am really not comfortable with the way you are handling exceptions here.~ I see @alalazo explicitly asked otherwise. 
Would be nice to have a comment here about why we are setting the `resumeKey`. 
What does this method do? 
Maybe use `trim` instead of `replace`? 
There's a lot of `if`s and `else`s in this method. Maybe some refactoring needed? 
Why are we migrating to this from  `TestHiveMetastore()` constructor? 
Why isn't this using cudaMemcpyAsync? 
why is this needed? 
Should we also move the `aria-controls` value to be set by the `handleMenu` function, like we do `aria-expanded`? 
Could you add a comment describing what this method does? 
Just a nit, we should use `services ...string` as we did before. 
Thanks for catching this. Looks good to me. 
Maybe add a comment, that we are using the GetConfigPath function here to make the call more explicit? 
Is the intent here to bail out if it's quiet time and notifications are enabled? 
Regardless of whether we keep this code or not, we need to be consistent with the `containsKey()` check: in the existing code `t._1.equals(key)`, but in the new code `Objects.equals(t._1, key)`. 
What is the purpose of this code? It doesn't seem to be doing anything useful. 
Can we avoid the `no-empty` rule here? 
Wow, this is a pretty cool feature. 
Is there any other way to make the WorkingSet interface smaller? It looks very large. 
Could you please also update the tests to verify error message of 'errUnmarshalCountOpts'? 
Why isn't the type of `comm` just `auto`? 
Looks like the test case already has a setup and teardown method. Why do we need to add another one? 
Just to make this more obvious, can we add a comment describing what this is doing? Maybe something like: // waitForCacheSync blocks until the cache is synced, or until the stopCh is closed. 
What is the reason for this? 
Why do you need to pass in the name of the file. It seems like that should be stored on the struct. 
Can you add a comment for the two constructors that they are only publicly available for the sake of subclassing? 
Seems like PingProvider should be PingTarget and be a method of NATPinger. 
why do we need this function? can we not add this to getGrpcStreamingApiMethodName? 
Do we need to use `Path.Combine`? It looks like we could just use `+` here. 
nit: don't use wildcard imports 
Is this intended to be a no-op? 
Can we at least make this a lambda? It would be nice to log the function name in the must be rethrown check. 
Can you add a comment here that says this needs to be updated when the keystore is updated? 
Are you sure about this? This does not seem correct. We should not need to add cases each time there is a new version. 
It looks like this method is only used in one place. Perhaps we should just inline it and not have it as a method. 
Why did the <code>validates</code> get deleted? Was this intentional? 
When I see `panic` I think "should this be an error instead?" 
Why are you adding this? It's not used. 
Do we need this if we're not using this code? 
Should we have a unit test for this? If not, why not? 
Is it possible to create a test for this? 
What is this bit of code doing? 
Was unable to find any references to `test-float64-histogram` or `test-int64-histogram` in the codebase. Can those be deleted? 
Is it necessary to change all these copyrights when the actual content isn't changed in the file? 
Looks like there's some code duplication here with deployExternalDNS, should we consolidate these functions? 
Why we're not using awsProperties() in the delete code block? 
What is the purpose of this? This looks like it is just logging a statement without actually doing anything. 
Is this necessary? It seems like it would be easier to understand if this function was broken into two functions, one for determining enabled submit elements and another for determining if any input elements are present. 
Shouldn't we be using `GetTasks` for this? 
Maybe move to `RSpec::Core::World`? 
Why are you removing `deploy_mode`? It seems like it is still used? 
Is this really needed? 
Looks good, but is there a way to validate the tracer is doing the right thing in a test? 
Can we add a comment explaining the purpose of this constant? 
Is this a "fake" setup.py? I think this is the first one I've seen like this. It's not a huge deal, but I think we should make a note somewhere in the docs that this is an accepted pattern. 
Use an interface for exceptions instead of a class hierarchy. 
Why are you returning nil, nil? 
Why are the proxy settings split into 3 different settings in the first place? Why can't we just have one setting which contains all of them? 
Could you please explain why do we need to replace the "v" with "apiv" ? 
Do we need to add `PercpuUsageInKernelmode` and `PercpuUsageInUsermode` to the `GetCgroupPerfStats()` function too ? 
Missing a docstring @@@ I think this should be in brain_dataclasses for consistency 
It would be good to document this new option in the README 
Can we update the name of the variable to be more descriptive and specific? 
Can't you somehow escape the double quotes in the ruby code, instead of using the single quotes? 
Should this be using a context? 
Is this method thread safe? What happens if two threads call this method at the same time? 
Same here, only use this as a private field, not as a getter. 
Why are you ignoring event.getInQueueNanoTime() for producer ? 
Can you add a comment to the if statement explaining why it's there? 
That's not what this does. This returns a list of endpoints (a list of things that are in the group) 
Use && instead of and. 
Why are method and function names capitalized? 
Why does the template need to be changed from a replace operation to an add operation? 
Is this dependency needed? 
Do we need a translation for 'Uploading' in German? 
There is no change in logic. This is just for readability. 
Can we avoid adding to `global` and just return the `API` object here? 
Do we need to keep the `site#` for each of these? It seems like that would be defined in the site folder so it's unnecessary to repeat it for each route. 
There's almost no difference between `positive` and `notNegative`: perhaps we could add a `min` argument to `positive`? 
As mentioned in previous comment, please provide a test that covers this case. 
Why are these 2 names constants while the others in this group are `var`? 
Any reason not to use a `ThreadPool` here? 
Would you mind to wait for the result of `onReady` here? 
It's hilarious that these tests pass with unbalanced parenthesis. 
Why are you adding the same join twice? 
Can we move this in the init()? 
With this change, it will be worth it to have a struct for `feePerByte` and `feeThreshold` 
Is there a reason we can't just add `zk-read` to `ConfigEditableZkACLProvider`? 
Can't you use a ternary operator here to be more consistent with the rest of the code?
Is this code directly in the root of the project? 
Where is the completed block? 
Can we just have the `provisioningDelayCondition` return the last-seen ID directly? 
nit: "throw an exception" could be "throw an error" or "raise an exception" 
Why are we changing the existing behavior? Is it necessary to add the `marionette: true` part? 
Should the default value for LOCALITY_ENABLED_DEFAULT be false? 
Is `TEXT` really the appropriate type for this? 
Is there a reason why you're switching from spec_helper to rails_helper? 
What about making a findSSSR call here if the ring info is not initialized? 
Why `gasPrice.AsBigInt().Uint64()`? 
Why not use std::vector? 
why not add the `go-filecoin` paths to the `.travis.yml`? 
There is a comment about an issue that needs to be addressed. 
It's not clear to me what the summary of the code is trying to convey -- in particular, it's talking about threads but it's not clear why. 
So this is part of the testing infrastructure, right? 
It seems like we're missing some imports for the added exceptions. 
Why is this file getting changed? 
nit: "the database" sounds very specific, maybe "the ledger" is more appropriate, or "the storage" 
Can we remove ContainerInterface, EventInterface, SharedEventManagerInterface and ServiceLocatorInterface from the imports list? 
Is this function used? If not, it should be removed. 
Why is this being removed? 
Can we add a comment here that the v.struct is only used here? 
more detailed doc would be helpful. what's in this file? what's the format? what's the purpose? 
Could you please give an example of what the expected output would be? I don't have much context for this code. 
why don't we use retryutil.Retry() instead of custom retry logic here? 
Should we add some documentation about the expected values? 
Assign a variable instead of performing a method call in a condition.
What is the purpose of this struct? Should it be removed? 
can we use `is_null` as a shorter alternative? 
It looks like the observer relationship is being declared twice? 
Probably a stupid question: Why don't you want to log an error if the retcode is negative? 
Looks good to me, though I'm not sure if the h2o_quic_num_connections() call is safe. We could be racing with a callback and the connection could be freed but I'm not sure if that's possible. 
What is this? 
Use a static import for the consumer. 
What is the purpose of this change? It seems to be unrelated to the code changes. 
Maybe just `CLI` or `RunCLI`? I don't think we need that top-level comment. 
 Is it safe to use a hardcoded value of 500? 
Since we are using PropertyDescriptor<Pattern>, should we update the property name to "violationSuppressPattern" or something like that? 
Is there a reason for this change? 
Should `StartAsync(TransferFormat transferFormat)` be deprecated?  
does this test need a comment block at the start? 
Is it not possible to use the `LocalCache` type instead of `build.StoreTargetMetadata`? 
Is this really necessary? Can't we just take the time difference and add a few extra ms? 
Is the `[LoaderOptimization(LoaderOptimization.MultiDomainHost)]` being removed intentional? 
Why do we import `VertxTLSBuilder` ? 
Why not just `return !node.hasAttribute(aria)`? 
Why not just return nil? This is MakeDriver, so we don't have any driver to return. 
It seems like this is trying to handle a case where the API version is >= 1.1, but the device doesn't support the core feature for that API version. Is that right? If so, how likely is it for this to happen? 
Is this change necessary? 
Any chance you could add a comment here in the form of a one line summary of the structure?
Using IAM as an abbreviation for Identity and Access Management should be consistent. 
Can we move the `import sys` and `import os` lines to the top of the file? 
Do you think it's worth adding a `class Migrator` in `kinto.core.storage` to make code more reusable? 
Would it be more clear to use a variable name like `expectedMaster`? 
Can we add a comment to this file to explain why these mock calls are only made for Windows? 
Should we add a down migration too? 
Is this DEFAULT_IMAGE_URL going to be used anywhere? 
Is there an example of the warning message that will be produced? 
Why is this code being removed? 
What about CTE for 8bit? 
It's not clear to me why we're changing the text here. It looks like we might be localizing it, which is fine, but I don't see the corresponding change for the actual text. 
Is this test actually testing anything? It looks like it's setting up a database query but never executes it. 
As a side note: Can we also remove the `(byte[])` cast in `return ((byte[]) val).substring(0, Math.min(((byte[]) val).length, prefixLength)).getBytes(StandardCharsets.UTF_8);` 
Can you explain what Creature::speedA, B, C are? 
Can we rename this to `tag_path_from_line` so it's clearer that it returns a tag path? 
Could you add a comment here saying what the original purpose of the `attr_value['string'] is not None` check was and why it isn't needed? 
It seems that `k8s.io/api/admission/v1beta1` is not used, so it can be removed. 
For the new added code need to check with the team. 
Can this be simpler? How about if `inputPattern` is empty, we just return early without doing anything? I think the logic will be simpler that way. 
Why is this change needed? 
can we use `StringUtils.quote()` here? 
Why do we need to do the null check here? `Head` should never be null at this point, right? 
Can the ``watchService`` be passed in instead of being constructed here? 
1) Please update JSDoc documentation. 2) $old_filters is a bit of a confusing name given it is a string.<keep>3) I think we can simplify this a bit by just searching for the query string and <new_line>removing all the code in the if statement. 
Could use some explanation of what we are looking for here. 
Remove this code from the template and handle the logic in a helper or presenter class 
Why do we need to call `set` here? 
Not convinced this is a useful comment. 
Question: is this the right VUID to check for memory bound? 
It might be useful to provide more descriptive information about the parameters in the docstring. For example, what is `anchor_generator` and `train_cfg` used for? 
What is the purpose of this test? 
It seems like this could be done in one line, without the try/except. 
Why is this method now called `sort` instead of `sortByColumn`? 
Minor comment: I think we can put `return rejected` in the `finally` block 
not sure this is quite right. What does the value of this variable represent? 
you should just fix the function signature instead of sending a PR. 
Why don't we make this class immutable? 
Why move `padded_unit` to `__init__`? 
It would be nice to add a comment to explain what happens if there is a failure. 
Why is UIAHandler being imported now? Is it only ever used to check if the UIA is available? 
use `len(p) - 4` instead of `l` 
It would be nice if there was some explanation of what `TOKEN_EOF` is 
It is unclear what is the purpose of this change. Please provide more context and explanation. 
Why do we need this file? 
It seems like passing the match type to the super class would be a bit cleaner. 
the unused-variable error for vardel doesn't seem to be caught. 
any reason why you are not using `then`? 
It looks like we're missing an 's' in the comment on the GroupMembers line. 
Could you add error handling if the binary is not available? 
Why the `typeof window === 'object' ? window : this` rather than `this`? 
Why does it start with `##` ? 
Could you add some docblocks for the package and the function? 
As this is done in the local invironment and used for development only, I think it's okay, but we should use the latest version of pip by default as well. 
why do we need to store height in all these tables? 
Why is this called `As`? It seems like this method should be called something like `NewTopic` or `NewSubscription`. 
shoudn't this be in a package that works on any sort of manifest? 
nit: This should be named `visitImportDeclaration`
So the server will always batch even if the client asks for 1? This is a problematic change, as we do not want to batch for certain messages. 
nit: move the new() call 
Is there a reason that the conditional `if c.trace { ... }` is added only to this function and not also to `c.processInboundClientMsg`? 
What exactly is the output of this function? 
Should we remove the no longer used `initializeAuthorizationPlugin()` and `initializeAuthenticationPlugin()` methods? 
Can you please move the filter code into a separate method? 
Is this class supposed to be sealed? 
Can you rename this to `NewDiskBlockCacheMetadata`? We don't have constructors in Go. 
Why is `d` not used? 
Would it make sense to validate the action in the banner? 
Do we need a new class or interface for Eip? 
def notification_for_approver_removed(to_email, approval) should be enough for this method. 
What purpose does having a width and font-size of .7em serve? If you don't know, we can try removing them and see if it causes any issues. If it doesn't cause any issues, then we can remove it. 
Could we add a comment explaining the purpose of this field? 
How do we control the number of threads? 
Why is this causing `puppet -t -v agent` to be interpreted as a single command? 
Do we need to use `Object.is` here? `hookState._value[0]` is always primitive type. 
Don't see any changes to the interface here. Is this just a refactoring? 
Is there a better way to do this without having to add a new annotation? 
Why is IOUtils being used here? We should use try-with-resource so that we can get a better error message if something goes wrong. 
Don't like the way `skipLogOnErr` is used. It's a subtle side effect. 
Why does this function return an empty string when there's an error, but `getEC2InstanceID` doesn't? 
Can you please add a docstring for this method? 
Move `builder` out of `asMap` and make it a field? 
Why is this being added? How is it used? What are the potential security implications? 
no-daemon doesn't sound like "don't run the client" to me. 
Should we also be logging how long it takes to upload the file? 
Can we add a docstring for the new method `_update_load_status` as well? 
Why is this test only executed when the provider is `kinesalite`? 
either add a comment here or remove this constant 
Can we switch this to a `case` statement? 
Any reason not to use a `Version` enum? 
Why is `DiskLimiter` added here? Maybe some comments would be nice.
Why is this named "ConsoleBadRawFileImportTest" if it asserts that reports contain all necessary information? 
what's the story here? are you deprecating this behavior in favor of the `kubectl describe` command? 
Why are we renaming this column? The new name doesn't seem to reflect its purpose. 
Can you add a comment explaining what this test does? 
can you comment out the second import of `torch.distributed` and the following two lines? This is to make sure it's correct, but we might want to remove it later. Also, can you add a comment for why we are adding `rank` to the random seed? 
Is this meant to be `get_path_for_host_path_in_docker`? 
Do you need `getattr(task, 'param_visibilities', None)`? Won't `task.param_visibilities` always exist at this point? 
Just a few comments. This is looking good! 
There is a `collect_tests()` function in `test_utils.py` - maybe we should use that one instead of duplicating code here? 
is the intention to rename the field `edgeNodes` to `EdgeNodes` or to add both? 
Should this column be `DateTime`, or `DateTimeTimezone`? It seems that the `invocation_id` should be stored as a timestamp with timezone, not just a datetime. 
Any reason the defaultURLTemplate redefinition was left out in the last commit? 
One question: what happens is the user clicks `Add`, and then immediately hits `Enter`? Will the dialog open again? 
Is this the best we can do? We can't really do better than this because we don't know the HTTP host and port. 
why not test the `group_value_for` method in its entirety, and have a single example for that? 
As discussed with @jankollenbach, this code is not used, so it should be removed. 
What's the meaning of this? 
It's a bit sad that we're duplicating the query like this. 
Most of the public APIs accepting `string text` allowing null `text` 
Maybe add an `@Override` annotation to `delete()` to make it clear that the method is intentionally empty. 
Should this function return an error to indicate an empty queue? 
Why do you need to set the solrCloudClusterSize to 4? 
Looks like it should be width: 0. 
Shouldn't we have a unit test for `unit`? 
Why is the new code not using the stolen register? 
Should this method be exported? 
Is this rename necessary? 
Since this is an export, I don't think it needs any layout. You should just be able to do a `render layout: false` so that the file is just the data. 
Why is systemTokenInst defined in this file ? It should be in a context file. 
what is the difference between this and `ReportPipedMeta`? 
That's not what this test is doing. It's a test to ensure that closing a cursor breaks iteration.
Why are you changing this? 
Is this Rails 5? If so, we might be able to use `references` to avoid the `joins` 
What is the purpose of this class? 
What is the `--boltdir` option? 
Isn't this the same as the previous function? 
Why is this test changing the HTML? It seems unrelated. 
Should this be called `build` instead of `buildCLI`? 
do we really need to add the @pytest.fixture(autouse=True) on the test_init? 
Why the change from 'name' to paramName? 
Could you add a comment to explain why we need to remove this assertion? 
oh, so it's like a mini-map that gets marshalled into a CNI config json file... 
why not keep this case? 
why is this not a pointer? 
It's a little confusing at first glance how KEYWORD_NONE is an index for VerilogKinds. Can you add an explanation for why that is the case? 
Why is the current time multiplied by 10000? 
Why do you need to wrap the whole thing? Couldn't you just wrap the error? 
There's no need for this unless it's used in multiple places. 
Why was this code moved here? This method doesn't seem to be actually used. 
Why not early return false if both bounds are null? 
Can we not simplify this to something like: `return literalSet.stream().noneMatch(v -> eq(ref, toLiteral(v)))`? 
Should this be a separate method, or at least have a more descriptive name? 
Is this still used? If not, please delete. 
Without knowing the context of the code, I'm not sure what `ctx.Deadline()` is for, but it looks like it's not being used. Also, returning a nil error is potentially dangerous if there's an error that should be returned. Maybe add a comment explaining why this is ok to do here. 
Missing space. 
Why the shared preferences object is made public? It's better to have them encapsulated in a class and use getters and setters to manipulate them. 
Why are you moving the test to test_unknown_bucket_raises_403 ? 
Why are we passing in `keys` and not using it? 
``if (method.ContainingTypeDefinition.IsValueType && method.IsConstructor)`` is duplicated and can be extracted into a method. 
Why is the name of this class so similar to the name of the repo? Shouldn't this be something like `MongoidStringifiedSymbol`? 
why the name change? The two patches are not related. 
Why do we need to wrap this method in a `@cmdutils.register()`? What does it do? 
Does this belong in the `internal` package? 
Where should we use the type name as lowercase string? I am not sure where this comment is coming from. 
Why do we need this file? 
Why did you rename from "TodoList" to "TodoListView"? 
Should we be adding `.toStream()` to the `.iterator()` call to make sure we're not using a potentially incorrect implementation of `Stream`? 
Why do we need to eval the first line of code? 
can we move the `user.can_modify_guidance?` check to a `before_action` on the controller? 
Why do we need this? Can't we just make this a `luigi.IntParameter` and leave the `default` as `0`? 
What is the difference between `pingWaitTime` and `parameters.options?.pingWaitTime`? 
Why is the `certmanager` controller in a separate module from the other controllers in the same directory? 
What is the intention of this method? That code is very complex, but it is not clear what it is trying to accomplish. 
we should probably make this concurrent, I guess this is a big table? 
Is every object in the list a hook? If not, the name of the list might be a little confusing. 
Why was this method needed? It seems like it would be better to just call the existing methods directly. 
Close is not implemented either. 
What if the passed `iterable` is not a Collection? 
Did you mean to leave out the if condition? 
Why do we have to override the `Matches` methods? 
Why do we call `shutdownNow()` instead of `shutdown()` (as in `stop()`)? 
Doesn't this return an error message? 
Why is `src/**/*.wav` being added to `copy`? 
What is the purpose of this test? 
Why is `use Shopsys\FrameworkBundle\Component\Environment\EnvironmentType;` added? 
Why do we need this? Can't we just use the `grpcStubTypeName()` for everything? 
Not sure this is the best way to approach. 
Let's remove the `BiMap` tests for now. We can add them later if there is a need. 
Can we use the `item` parameter to pass in the type of item being deleted (form in this case) to avoid hardcoding `form` in the message? 
Should this be called getChildResources? 
Can you please explain why we're deleting `node[ATTR_KEY].ref`? This seems like a behavior change that should be documented. 
Just adding HRNet to the list of components. 
It could be useful to also add a comment explaining the purpose of this class in the Blockly framework. 
Should we add the description for this package in the package.go file? 
Why is the version logged as finest? Shouldn't it be info? 
Can you please clarify what exactly this function does and what the purpose of the changes are? 
Can we add some descriptions to every flag? 
Why do you need to import MessageFrame and GasCalculator twice? 
It might be better to delete the `o.NoLog=false` line since it doesn't change the behavior of the test. 
Do not we need to check for error here? 
Should we do something to make the "Active" label more visible? Right now, it's a little hard to read. 
Is there a point to use a `foreach` loop when `array_map` does the same ? 
Maybe you could add a comment that the hard killer is a workaround for a killIfRunning thing that often fails on linux... 
Looks like you have a bit of a mix of styles here. In this case, since the code is very short, I would just add a new line after the first import and align everything after that with it. 
Should we add a short comment about what `AuthFree` means here? 
should we keep the old log message? 
Is the quiet_o variable passed in as an argument? If so, I think it should be in the function definition. What is its purpose, and why include it at times? 
after is a bad name for this parameter. It's not clear what it means. Can you give it a better name? 
Can we make `alwaysNull` return `Expressions.alwaysNull()`? 
Is jsonschema really needed? It is a dependency of pyarrow, but I was under the impression that we only needed the core functionality. 
how about `GetAll()` and `PutHash()`? 
Can remove this line, it's not needed. 
Very much like the way this is done. Maybe should also have a comment explaining that this is used for converting the variable value. 
Shouldn't this be a `ConfigFileApplicationContextInitializer` integration test? 
At least some of this seems to be going in the wrong direction. I think we should defer the validation of concurrent barrier until QueueSubmit instead of doing it here. 
should we rename to `GetLabels()`? 
Is this the only place where the KeyError is expected, or can it be raised elsewhere? 
Could you keep this constructor and add a new one with `transparent` parameter? 
Not convinced this is the right fix. The original code would return NULL on error, while this one would fail silently and return a non-null. It seems like the original code was doing the right thing. Am I reading this correctly? 
There are 2 constructors in this class? 
Do you know what this performance hit is? 
That is really a lot of code duplication with other types. Can we please come up with a common way to do this? We don't need to tightly couple the type of the service to the definition of the service... 
Does this method also do distributed training? If not, the comment should reflect that.
Do you think we should use the wildcard import for this? 
Why add serialization settings? 
Is there a particular reason you removed the import here and re-added it in `send_email()`? 
What's the difference between `params[:filter]` and `params[:sort]`? 
What's the difference between `k.halt` and `ctx.Done()`? 
Why not just make this a runtime exception? 
It is not clear what the purpose of this test is. 
Include the assert description to the summary. 
Is there a way to update the error message to be more clear about what is happening? 
Is there any reason for not using a random namespace here, like in other tests? 
Why is this deprecated? Is there a replacement interface we should use instead? 
Not sure if this is the right place for this, but it seems like you should be able to set `sys.excepthook` to something that will allow you to do this. 
we need a test case for the new code. 
What's the reason for making the selector pointers? If this is intentional, then I think we should cover this with a comment. 
There's a lot going on here. It would be nice to have a comment explaining what the function is doing. 
Typo: `overwritting` => `overwriting` 
Why the change to the etcd snapshot command? 
Package name does not match the class name 
Why was this change needed? len(signingName)==0 is not possible? 
What about moving vNode to the top of the function? 
Should use `Response.status(Response.Status.NOT_FOUND)` instead of `Response.status(404)` 
Don't use stars in imports, please. 
can't this be done with a compare and swap? 
Same comment as above - not sure if it's worth it to keep this attribute separated from the one above, but if you say it is, then I think it would be better to explain why. 
Do we need to check if `s.sys.replies` is nil before deleting `s.sys.replies, replySubj`? 
can we just do `deep_mapped = {k: new_val for k, new_val in deep_mapped.items() if new_val is not None}`? 
Does it make sense to move the syscall and hcl imports into the agent package? They are only used there. 
it is not clear to me why it is needed to add eslint-disable here? 
Can you rename this to `default-credentials.ts` or something similar to make it more specific? 
Does this class need to be a separate class or could it be an anonymous inner class? 
why don't you use `Array.isArray` here instead of `instanceof Array`? 
1. Why is this not in core? 
What is the expected result if the cart is empty? I'd expect `null` but I'm not sure. 
Is this just for debugging? 
Any reason for the deprecation? 
Why does this need a fix? 
Why not doing the `RegisterNib` in the constructor as well? 
why don't we use the default value of `arg` for `func2`? 
Is there a reason you're returning an empty string for the country in the case of an error? 
It's not really clear what this is for.
It's a bit confusing that an error is logged when the node is not a node in the chain. 
Is there a way to make this more like the real one?  It seems like we could use the real one here, but just not persist the results. 
Is it possible to setup a unit test for this? 
Could use `:aggregate_failures:` instead of `expect(...).to include(...)` 
Why do you use hacky `json.loads()` here? Why not just `j = self.fetch("/options")`? 
Why is this called "burst rate"? It's a duration. 
Any reason why you're changing this? 
What is the purpose of this function? What is the overall intention? 
what is the value of changing the name to the type here? This seems like an unrelated change. 
Shouldn't the first sentence end with a period (since this is a docstring)? 
Would it make sense to have a helper method that creates a span with a given parent & attributes? 
It looks like "sycl::device_selector" will return a "sycl::device" rather than a platform, so this code is wrong (and will not compile). There is an example in the README, but it is not quite right either. You need to use "sycl::device_selector{}" with the appropriate "info" struct. See "device_selector::select_device" in the SYCL spec. 
It's not clear to me what "minimal duration filter" means. Does this mean that you can configure a filter to ignore songs shorter than, say, 10 seconds? 
let's remove this line: `#if 0` 
Why not just return `it->second`? 
It seems like you could just check to see if the depth/stencil attachment is READ_ONLY before you even call this function? 
As per our offline discussion, this function is not required. We will be moving this code to InitContainer. 
Is this still needed after the recent changes? 
What is the purpose of this change? 
Why are we still doing this? I thought this was fixed by the new createVNode method. Is this related to the load method? 
Why not just call taskHandler.Stop here? 
Should this use `FileExistsPolicy.KeepIfNewer` instead? We don't want to replace a newer file with an older one.
That's a breaking change to existing behaviors, so it should be clearly mentionned in the release note 
There's no need for a blank line after an instance method declaration. 
There's no test to ensure that the header is actually on top. (I don't understand why it wouldn't be, but still) 
Is there a reason for using a list comprehension with a range instead of a list literal? 
Why did we change the order of args and cmdUsage? 
Not sure if this is worth it, but maybe we should document the config options here. 
Always handle the error. 
Just delete `j.BlockServer.Shutdown()` since it's a no-op. 
Why aren't we using `typeof filter === 'function'` rather than `filter == null`? 
Any reason you're using the `json` module directly instead of using `json.load`? 
Why did we need to change this? 
Can you mention the `address` argument in the summary? 
Looks like method is only called by this class. This should be private. 
Can we just check `user == cart.requester` instead of using `Cart#requester?`? It would make the code a little simpler. 
~~The code here doesn't seem to match the comment. The watches should be "less than or equal to" nonce.~~ 
Why change the name of merrors to errors? 
where is the usage of UIA module?
Why is the login page being loaded twice? 
What's the significance of this comment? 
It can be a good idea to add an example in the description, just to give an idea of the context where this method is used.
Missing doc comment for `package types` 
Should we just use `cast.ToStringSlice` here and not have this function? 
Is there a reason we're adding the `ASSERT_NOT_TESTED`? 
Can you add a comment to explain why this is needed (what would happen if the name was empty?) 
What does the test do? It's not clear from the description. 
When using `JsonSerializer.Create()` like this, we should probably use a `private static readonly` field. 
Is there a reason why we're using `add` and `keep` comments rather than `// ...`? 
Not required - the same thing is happening in the `must_be_admin` method. 
if this is not exported, maybe we can use `int32` instead of `int`? 
As discussed, we can't do this because the TextProvider is now a singleton. 
It looks like this change is moving the `-o` flag from the `ssh_connection_options` option to the `ssh_connection_options` key. Is that intentional? If so, can you update the docs to reflect this?
Why do we need this fullTableName? Can we not just provide the catalogName and originTableIdentifier? 
It's safe to fail if this is nil. 
can we rename this to have_error? 
Seems like this has a `form` element, but the `end` is commented out. 
can you please remove the `add` lines from the code and only leave the `<add>` markers in the comment? 
Can this DCHECK be an assert instead? 
why do we need to specify remoteAddress if we are using a conn? 
Is this a commented out test? 
could you extract `ctx.Handle(404, "Unsupported", nil)` as a function and call it in both places? 
What do you think about using a `with` block here? It might make the code a bit cleaner. 
Why change the `RECENT_LISTENS_KEY`? 
There's a trailing whitespace at the end of the line. 
nit: this is a little confusing. maybe we should just explicitly check for nil? 
It might be better for `ThreadSafe` to be an attribute of the `LayoutRendererAttribute` 
Is this meant to be `queue_music`? 
can we define a single var for `definition.ConfigKey`, then we wouldn't need to change the value of `definition.ConfigKey`? 
Can we add some comments here explaining why this is a blocking call and why we have chosen to implement it this way? 
why the `if id > (1 << 32)`? 
There is no use_sigmoid in the original implementation. 
Should this test create two separate files that happen to have the same contents, or should both users be renaming the same file? 
Can this be made more generic and not specific to AWS? 
Could you refactor this so that you could add a separate version of this method that doesn't take the tid, so that you can call this one from the action handler too? 
Shouldn't this be `->nullable()` too? 
Can you please change the name of the method from listPartition to listPartitionDataFiles? This is because the name of the class is FileMetastoreUtils so it might be confusing to have listPartition as the name of the method as it could imply that the method is doing some partitioning operation. 
Can we just declare sys_param as a macro in os - private.h to avoid this noise? 
What does `clpsK` and `clpsV` stand for? 
Also, why is this a `PFS_RESOLVE_LOCAL` special case? 
What does `oldDom` represent here? 
It's a bit weird that this is a function on the *K8sNetworkPolicy, but it's taking a rule as an argument. I would think it makes more sense as a static function on the network policy rule. Then again, we'd need to pass in some info about the policy to generate a rule, so maybe this is fine. 
Is there a way to make this more obvious? Maybe $this->record should be re-named to $this->marcRecord? 
Looks like a lot of changes. Can you explain what this code does and why it was changed? 
Is there a reason why you're not using a type switch? 
Could we add some documentation about what this method does and how it is used? 
Looks good to me, but I'm not familiar with this codebase. 
Why add `@Override`? This doesn't override anything. 
Would be good to add some comments to explain what each of the constants are for. 
Is this the same as "Dynamo.Models" in core? If so then we need to remove it. 
Is this function ever called? If so, it looks like it will panic. 
It looks like this change is not being used. Should we remove it? 
Is the `getComparator` method correctly implemented? Seems like `null` will be returned. 
Why `xpress` is not in `rocksdb_compression`? 
Is this comment still accurate? It seems to be talking about a single test, but the comment is written in a way that implies it's about a set of tests. 
Can you add a comment explaining why the `localConnection_` check is needed here? 
Why are we returning True and False here? 
Should we also rename the method to `generateTypeSamples`? 
Could we have a comment to explain why we need to import a "github.com/influxdata/flux/fluxinit/static"  
Why did you change the `assertEqual` to `assertTrue(1 <= len(rules_engine.rule_book.resource_rules_map))`? I think this is a test so it should be strict. 
Why do we need to re-embed the block changes here? Can we add a comment explaining this? 
Why are the window functions being added? They don't seem to be used by anything in vnl, and are not in the vnl namespace. 
Is this for a migration? if yes, i think it's ok. if not, why are we adding this? 
Why do you ignore the error? 
Is it worth mentioning that this is a no-op unless the -checkers flag is set? 
can we use `std::lock_guard` here? The current code is a bit hard to read. Also, wouldn't we need to `break` if `stopped` is true? 
Should we use `logging.info` instead of `app.logger.debug`? 
nit: could we rename this to `isRowHidden`? 
Why do we want to return `Math.Min(FindBestHeader(), ...)` here? 
Could we name this `FakeJettyServer`? 
Not sure if this has been discussed before, but I'm curious about the new use of the `Post` method -- it seems like it's being used in place of the old `Save` method. Is there a reason for this? 
Why not in `JavaNode`? 
Visibility is an enum, can't you compare them directly? 
why did you remove require.Contains(t, e.Candidates, addr) from here? 
Why is collectorExecutor protected? 
is it possible that backend->impl is NULL in this place? 
Can we please use a constant or a method to define the default value of the julia property? This will help us avoid having to change the value in multiple places if we ever need to modify it. 
should we have a separate test for the background flusher and a separate test for the background flusher? 
21: width < 0 is dead code. 
Is this a regression? If so, can we revert and file a bug report? 
Do we have a test for this class? 
Can you add some comments explaining what this class is for and why it is needed? 
Could you explain why you do `first + 9 < last` instead of `std::distance(first, last) > 9`? 
Seems like `initializer` should be a subclass of `Block` to me, and `app` should be a `@config` object (that would be a special `@app` object that's actually in a different object called `App`) 
Why not use `log.Noticef` / `log.Debugf` here?
Why not use `innerText` instead of `text` ? 
you should add a comment here about what it does 
Why is the `nxp.MuxIpLpi2c.Mux(0)` line deleted? 
Why are you moving the `if self.settings.get("sequential", False):` block down? Maybe some comments would be nice.
should we update the year? 
Does this belong in the `internal` package? 
IMO this makes the adios2.h header no longer an independing one (too many dependencies) 
Is there a reason to have the comment "Function to get the hostname/ip address/url to access dashboard"? It doesn't seem to describe what the function actually does. 
why is the keyword `maxsplit` used in the `split` function? 
why is this not just another `prometheus.GaugeVec`? 
Can you remove the `+ SET_PARAM_CMD_LEN`? It's already being done in the `strstr` call. 
It might be better for `ParseNamespacedNameContainer` to return a `types.NamespacedName` since that's what the `Get` function takes. 
It looks like the `confirmed_frontiers` parameter is not used. 
Can you please add a short description for the docstring? 
Can this be made internal? 
Why is <s>"reflect"
Yeah, that was my thought. Seems like this is a better place for a map than a string. 
So this is the constructor for a single YARPC object? 
can we change the return type to be ManifestReader, so that the caller doesn't need to cast? 
Why is this not a constructor? Why do you have a `__init__` method and return a class instance? 
There is no reason to throw an `Error` object. A string will do. 
Is this a little redundant with the parameter already defined as a readonly value? 
 I think we should rename the file to Tags.cs This will help new developers to find it easier. What do you think? 
Would it be possible to use a pre-made image? This is a very synthetic test. 
Why are you changing the embedded video? 
Why does we need to wait here? 
It's odd that the comment above this doesn't describe the method itself. Using a list of lists is a bit odd. 
Why do you have the stock check in the order class? We should have it in the product or the cart class. 
Is it possible to use a clearer option name? 
Could you add a comment here explaining why the class is conditionally loaded? My assumption would be that it's to allow proper unit testing, but it would be nice to have that called out explicitly. 
the method name doesn't seem to match the summary. is this method only used in the response? 
Maybe should be `t.equals(to)`, but I'm not sure if `t == to` actually works as well. 
Can we also add a test to make sure that the props object doesn't change after calling this function? 
That is really a lot of protocols, it seems like the new code is a superset of the previous one. 
At least the old code did it in a thread-safe manner, but I do not see that the new code does. 
Looks good to me. Please remove the commented out code in the TODO. 
Why the unguarded call to `bsp.processQueue` and `close(bsp.queue)` without checking that `bsp.isRunning` is true? 
isn't 'if key !~ /id/' a bit too broad? should we add the check in the method that call it?
Why do we need this class? 
Is there a reason for having different annotations for ClusterIP and CloneIP instead of using a variable? 
Does the controller need specs for the case where the request does include an `omniauth.origin`? 
Same question as before: Why is this constructor not private? 
Is this the only place this is used? Maybe it makes sense to merge it into `clock` as `AfterFunc` or something like that. 
There's no error/message thrown to client in this case? 
Is this supposed to return null? This seems like it could be a source of trouble. 
It's possible to add a new flag to set the default scheme to https, right? 
Could you join the error check and the stop? 
Why did you remove the `auto nested_qualified_name =`? 
What is the intention of this commit? That code was moved from the constructor to the initialization list. 
As noted in other reviews, this should be an assert, since we never use the return value. 
For this one and the other one, it's not clear to me why the validation happens for one flag regardless of whether it's enabled or not. The validation message also doesn't seem to be quite right for the flag 
Can you add a test please? 
What does this have to do with context.Context? 
What is the rationale behind increasing `compactSizeMin` by 2x and `compactNumMin` by 2048x? 
Can you explain the change? Why we are removing the `crypto/tls` and `github.com/aws/amazon-ecs-agent/agent/utils` imports? 
Why do we set `spcObj.VersionDetails.Desired = upgradeVersion`? I thought the version details were already reconciled? 
nit: AWS IAM (Identity and Access Management) 
Can you explain why you're doing this? 
It's hilarious that we have this now. 
Just a question maybe I missed something , why not using the FLATBUFFERS_PLATFORM_NO_FILE_SUPPORT in the ifdef ? 
nit: one empty line between methods. Also, the apiTermsOfUse is added to the bottom of the class. 
Why do we need to import build in this file? 
Why do we need to test if `initialBase` and `base` are different? If they are, we replace `initialBase` with `base`. But if `initialBase` and `base` are the same, then we don't do anything. Why is this necessary? 
Why not call it `getInfo()`? 
Why do we need this? It feels like the sort of method that could be easily abused, and doesn't really add anything useful. 
Why is the lock being unlocked here? 
Why wildcard imports? 
Is this a typo? `BUILDOPT_LIBSYSTEMD_AND_LIBMOUNT`? Shouldn't it be `OSTREE_FEATURES`? 
Why doesn't this report the current pass through mode? 
you should run this by @vbatts too, as I'm sure he'll have input on this as well 
could use `std::string::clear()` instead of assigning an empty string. 
Why do we add an extra run command, instead of just using check_call with a try/except? 
Why don't we use the `proposal.ID` and `proposal.ProviderID` in `fieldID` and `fieldProviderID`? 
Is there any reason to change this file? 
Doesn't this need to be `getValidatorContractAddress().map()`? 
Should this be in a separate method? 
should this be named `FakeAPI`? 
What is the purpose of `doSync`? It is never used. 
nit. This property name is a little long. can we just make it `write.metadata.metrics.mode.default` and `write.metadata.metrics.mode.column.` ? 
Why is the `oldState` assignment necessary? 
What is this used for? Add explanation or link to further documentation. 
Shouldn't this be returning a `TelemetryDataDto`? Then you could call the method `getTelemetryData` and return the `TelemetryDataDto`. 
It's not obvious why this is done, could you add a comment? 
isSorted() already checks for the plugin, so we don't need to check here 
Can you provide the input data, so I can try to reproduce the issue? 
It seems like you could do this in the constructor, no? 
Why is this not a method on the `SystemNamedDict` class? 
What about the `@SuppressWarnings("deprecation")` ? I don't think I would mind if it was removed 
Why is HIP reporting this as unsupported? 
It's not clear what you're trying to do here. Can you provide more context or information? 
Could be a little clearer... Maybe `return nil, errors.Wrap(err, "freezer not supported")`? 
That looks good. Maybe add a comment that says this is the default user agent for rclone. 
Do we need to keep the old config struct around? 
getAlgorithmInstance returns the instance of the underlying algorithm that is performing the computation. This method should be overridden by the region subclass. Note that the return type depends on the Region and therefore cannot be determined in advance. 
what is this block doing? 
Missing a space between "except" and "in" 
Can you please rebase on top of the latest master? I believe this may conflict with some recent changes. 
why are you adding action, movement, weapons, globalevent, and events? 
why is this method necessary? Why can't we handle this in the caller? 
why we need to change `/test/integration/rules` to `/test/integration/api/external` ?
Can we extract these two `if` blocks into separate methods? 
why not just return `min(limit, max_query_limit)`? 
Can we move these three lines into the method? 
remove `Closed`? 
Do we need to have the `add`s in the test name? 
Would be good to add a comment about expectations of the return value. 
Should we be renaming to `ManifestEntry`? (Note that we will need to figure out a way to make this work with Curator's PathChildrenCache, which sorts paths alphabetically). 
can we put this in a function to avoid the code duplication? 
Is there a way to handle this without panicking? 
~~s/foo/bar/~~ This is a test file, so I think all the error messages should be `param #{param_name} has no matching type` 
is there a reason we need this `if c.options.Filepath == ""` check? i think this is only called in 1 place, so we could just check there 
Make GetRootNode return the same type as GetOrCreateRootNode (without the error). 
why does this one needs a wrapper and the other one doesn't? 
Looks like some leftover code here with the python 2 vs 3 compatibility issue. Should this be removed or commented out? 
Why change from ConsenSys AG to Hyperledger Besu Contributors? 
Not sure what these are used for, but should there be a `VersionInfo` definition for all the other types? 
What is this part trying to do? I think it's better to leave a comment so that we can understand what is happening here. 
Personally I would make the chart options and chart data configurable props so that this component could be reused for other types of charts. 
Can we add some Javadoc explaining the purpose of this class? 
Can we remove GetValueAsBool and GetValueAsInt64Slice? 
Can you explain why you're doing `location.left + ...` here? Is there a specific reason why you're not just using the `POINT` struct directly? 
is the method called `init` intentionally? Can't say I've seen that convention before. 
Should we call this `RelaxedReclaimPurgeByNode` to be consistent with other function names?
Why are you adding batch size here? 
What is the DCHECK() for? It's not obvious to me. 
what is the difference between `gcloud-beta-prod` and `gcloud-prod`? 
Can you add a test case for when the schema version is not a number? e.g. schemaVersion: "1"
Before the `return` line, I would add a log.info here to say that this is the static callback. 
it would be good to know what's in updates, by using zap.Any or zap.Reflect 
Is this a test? It looks like it's setting up for a test but I don't see the test. 
Why aren't we using the `netns` package from libcontainer? We already have the needed functionality there. 
Can you show the actual error, this is not very helpful. 
the order of the returned list is important, as it must be sorted in ascending order. 
Why not just call `tab.caret.follow_selected(tab=tab)`? 
When I added the new accept-no-param-doc option, I was worried about this case. I think it's probably okay to ignore this. 
It might be better to make the GRPC listener a part of the workload agent struct, so that it can be closed in the close function and doesn't need to be closed on a separate channel. 
why do you need to make this change? 
Why is this called ImageTransform? It doesn't seem to transform the image. 
It's a bit wierd that the manifest file has the id, but we ignore it. I'll follow up with a patch that makes this a bit more consistent. 
Could you explain why you are using `this.workspace_.scrollY` instead of `metrics.viewTop`? 
Why do we need to append traceLogs twice? 
is it possible to have an error "No data found" 
What is the return value of this? It's not documented. 
Looks like we're losing the body of the request by setting it to None. 
why is the class called DagsterTaskMetadata? It doesn't seem to have anything to do with dagster tasks. 
Maybe add a comment explaining what the last line does. 
can we move this `TODO` to a separate issue? 
Should the parameter be called `myId` to be consistent with other methods in this file? 
err := syscall.Exec(cmd, args, env) should be moved here, to avoid duplicating the return 
Why was this changed? 
Do we need to keep this PR up-to-date with master? The diff is getting a bit too long. 
Some platforms (e.g. Windows) don't have `spawn.h`, so this change needs to be conditionalized. 
Can we add a comment explaining what the SingleImageImportLoggable function does? 
It's like `spreadPath`, but preserves object under property path
What's this change for? 
Should this be `NodeType() NodeType`? 
Should the comment above say "Notify is called by KBFS when a new key is received on a device."? 
Do you want to add a test for this? 
Perhaps we should do something similar to the above, and define CACHE_ENABLED with a value if it isn't defined, rather than trying to figure out what the value should be. 
What does this test? It's not clear from the test method name, and the code is not clear neither 
getHostName() is a bit of a misnomer.  
Looks like this is not the same condition as in the previous if statement. 
What is the logic to decide if this should be generated or not? 
Is the line `remote_config "github.com/mysteriumnetwork/node/config/remote"` necessary? 
Can this be restructured to use <add>countly.events.js</add> instead of concatenating all of these files together? 
Should we format this to be more like `IsFeatureFlagEnabled(nameof(ConfigurationKeys.FeatureFlags.AspnetRouteTemplateResourceNamesEnabled))`? 
Why aren't we using os.Statfs() instead of custom *nix-only code? 
Can we call this `NullLocalDataSource`? Since it doesn't really implement `ILocalDataSource<T>`. 
Is `handleElementVNode` a good name? It seems to be a generic function that does more than its name implies. 
Should this be in a "manager" or a "freezer" struct? We already have a "manager", so maybe "freezer" would be better? 
When you catch a `NullPointerException` you should probably also log the caught exception, otherwise it is very hard to figure out what is causing the NPE. 
Is there a reason we're not using `mtask.control` here, instead of a global variable? 
Can we use `LoggerFactory.getLogger()` instead of `Logger.getLogger()`? 
Could this be replaced by a regular expression? 
why use `1e-3` twice? 
Is this a change in behaviour? 
Can we call this `refreshState` or something? I don't think `refresh` is specific enough, and it's possible to read that as "refresh this object from some external data source" rather than "refresh the internal state of this object". 
Unsure of the purpose of this method. 
Why not use `innerText` instead of `text` ? 
What's the purpose of this function? I don't see it being used anywhere in the tests. 
Why don't we pass the localstore directly here? 
using `region`, `store` to represent `table` and `families` might be confusing. Can we change to `table` and `families`? 
Can't we just do this in the function where the sdkAuthConfig is created? 
Can we add some Javadoc explaining the purpose of this class? 
 I'm not sure why you want to change this. The value 1.0 seems good enough to me. 
Is this checking for the axis input in the wrong place? 
can we make this a bit more readable?If there is a client secret, decrypt it and set it to clientSecret. 
It may be worth adding some comments in here about the engine to explain the difference between the `get` call being delegated through the engine, and the `set` call being delegated directly on the delegate. 
Will this work with any products that have special characters in them? 
Yuck. 
Am I right that the core_factor is a percentage of the graph that is contracted? Maybe this could be renamed to something more meaningful. 
It would be nice to have a note about how the "pass" mark is cleared. 
Could we refactor this so it's not using a separate library? 
Why do we need to use `typeof(Context)` here? Can we use `this.GetType()` instead? 
Can we factor out the storageAPI initialization logic into a separate function, so that we can call it from both CreateServerEnv and CreateClientEnv? 
Shouldn't `session` be optional? 
What is the purpose of the tag variables? They seem to just add the same formatting as the previous variables. 
Is this what you intended to change? The code currently looks different than the commit message. 
Is it really a string? Can it be split into an array? 
use `identity-obj-proxy` instead of `jest-serializer` 
Is the default value of `initParameter` really important? 
Also here, this is a public interface and should be in the documentation 
As discussed we need to change the docstring to mention the class name 
What does this method do? 
Why are you returning the command here? It's not used in any way. 
Same: we should probably ignore the whole file. 
Why is this creating a new repo config file? I would expect it to add the repo config to /etc/yum.repos.d/google-osconfig-agent.repo and then run `yum -y install google-osconfig-agent` 
Does this need `jsonStr` and `jsonAttr`? Can't you just pass `op_data[1]` and `op_data[2]` to `json_extract_path_text()`? 
Can we also rename the argument to `rootRecord`? It's a bit more descriptive than just `domain`.
Why is this not checking for the keys existing in the dictionary? 
It might be worth noting that we're expecting to get our config from elsewhere. It's not 100% clear that this is a temporary config until we do that. 
What is the `reset_content_length` variable for? 
Is this var unused in the rest of the file? If it is, don't worry about it, probably just indicates we need a more thorough mypy pass - but just checking that no other instances needed renaming. 
Why do we need to remove the "::ffff:" from the address_string? It seems like that could cause problems if the address is not in that format. 
There is no need to define the factory here as the trait is on line 480. 
Is it possible to document what the key is for? 
looks like we don't use seven.abc.Mapping anywhere, so can remove this and the import for it. 
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping. 
For the error reporting in `tealLogicSigSize` and `tealAppSize`, can we report the current program size and the max size in the error message? 
It's a little confusing that an error is returned if the blob is closed. 
Can we use `v1.Status` for this? 
Why is this is a single file? It makes it harder to review. 
Is this test actually verifying that the table was created with the specified partitioning? 
Can we please merge the "parent" and "name" fields into one field so we can always use the same path notation? 
Why do we need to check for nextToken specifically? 
Should this be a builder for a specific object, or should it be generic? 
Can you give an example of what the old and new output is? 
Is there a reason for the comment "use v2 writer to preserve sequence number"? Does the v1 writer not preserve the sequence number? 
Should the master index know the obsolete list? It now seems like it should. 
It's not clear to me what exactly this function does. The summary mentions "unmerged paths" and "most recent pointer in the merged path" but I don't understand the relationship between these two things or what this function does. 
It might be nice to include a reason for the cancellation (if possible) 
Can we get rid of this `const td` and just add a `td` argument to `prepare`? It doesn't seem to be used anywhere else. 
what's the purpose of checking if the template exists before rendering? 
can we make this more informative by adding the `fs` to the message? 
Do you have a test for this? 
minor: the `if` at 2nd to last line can use `dict.get()` to shorten it. 
What's with the try/except indentation? Also, I think this is still going to fail if the URL is not a valid one. 
Can we have this in a separate config file ? 
is `using` supposed to be at the top of the file? 
Why is this necessary? Can't we just let the window automatically get focus? 
Why does the class name end with "Handler"? 
What is the meaning of this test?  
nit: This comment doesn't make sense. 
Are we sure we don t want to check for minimum size before setting up the encoder? 
Why are we adding empty objects to the regions? 
What does _second phase_ of import mean? 
Why this route is removed? 
Is this necessary? It is already included in the build. 
Is there a unit test for this? 
Why do we need the folly::to<std::string> here? 
There's a lot of stuff going on in this spec, can you split it out so we can tell what each part is testing? 
Fix the spelling of `api`. 
Why are we throwing when we don't have phdf5? 
Can you add the json tag for the `Id` field? 
With this change, it will be worth adding a note about the intended meaning of the extra `evex` parameters. 
Really minor, but we no longer have a comment here about how `h2o_http2_decode_goaway_payload` does not validate the error code. 
Should we also mention that `Keys.COMMAND` is supported on Mac and ignored on other platforms? 
It's not needed to use concat_ws for mysql and || for sqlite at all. You can use concat_ws for both. 
It might be worthwhile to 'echo' the $PATH to the actual log file to see if it matches our expectation. 
Should this be "Sub Chain Config path", to match the comment? 
Looks like this change is not related to the summary. 
How about linking this test to the code in `PaymentChannelVoucher`. 
Why not introduce another overload to the constructor that takes a Dictionary<string, string> instead of the current one that takes a Dictionary<string, object>? This way, you wouldn't have to have the special casing for tags like Error. 
Could you please add a comment here to explain why this method is called `toUnderscore` when it seems to be converting casings. 
Using a flag enum in this case seems wrong. It implies that a given issue could be in more than one category, which I don't think is true. 
Why not just use `testHelper.UnknownDeployment()`? 
Really? I guess we no longer have a kube-upstream-controller binary. 
Why don't you just use a single `len(rule.DstIpPortSetIds)` instead of the 4 len calls? 
As you said, this will get unexpected merged value. If you do not want to merge, please throw an exception to say "duplicate key exists". 
Is this the same as issue #96? 
Should there be an accessor for the path resolver? 
It looks like this was a bug fix, it might be worth testing with the original config file to ensure that the fix worked. 
Do you need to check the response status between the `assertThat` and `statusCode` methods? I think you can do it in one line, like this `tryToLinkAgain.then().assertThat().statusCode(FORBIDDEN.getStatusCode());`
yes, I will need to update some tests and probably some other code. 
Seems to be a duplicate test. The same test exists in `GetTestHostProcessStartInfoShouldIncludeParentProcessId()` 
Is there a way to make the test more reliable so we don't have to use the `wait` function? 
It is not clear what ITM_EQUAL and TRUE stand for. Please provide the meaning of each parameter. 
Why does the class name end with "Handler"? 
Is there a way to clean up the duplicated code ? The two blocks of code are identical. 
Looks like we are already depending on `ember-string-utils`, so it looks reasonable to use `getAvatarColor` from there. 
Shouldn't this extend `RuntimeException` to be consistent with other classes in this package? 
Why is the default attack timeout not set to -1, as it's an unsigned integer and -1 is a valid value? 
Should this not be set via `ConfigureFileUpdater` and not `Step`? 
Does this function need to exist? It seems like it's just a wrapper around `report.metadata`. 
It is not clear to me what is the difference between "Location" and "PhysicalLocation" - can you clarify? 
Is there a reason to use `final` here? It's not needed, but maybe it's a habit from another language. 
Is there legal reasons one would block a CN? Also, is there a reason this is checked after the SAN check, and not before (since the SAN check is more specific)? 
Seems like this has been added in a wrong place, this file is a wrapper around Caddyfile, not the actual parser. 
why the change? 
Just a thought, it might be worth adding a check that the segments are sorted by name (SegmentInfos sorts the segments by name). 
Can you please split this into two methods: one that calculates the `StackTraceUsage` and the other to calculate the `Layouts`? 
Are you able to add some tests for the new parseBuildLabelParts function too? 
why is the method called parse_opts but it parses args and does not return any value? 
Why do we need `need_unmap=True`? I guess we could remove it. 
There's a missing $ this->getProductsData($domainId, $locale, $startFrom, $batchSize); 
Do we need to pass the CancellationToken to `ReadAsync`? It's not being used in the method. 
the serialize function should be moved to a separate package. 
Why is `fieldId` not part of the constructor? 
Commented TODO, but really, should we just log and ignore? 
nit: maybe a better way to express this would be `This is for internal use only.` 
Could you add some doc for the `string` and `string[]` cases? 
Why return if `@user.org` is not present? 
Should we make MAX_WORLD_ID depend on qtutils.QT_VERSION? 
what does this have to do with the rest of the code? 
maybe this could be a decorator? 
Is the port that is generated at random in this code? 
Is it possible to provide an example of how to use this? 
What is this meant to do? · Does this create a new thread? · What is `nano::thread_role::set`? · What is `nano::block_processor`? · Why does the destructor join `thread` instead of `process_blocks`? · This should be better documented and possibly split into multiple PRs. 
Why not just `questions.first` ? 
These two tests seem to be failing in CI.  
Can we move this to a common base class for all tokens ? 
Should we add `[DisallowNull]` to the `this` parameter? 
Why not use `toLowerCase()` for both the searchTerm and the version, to make the comparison case-insensitive? 
Missing comma after `type='ResNet'` 
That lock needs to be disposed. 
Should we also validate that reset type is not "None"? 
Shouldn't these 1.4.1 changes be in their own commit? 
Why do we need to import Spark-related libraries here? It seems out of scope for this function. 
nit: it would be more concise to have `if self.with_semantic and 'bbox' in self.semantic_fusion and bbox_feats.shape[0] > 0:` 
why don't we have something like `enqueueBlocksToDeleteIfChanNotFull`? 
Not sure I like the inclusion of `physical_key_is_temp_file` here. 
Need to add some comments here. 
Prefer to use ``type(layout)`` here for clarity and consistency with other code. 
Why is this now a list of strings? 
What is the purpose of this `skip_authorization`? 
Can we do `opts.spinner.Stop("Error!")` here and just have the one return statement? 
Ok, so in case you want to keep this, please provide a package comment so we know what this is for. 
Is it possible to make this a table-driven test?
It would be better to not have a retry loop here, but instead to retry on the caller side. That way, you won't have to catch and throw the exception here. 
Why don't we define the `EMAIL_FORMAT` as a constant and use it in the validation? 
Do we need to specify the types of the UID and metadata fields? If so, why aren't they part of the struct? 
Move this to a method? 
Move the `registerConsoleCommand` for `october.mirror` to after `october.util`. 
Use `case http.StatusNoContent` instead of `if` 
As previously discussed i'm not sure this is the best approach. I'd rather we could just use the `org.hyperledger.besu.plugin.data.BlockHeader` directly. 
Is this a try/catch that is supposed to return a boolean? 
Why do you need `NvidiaVisibleDevicesEnvVar`? This is a very specific case for ECS, can't we avoid this abstraction? 
Can you use `lift` instead of `isDefinedAt` and `apply` - I think it's more efficient. 
Maybe rename this to `ProcState` to avoid confusion with `os.State`? 
Can we name this `MaxAssetsPerAccount` for clarity? 
Why do we need to set `config.infer_base_class_for_anonymous_controllers` here? It seems like it should go in `spec_helper.rb` instead. 
Is this the right function to call? 
Unsure why this method is not exported. If there is a reason, it should be added in the comment doc. 
Could you document the `load_time` field in the `StartNotification`? 
It would be nice to add a comment documenting the function. 
Extra empty line detected at block body end. 
field in {'id', 'collection_id'} 
Can you add a summary line? 
Is it not possible to use `go mod` to automatically update this? 
What does the comment line "please also reference selectedAPIsForwardingRedirectionPolicyWhitelistedAPIs" mean? 
Why is this necessary? Can't we just use `puppet_tmpdir`? 
Is this the correct backbone? 
Since you are using a consistent clock period and propagation delay it might make sense to have a global clock and propagation delay value that can be set in the network configuration. This would allow for more control over the network latency and could be used to simulate different network conditions.
note that the new `MediaInterface` type can be a `string` or an `int` 
Are we going to make any use of this for batch mutations? 
Missing `websocket_server` initialization. 
Does the whole file need to be read into a string like this? 
There is no need to cast the result of `!` to `bool`. Just say `return !(isspace(c) || c == '(' || c == ')' || c == '=' || c == '.' || c == ':');` 
what does this test? 
Doesn't seem like this change is needed as it's just formatting. 
Can we add a check that makes sure we don't hit any of the error cases below? 
Why not use unique_ptr's here? I don't see any reason to keep all the memory allocations around. 
Isn't this just `Array.forEach`? 
Can we make this package private? 
Do we really need an index_map? We should just use the index_column after it is attached. 
Can you please also update the comment in front of this method to reflect the new changes. 
Why do we need these labels? They don't seem to be used anywhere. How about deleting these? 
Could you add a comment here saying what the original purpose of the `attr_value['string'] is not None` check was and why it isn't needed here? 
Why we need to create this method? 
Should `addToStaticNodes` be optional? 
Should this be TryParseTraceparent or something to match TryParseTracestate? 
Can you make this take const LayoutEntry& to avoid the copy? 
Is this the same issue as the last one? 
Why are we hard-coding the UTF8 encoding here? Shouldn't we be using a user-specified encoding instead? 
There are some whitespace changes here that I'd rather not see in this PR. 
grammer: "Initialization is called by the KeyServer when a node is about to be shutdown." -> "Initialization is called by the KeyServer when a node is about to be shutdown." 
None of this has changed, please remove the diff and just add <delete>. 
the `unless value.blank?` is there to allow for an empty string if `allow_blank: true` is present. I do not know if that is the case or if there is a better way to capture that 
Can we use `ContainerImplementation` as type name? 
Why does this return `pyObject` and not `[]pyObject`? 
So does this mean that if a server has both exports and imports disabled, it will not be connected to at all? That seems like it would be an issue. 
Can we remove the comment about the software and the use of the software? 
Can you add a docblock for this function? 
Why use `re.match` instead of `re.fullmatch`? 
Is there a reason this doesn't use HTTPS? 
Do we need this to be an interface? Could this be a delegate type instead? 
Why not use the `com.codahale.metrics` logger? 
Is there a reason to use `torch.onnx` instead of regular conditional? 
Is this the right approach for file system safe filename? 
Again, please use `const` instead of `var` 
Can you log the following instead of printing? 
should we use `var` consistently? 
Can you explain this change in more detail? 
Should we add some documentation here as to what the function actually does? 
Can you add a comment here explaining why we are setting the local IP address? 
Can you clarify the meaning of `with_feature`? It seems like that is testing the `RESTRICT_ACCESS` feature which I don't think is what we want. 
Should we exclude `test/conftest.py` as well? 
Can we use os.path.basename(path) instead of those split's? 
Why are we generating `multiple_services.proto`? 
nit: Importing strftime not used in the code. 
why is it allowed to set the call back function twice? 
What is the purpose of this code comment? 
Why do we need to support `Script`? CIP 0002 just defines `PublicKey` and `Hash`. 
Why did you add this file if it is not related to the code changes? 
any chance we can add the default value to skip the comment? 
Why the change to the cobra usage? 
It might be more efficient to use an unordered map instead of a map for the format table since the order doesn't matter and lookup time is constant for unordered maps. 
nit: please don't update the copyright year to the current year, it should be the year the file was created. 
Why is this necessary? How can there be two connections to the same host:port? 
It should be `to_string().c_str()` 
Could you add a comment saying that this is used to either eval a placeholder or just return the input string? 
the name of this method doesn't feel quite right to me - it's returning the addresses, but it's also mutating the state of the eni. Perhaps something like "GetAndMarkIPV4Addresses"? 
Why don't we put this as in `TiDAGRequest`? 
Is there some reason this is a test rather than a benchmark? 
Why is `caddy.LogDestination` not set in the other case? 
What is this ec2 package for? 
could this method be private? 
should we use the `static()` middleware instead of hand-rolling this? 
Why do we need to return nil here? 
It's hilarious that this fixes it. But this is a great find and thanks for figuring out the issue. 
Is the maximum version actually supported? The code does not seem to work for the current version. 
will this rule be applied to all these properties? 
Is this the full list? If so, that's a lot of capabilities. 
Thanks for adding this check! I think this is a good first step. Can we also add a check in `parse_hosts_options`, so that if `@options[:hosts_file].nil?`, then we raise an Argument error, with a message that we need to specify a hosts file on the command line? 
Why do we have to pass an argument to this function? 
Let's call this `configureManagement` or something similar, as the term `management` is already used in `configureManagement` 
Can you move the comment to the new line, so it's easier to read? 
There is no Java code in this file. 
Could we add a `@Nullable` annotation to `clientMethodName()` and `initCode()` in this case and throw an `IllegalArgumentException` if either of them are null in `create()`? 
Would it make more sense to only add the rules if enabled? Are there any scenarios where we would want to have the rules added but then disable them? 
There's no need for `isRequestPermissionRequired` variable 
Why do we need the update method? Can't we update the media directly? 
please add comments to clarify the usage of this for not only new contributor but also for the future ourselves. 
Why was this made as a part of the `PaymentChannelCmd`? Also, it would be nice to have some tests for this. 
Do we want to be able to initialize a journal with a specific branch id? 
Should add a "no parent snapshot found" message in the else case. 
There's no need for this interface; just replace it with the `wsAppManager` interface. 
Would it be useful to include a default for the region, eg. ? 
Why is only the first enode surrounded by "">"? 
It is unclear why this code needs to check for root privileges. Please add a comment explaining why this check is necessary. 
Is there a reason why method signature changed from `protected void doCommit(DeltaCommitsMetadata base, TableMetadata metadata)` to `protected void doCommit(TableMetadata base, TableMetadata metadata)`? 
the idea is to make this a method on the collection, right? 
Could you use `org.slf4j.Logger` instead of `java.util.logging.Logger` ? 
Why is this function named NewMounter when it doesn't return a mounter? 
 The div above us is closed, but the delete line is opening a new one. 
Don't you need a `sex` parameter here? 
So we don't care about options, right? Or should we be checking for IP options and dropping them? 
Style/SymbolArray: Use %i or %I for an array of symbols. 
Is it possible to use `instanceof` instead of `LogicalType#getTypeRoot`? 
Prefer single-quoted strings unless you need double quotes to avoid extra backslashes for escaping. 
Why does IsInt need to be a pointer? 
Would be nice to have a test for this <br>And perhaps use Ruby's `Hash#include?` that is more consistent with `has_key?` than `include` is? 
Can you add a comment to explain what this function is doing? 
Looks good, but it's not clear what the `p_jmsg` parameter is for - is it a pointer to a json message? If so, it would be good to use an explicit name. 
seems like the options.supportsDts might not be needed anymore. If that's the case, we should clean it up here and in the options. 
Is there a reason we call add_to_i18n here and not in the communities action? 
should we use `getFileSizeNumeric` instead of `bytesToHumanReadable` in this method? 
Should we add some tests for this? 
Use `const` and `let` instead of `var`
Why are we adding unused flags? Does the algod use these? 
From a quick glance at the code, this looks like it's testing more than just the method docstring implies. 
Do not forget to update this test. 
Should we have a `default` case in here to fail if we hit it? 
Code is hard to follow. Please add some comments.
Is this the issue where you can't access the web interface? 
Why did you include the first line and the last line in the code snippet? It seems to me that those were just to clarify that this is a function that returns an iterator. 
Why these changes? 
Should we set the granteeName to the object_owner if the object_owner is empty? 
Do you need to call `exp.Target.StressChaos.ContainerName` so many times? 
What is the purpose of this file? 
Why are we using `reportArgs` twice in this component? It seems like we could use one and the same variable. 
Is it possible to get the actual PVC object here and use its name instead of 'pvc'? 
is the `@viewable_subscription` instance variable used anywhere? Doesn't seem to be defined anywhere else. 
At least some of this seems like it could be testable, but I don't see any tests for this. 
can we make this a GET and then rename the pages to something more explicit? 
Why was the maxWorkerThreads reduced? 
Is it possible to give the new exception classes docstrings? 
What is the purpose of this function? 
There is a lot going on here. Would be good to explain what the action does in the docblock. 
Can we add a comment here about what this represents? 
Why do we need this? If it is used in a context where an ID is expected, we can use `findIdByHash` instead. If it is used to check if a file exists, we can use `fileExists` instead. 
What does this do? 
How about adding a comment here to explain why we are catching TException and UnknownHostException here? 
Adding a check here & the other setScroll-ers for `if (typeof xyRatio.x === 'number')` would probably help. 
It's not clear to me why you need to keep `dict()` and `set()`. It seems like those could be changed to dict:dict() and set:set() respectively. 
can we do this with a single select? like trails.select { |t| t.incomplete? || t.in_progress? } 
Why do you generate the name of the union fields? 
Sorry, this doesn't make sense to me. Please provide more context or explanation. 
Why rename `getById` to `findById`?` findById` seems a little redundant. 
Should we keep the Serializable implementation here ? 
you should be able to do this with a `Gauge` since it's an aggregation over time. 
nit: this is not a name that makes sense to me. you are returning true if the stream is mmapped, so the name of the method should be more along the lines of `isMMapped()`. 
Why a default implementation instead of just a method on List? 
 Please add a test that validates the "Set" operation and check that it is handled correctly with the function in which the code has been added. 
Can we add a comment explaining what the difference is between `ChecksumAddress` and `checksumAddress`? 
Why do we need to comment the if body? 
Can you rename `variableInMap` to something more meaningful? How about `isNewVariable`? 
Seems like you removed `If there is a number after the element...` 
What is `session`? Is it taken directly from `sessionmaker()` or something? 
Make it more explicit that the second call to g_value_get_object() could potentially crash because it's not null-checked. 
Could explain the difference between GC.stat.to_json and stats.to_json. 
Not sure what the intent of this change is; it's not clear to me that you'll never want to call proc_set_num_simd_saved() again... 
why is this method called `opPointerizer`?! 
Why don't we use `strings.IndexByte`? 
Could you also explain why this is not needed ? 
hmm, seems like this function is gradually getting way too long. 
Do we need to keep this code in the PR? It looks like an autogenerated file. 
Is there a reason this is being removed?
Do we need the "name" column? It seems like this is duplicating the `rule_name` column. 
Minor nit - seem like the `ibftTwo` field could be renamed to something more descriptive... 
Could you please remove the unused parameters instead of commenting them out? 
Can you define what is "pulledInstances" here? 
nit: missing a word in the comment above: "Inbound object based on" 
It seems weird to have this method on the TRANSACTIONPOLICY type rather than a helper function. 
Can we make the name a little more descriptive? "DebugForcedLogMaker" doesn't tell me much. 
please squash this with the previous commit that removed the usage of this import 
Can you make this more clear? Remote updates make sense, but using the context of a previous for loop to explain the next one does not. Also, the context of remote updates is not clear.
Wouldn't it be better to use the default English strings here? 
ANother suggestion: `InvalidOptionException` should be `OptionDependencyException` (will need to be created). 
Shouldn't this be a `const` method? 
Should we be documenting the parameters of this as well? 
Should this be h2o_buffer_try_reserve()? 
Why is this called `RemoveReachableFiles` instead of `ExpireSnapshots` or something like that? 
Given the length of this function and the lack of comments, I cannot understand what this function does. 
Why are we removing the action parameter from the request? 
Why do we require this change? 
Alternatively, I thought about this other wording: > `The parent span identifier that references the parent of this span. This value can be used to propagate the parent span identifier to child spans.` 
Why is the codec.h header being removed? 
Shouldn't this be ` DashboardWidgetSpeedPage ` ? 
Is it possible to have a more descriptive summary? 
Why not use PMIX_LIST_FOREACH_SAFE (nm, nm_next, &t->nslist, pmix_nspace_caddy_t) { pmix_list_remove_item (&t->nslist, &nm->super); PMIX_RELEASE(nm);} PMIX_DESTRUCT(&t->nslist); 
Should we check the return `c` is not nil? 
could you add a parameter `log_signal` with a default of `True`, so that this doesn't change the existing API? 
nit: fix typo in var name `mFirstContentFulPaint` 
What is this used for? 
Why don't we use `select( STORE_NAME ).getServiceAccountURL()` directly? 
Use `pp` to output complex objects. 
Why do we need both 'PACKAGE_NAME_FORMAT' and 'SUBPACKAGE_NAME_FORMAT'? It seems like 'PACKAGE_NAME_FORMAT' could just be used for both. 
Can we split the changes to the server into a separate PR? 
It may be best to implement the Metric interface here. 
What's the best way to use this? Should we be using the `hiddev` field here? 
Why are we iterating over the query parameters and returning an error if we find any? 
Is there a better way to generate the string? 
So this is indeed an issue, but it's also something that would fail in the fingerprinting code, so it's not a regression. I can handle this with a try/catch in the fingerprinting code. 
It's a little funny that `admin can get to move_topic page` comes before this one. Up to you if you want to move it, or leave it. 
Does this work with errors that are not in the `yarpcerrors` package? 
For the record, the statsd tests pass on travis but fail on appveyor. Is this test really passing locally for you? 
Sorry, I'm not sure I understand this, could you please provide a bit of context? 
Why the `try-catch` block? I think it makes the code less readable. You can load the file first and check if it exists, then copy it. 
Does `onDevicesListClick` still exist and is it still used? 
Why do we need this method? Can't the user just call stub_hosts directly? 
Are we adding this as an ENV var? 
Shouldn't this be calling the `getters` function instead of just retrieving from the schema? 
It might be nice for this to be dynamic and to use the documentation for the auth plugins. 
Does this delete need to be kept? 
Is there a way to only have `FAILED_TO_LOAD` if `ENCRYPTED` is present? 
Why not just use .define_singleton_method? 
Why not reusing the existing `/status` endpoint for the 404 status logic? 
the name is a bit confusing, so this is the register used to look for spills? 
Is there a specific reason why you removed the != nullptr part? It seems like a useful null check. 
Remove this line. 
What is the purpose of this change? Why do we care about the log level in this code? 
Why do you need molecule.Provisioners instead of molecule.Provisioner? 
Why was the line `if(file_exists('../../release.inc'))` removed? Also, should the line `include '../../release.inc';` be moved above the line `require_once("../inc/xml.inc");`? 
Is this a list of tests to be run? 
Do you know which versions of Go this will work with? 
Can we avoid the duplicate code in this method by adding an internal `ParsePrecursor` method that uses `double.TryParse`? 
why is this being imported? 
Why is the list_of_DC_SCOUT_RAIDS not final 
Can we please not abuse `const` for these and use `var` instead? 
nit: why do we log a warning if incremental analysis is disabled? 
Should we be hard-coding the space key text in German? Can we make this more generic and support other languages? 
Why is this named "collect", when it's an iterator? 
Can we use a more descriptive name for this function? 
Looks good to me. Please add a test that checks that the name is set correctly. 
Here's what I have so far - the previous version of this file had a summary and I'm not sure why it was removed. 
Is the syntax new to C# 7.0? 
What is the motivation for hardcoding this? 
Is it possible to split this test in two to make it more readable? The two different paths ( with or without an existing tag ) can be tested separately. 
Do we need to also pass the status to the block? 
what is the purpose of this method? why is it private? 
Do we have a `dataType` on all of these `$.ajax` calls? 
why do we need to create a creator's state here? 
Change the order of function parameters to (dataset_id, project_id) for consistency 
should this be returning the actual list of changes? 
maybe comment on what the state machine is, why it exists, etc, if this is for reviewers not familiar with ECS architecture. 
Can you remove this test altogether? It breaks the build on Travis. 
It would be helpful to add a brief comment explaining what NTLM is and how it relates to AntennaPod.
Need to be careful about caching this context. 
Can we rename this partial to "question_form"? 
in general, the `version` variable is not needed. Just do the `ProductPropertiesUtil.getProductVersion()` check. 
What is the purpose of adding this? 
Throw an exception if the certificate chain or private key are not available. 
From the summary it looks like the code is checking whether a given `node` has a valid `role`. Yet the actual code is about checking `role` and setting `role` if it is falsy. Please rework the summary and if possible the code to do what the code is actually doing. 
Can you add a comment explaining why we need to load the puppet labs spec helper? 
As a side note, it seems like this is not really necessary as a member function. I'd rather see this as a standalone function. 
There is a typo in the key in the new entry, `A name suche as Europe or Overseas` -> `A name such as Europe or Overseas` 
Scott: This is a really good find. 
Should this use `IAsyncEnumerable` instead of `IEnumerable`? 
Why is the connection created twice? 
Why do you add this? 
Actually, I'm not sure if it's the right file. We need to talk to google 
Maybe add a docblock for the function here? 
Not sure what this comment means 
Why are we sure that it is non-nullable? 
Where is the 'pyimportlib-metadata@0.12:' dependency? 
Similar to the comment in the parent PR, I think `SpanReference` and `Baggage` are not great names. We should name them after what they are, not after what they are used for. 
Why are we updating the copyright year to 2018 here? 
Do we want to keep this function? If not, we could consider deprecating it and removing it. 
What is the difference between log_module and LOG? 
not sure this is quite right. What about `from .. import blah`? 
Same comment about prefixing with `Library_name:` for the exceptions. Also, the method name is not great. When I read `Stress`, I think of a stress test. But if the method actually does cycles, why not call it `Cycle`? 
Can we split this into two functions, one for making the S3 session, one for downloading? 
nit: what does `path_to_status` mean? 
Looks like we should also return a 204 No Content 
Can you use `elif` instead of `else: if` here? 
the return should be after the if, and the indent incorrect. 
What's the return value of `Stop()`? 
Looks like you accidentally changed the summary/description. 
Not sure if we should update the year here or not. 
Align the elements of a hash literal if they span more than one line.<br>Expression at 94, 85 should be on its own line. 
Probably worth noting that this is a `swarm.Reference` to be clear. 
What is this meant to return when the os-release is unsupported? 
Why is this deleted? 
Is there a reason why we now have to use `java.io.BufferedWriter` instead of `Files.newBufferedWriter`? 
Why is this needed? Doesn't `getRequestBodyVarName()` always return the same value? 
should this be called `test_classifier` instead of `test_cluster`? 
It looks like you're adding a dependency to this package. Can you update the README to reflect that? 
do we need to check the height in addition to the hash? I don't know what the height is, but I feel like we should probably check it if it's something specific that we can fetch from somewhere 
It seems like the only thing that depends on this is the `is_patched` flag. Can you take it out and just add `is_patched` to `drcontext_flags_t`. 
Can we use `s -> !s.is2xxSuccessful()` instead of `s -> s != HttpStatus.OK` ? 
It might be better to remove the time and versions for the tarball from the package rather than deleting the time and versions for the whole version. 
LGTM Is it safe to use the same slack client for multiple channels? 
Why are we adding /opt/puppetlabs/bin if it's already in the bin dir? 
LGTM. 
Can you add a comment that the ECSDataVersion is the version of the ECSData and not the version of the ECS Agent? 
Thanks for the PR! Can you please add a small commit to this PR that breaks the long line in the last file to two lines so that we can merge it? 
Remove image_tag for the cart icon. We don't need it here. 
Why? These aren't exported. 
Can we rename `cls_name` to `exception_class` to make it clearer what it is? 
Should we override `failureDetection()` to check for `TTransportException`? Otherwise, I think we might be constantly reconnecting on any `MetaException` thrown by the client. 
Why are we changing this back? Solr is a configuration option. Whether it is used or not is not relevant to the indexing process. 
My bad - you're right, this was in the original patch and I must have dropped it when rebasing to trunk. I've added it back in (along with a comment). 
Why is the CA dir here and the cert dir in a previous commit? 
What is the purpose of this file? 
Why is this called Address and not Wallet? 
Why isn't this test method's name prefixed with `test_`? Jw 
Probably we should have a test for nvidia container runtimes, but I guess we don't have one for *any* extra runtimes, not sure how to handle this. 
Use `f-strings` for string interpolation. 
Shouldn't this be covered by the tests? 
nit: you should use `isinstance` as in the above line 
There should be a space between `id.customAttributes` and `{` 
Is this docstring really necessary? It is a simple one-line function and the method name should cover it. 
What is the intention of this method? The name suggests it will return a regex, but this code does not do that. 
Why is this in the UIA section? 
Why is this a method, and why is `lowercaseFields` a method receiver instead of a function parameter? 
Why not just use `full_backtrace`? 
Do we need to keep the balance tracker noop code in the codebase? 
It should be safe to add a reload option, even if the file system doesn't support it, right? 
Why not use `import six`? 
Is this a new entry point? 
the `// Baseline checks` is not needed. add a `private static final String[] DEFAULT_PATCH_CHECKS = new String[] { ... };` 
nit: rename `allParameters` to `jsonParameters` and `parameters` to `allParameters`. 
Do we need a `#ifndef KOKKOS_TOOLS_ENABLE_LIBDL` around the `dlclose` call? 
Do we need to add an `add_undo` parameter to all public methods that are touched by the close-tab method? 
Instead of this, we could have a function that return the path to ddev, no? 
Should this be renamed as `GcpResourceManager` ? 
Typo: `unsupported_function` -> `unsupported_property`
Do not use std::rand() for anything security related. 
Why is this test being deleted? 
What does `asSmarts` have to do with `cxSmiles`? 
why is the crios check added? 
Is this meant to be a command line interface for the program? 
Is this hack for legacy compatibility or do we still need to be worrying about this? 
Why is this function named `subscribe`? This function doesn't seem to subscribe to anything. 
if you can, put the "trace.destroy" in a transaction so that if anything after that line fails the trace won't be deleted. 
what is the difference between populate and populateStep? 
Why are we using `params[:scope]`? Shouldn't we be using `params[:scope_id]`? 
Could you add a comment explaining what this code is doing? 
Why are we setting the `skip` flag in the first block, but then overriding it in the `if`? 
Why isn't this in the `mux` package? 
Why is this combined into one file? Are there any overlaps I missed? I find that unlikely, and having them combined makes it harder to compare them. 
Why is this renamed to `arg`? 
Is it possible to use a map[string][]string here so that we can set multiple headers with the same name?
Can you make the description for this CL a bit more descriptive, please? 
Why not just `return zipWith(that, Tuple::of)`? 
It seems like the check for apis.IsInUpdate is redundant, since CheckImmutableFields already does the same thing. We can probably just remove the check. 
Should we use validate_one_of_args_is_in_query in `asset_sensor` function? 
Should we rename this `SingleNationalNetworkEventExporter` to be consistent with the other `SingleNationalNetworkEvent` class names? 
Should be possible to handle the error more gracefully. 
can we use a static import? 
Looks good to me. Please add a comment explaining why we need to start a new TraceContext instead of using Tracer.Instance. 
It might be helpful to add a comment or a separate method that explains how this value is being calculated and where the numbers are coming from. 
Make this a switch statement. 
Can we please use a more meaningful name for this constant? 
Why not just get the max version? This isn't really helpful for anything else. 
It seems wrong to duplicate the function name in the comment; the function name should be enough to identify it.
Why are we mixing configuration keys (e.g. `server_url`) with environment variables (e.g. `SERVER_URL`)? 
With the current code, the console output is not printed to the console. Do you know why? 
Are you sure you need to replace this? 
Could you replace this with a call to `controller.Register` that returns the `*csr.Controller` object?  And then have a defer `controller.Stop()`? 
Looks good. Just wanted to make sure you know that there's a method on Activity to create one from HttpRequest (Activity.Current can be null).
Thanks @msabramo, good call, done. &lt;3 
Can we get rid of the `collection` and `record` route names? It seems like they add extra complexity that we don't need. 
How does this test that we get a routing loop? 
What is the purpose of this code? Is it necessary to have this n-tuple? 
Why you need to add the deleted lines back? 
code dup. you need to use the same formula for both cases 
What is the purpose of running this test 3 times with different versions of the encoder? 
Can you add a comment that this is just an identity function if solid_subset is none? 
Why is this change needed? 
it would be good to include the error message in the log message 
Do we need to test the nil case? Maybe for completeness. 
why is this method being modified? 
Should this be done in a constructor? 
Wanted to make sure we don't return nil here. 
Can't we just do this in the test itself? 
Do we need to check here if the matchKey is empty? 
Are you ok with `self.MSG` as a name? It is not very descriptive, but I guess it is ok for a private attribute. 
Why does `pingerPort` have two arguments? Is the second one a return value? 
don't we also need to update the ref count of the child block? 
Wouldn't it make sense to return `itemmethod` if it's an `Inject` or `InjectMany`? 
Why is this test needed? 
It looks like we are parsing checks twice: here and in the "compileRules" method. Can we move it to the compile? 
So the only change we could make here would be to change the error text to say "dockerfile path expected, got %s" or something like that. @adg does that sound reasonable? 
Does it make sense to export these as a module? I don't see anyone using them 
As I use `SOURCE_VERSION` to report the version of the VM used to build the packages, I would like to get this value here too. 
Could we add an explanation in the javadoc why the returned type is `byte[]`? 
What does this do? 
Is this really a good idea to have "yank" as a command? According to the help, that's supposed to be a command to yank URLs from prompts. Seems like a bit of a stretch. 
Any reason you chose `numRekeyWorkers` to be 8? 
It's hard to determine if this is the right thing to do or not. 
Why does this need to be a different function? Is there a reason why it can't just be part of the `New` function? 
Is it possible to specify an assume role without a credentials secret? 
Maybe we can rename this to `check_class_type` or something more descriptive? The name `check` seems a bit vague. 
What is the purpose of this test? 
Is this a hack for legacy websocket clients that can't handle the new blocks topic? 
Can we add a TODO here to remind us to add this to the TestLocalMock and TestLocalKubernetes tests? 
Does this make the diff too hard to read? 
What is the purpose of this function? It looks like it creates a node in the DAG, but what is the purpose of the node? What purpose does the DAG serve? 
There is no summary provided. 
Is `XLELongField` ever used? If not, maybe remove it. 
Should we validate that the trusted operators are actually trusted? 
nit: please don't use wildcard imports 
Can we get the grunt.file.read and grunt.file.write out of the loop? 
Can we make the method private? 
What is `Please` repository? 
what's the point of running the catchup tests with ledger node and fetcher node both in older versions? it's redundant. 
Tags can be converted to restic. TagList in the runBackup function body - we should do this in a separate PR. 
It would make sense to add the new flags to the top of the flags list, not in the middle. 
nit: missing javadoc for this method 
Why not just do `DC(to_tensor(results['gt_masks']), cpu_only=True)`? 
Is there any reason to keep the Google, Inc copyright for this file? 
Should we raise a `ValueError` instead of calling `to_pandas` here? We don't want to materialize data on the driver. 
Looks like we need to add a pid subdirectory to the pids directory. 
Why is this `fb != fbo.folderBranch` check here? Isn't it the same as the check above? 
Maybe also test that it works with the table properties set. 
Do we really need this? We are not using the client nor the interface in the operator itself. Can we remove it? 
can you make this into an error to be consistent, and then include the cause in the error, it'll make it much easier to troubleshoot if we have a failure. Something like: return errors.Errorf("failed to recreate AlertManager StatefulSet: %s", sErr.ErrStatus.Details.Causes[0].Message) 
Don't we want to be more specific? This is the event index, so we should mention that in the docstring. 
 @ubergarm: I'll take a look at this PR over the weekend. 
can you add a docstring here for the options argument? 
Could `os.RemoveAll` fail? 
Can we rename this to `DefaultHolePuncherConfig()` to make it clear what this function is for? 
Is there a reason for keeping the `ParallelLevels` and `VisitAccounts` properties private? 
Any chance we can refactor this code to avoid the -1 and +1 on either side of `DYNAMO_OPTION(max_bb_instrs)`? It feels like we're constantly fiddling with the value. 
nit: this code looks wrong. 
nit: changed `glog.Println` to `fmt.Println` because the former is a little confusing to me. 
Why the change of "weiter hinzufügen" to "weitere hinzufügen"? The word "weiter" refers to "adding another", not to "adding more". 
Why is this necessary? 
Can you please add a comment to define what the "-p" means? 
Why did you remove the `if` condition? 
is there a reason why this is required now? 
if err := validateDocroot(app.Docroot); err != nil {
Could you switch this to a `case` statement with an `else` clause? 
comment: just added an empty line here for PEP8, so it will pass on some style checking. 
Can we update the name of the variable to make it clear that we are 'determining' the nonce? 
Is this being used somewhere? Also, do we want to have the "mentor" prefix in the method names, since this could be used for any type of user? 
Why did you delete the copyright information for the previous contributors? 
What is the purpose of this test? It's not clear. 
There is no tab-menu mentioned in this PR. 
Why did you make the endpoint a string? 
Can we optimize this? This seems like a lot of code to do a simple task. 
nit: "catch-all" is a bit colloquial. Maybe say "Reconcile fetches the target object and injects it into the target object object. This is used to ensure that the target object always has the most up-to-date information." 
Can you make the message more useful? Maybe explain that this is because of maxConcurrentRuns and that the flow is not skipped but simply not started. 
Could you explain the reasoning for this change? 
shouldnt this be renamed to TestSampling_SamplerCalledAfterEventNameRenamed or something similar? 
Remove this file. 
Why are we adding `chainID` in this PR? 
Why not use std::deque and push_front and push_back? Also, isn't this the place to read the size to get the request? 
Should the test also verify the headers are not set on the ctx ? 
is this missing_text used? 
Not sure I understand the reason for the new function name. 
Maybe we should have a helper function to create the redirects for better readability and maintainability. 
Unclear why this is being moved into the `if` block. 
So the snapshotter is only enabled if the snapshotter is set? 
Why is this file being changed? Is it necessary for this commit? 
Why is `PARTITION_COLUMN_ID` not part of the `ReservedField` enum? 
Looks like the `Connection` property is now ambiguous. Can you see if you're able to disambiguate this? 
Can this be done without calling `strconv.Itoa`? 
Can we maybe break this up into smaller functions? It's quite long and hard to read. 
nit: this is not a valid "summary" since it doesn't describe the change being made. 
what is the value of making this method abstract? 
Why is this change necessary if we just changed the route?
Why skip? 
What is the reason for the if/else block? 
Can we get rid of setPropertyID and setProfileID() and replace them with setSettings() which we can use to destructure in the reducer? 
Is this test flaky? 
After this change, I am not sure why this needs to be a class. Couldn't we just have a simple `Stopwatch`? 
Why are you changing the logic for the `command` variable? Isn't it possible for `sys.argv` to have multiple elements? 
It seems like this should remain as it is. It is setting the alias properties for the edge type. 
Why not put `target.name == 'localhost'` in the condition statement? 
Why not use the || operator for the page value too? 
Could we link to the selenium docs as well? 
nit: This is not a var, it's a var block. 
What's the difference between a and b? 
we should probably put the dependencyCount=0 and pDependencies=nullptr in a separate block to the if else, since it's outside of both blocks. 
Why does this need to be a struct? It seems a little heavy for the functionality provided. 
Why do we need to check if the table has an LOB column here? 
Could you provide some documentation to how this works. I'm not familiar with the bokeh plugin, so please correct me if I'm wrong. Are you resetting the `mpl_renderer` object back to the default? 
Why is this adding an additional sendAllControls() call? The original code calls sendAllControls() for each key clause. 
Why is the library controller updated here? Shouldn't it be before the engines? 
Can you put this into a separate test file? 
nit: You should keep the `cacert` key alphabetically. 
Why is this change needed? 
Can we make `ss` a `sourceset` or `sourceSet`? 
There are two versions of this error that are thrown: `sqliteMaxWalletNameLen` and `sqliteMaxWalletIDLen`. Can you add that as context in the message? 
no tests for this? 
Why do we need the `refs` variable? I don't see it being used anywhere. 
Why is the `custom_facts` task being defined in the `apply_helpers` module? 
When we run device rotation, we will also need to set the screen orientation to the one that is requested. Is there a way to do this? 
can you put a comment here explaining the purpose of this class? 
Why are we unwinding here? 
LGTM, I think we should remove the `protoParser = new ProtoParser(getDefaultLanguageFeatureConfig(language, null));` line and just use the instance created in the next line. 
Why do we need to lock here? 
the first `to()` call still use `new GetNewSessionQueueSize` instead of `new GetSessionQueue` 
can you add a comment that this is used for creating a user from the sign up form in the controller 
Why do we need to create `vertx` after the command line has been parsed? 
Is this code going to be PHP? It looks like it. 
Why do you need to assign `SpanId` to a random generated value if the parameter is `null`? 
Is this something that you'll need? This is a very odd place for a destructor 
it feels weird to iterate over all unreferenced blocks only to cancel them. Can we avoid this? 
why this is duplicated on these two lines? 
It would be more consistent with the rest of the codebase if we used `ifPresent()` instead of `isPresent()` + `.get()` for `allCategoryButton`. 
Why is the new column not included? 
nitpick: I think I would prefer a different name for this command, maybe 'package-sync' or something? 
Is this method used anywhere? 
Can we revert this change? It makes it harder to read. 
Why are we dropping 1.7.4 and 1.0.3? I think we should keep them for now, since they were the last versions before we moved to 1.8 and 1.1. 
Why not just `empty()`? 
why do we need all of these imports? 
can this be simplified a little? the `values` variable seems to be the only thing that is changing between the `delete` and `add` blocks
Why are you adding these packages? If they are used, then they should be in the go.mod file. 
ideally, steps should be an array of Numbers.  The caller should check this.
Somehow this attribute seems like it should be `@attributes` 
it's a little odd that this is a belongs_to a repository. 
nit: I'd prefer "Intercepts a signal" for the summary. 
Should we document the exception cases in a Javadoc? 
Why is this called `VaultAppRole`, rather than just `AppRole`? 
Should the try/catch log at a different level? It seems pretty spammy to me. 
Don't we need to abort the connection in case of a timeout? 
Can you wrap this in a fixture function? 
It should be a property like `ConfigQuery::isStockEnabled()` or `isStockManagementEnabled()`? 
Why did you move the namespace declaration from the first line to line 4? 
Typo: `Descrição` (missing 'ção'). 
Why is this needed in both places? 
Isn't this a test method? It shouldn't be public. 
Should there be an error string that we can use in some circumstances, like when we can't find a matching certificate? 
It seems wrong to me that we're validating the SourceSnapshot and SourceImage here. I think those should be validated in their respective call paths. Similarly, I don't think we should be validating the size in this function. I think this is something that should be validated in the request. 
Why do you need this `else`? 
optional: Should we call `tunnel->destroy(tunnel);` after `return` so destruction logic is always in one place? 
Change this to a map call. It's slightly more idiomatic and uses less code. 
Wouldn't it be better if the `System\ReportWidgets\Status` widget is registered in the `registerReportWidgets()` method of the `Extension` class? 
Why are we testing pandas here? 
Shouldn't the error message be different for the two cases? 
Let's pull the `execute_task` bit out into a variable so we can reuse it in both branches of the if statement. 
Why do you need to add this? 
Why did we remove the default value for the `config-file-name` flag? 
Feels like a lot of duplicate code between this and the function above. Maybe we can combine them? 
Can you use `auto` for ai, bi? 
When we run device rotation, we will also need to set the screen orientation to the one that is requested. Is there a way to do this? 
WDYT about memoizing the index? 
Is this change intentional? 
What is the purpose of this function? Maybe add a comment explaining what it does. 
It's not possible to add more than one `inline` on a function, so it would be better to only add it on the first one. 
Why is this named "Env" and not "Environment"? 
does this need to be abstract? 
Why is this a hash instead of an array? 
Why do these lines need to be added? They don't seem related to the summary. 
Looks like `DeflateWithPresetDictCompressor` is created for each compressing operation. I think `compressor` and `compressed` can be final fields. 
Could we have tests for the `Must` functions? 
Could use `Timestamp.valueOf()` and `OffsetDateTime.toLocalDateTime()` to get rid of the `toInstant()` calls. 
It might be worth documenting the possible values for `self.backend`. 
Should probably take a different approach for the `modified_field` parameter. Maybe it should be passed in as a parameter to the `bump_timestamp` method. 
Is this meant to be `getAtomMapNumber`? 
What is the `oldTimeIntensities` for? 
nit: can you add a javadoc for this method? 
Can we add a comment explaining what the default is for this field? 
Is this really the right approach? We want to handle this in the caller, not here. 
Looks good, but not sure if we need to keep the IsErrorDuplicate return. 
It's unclear what this function does exactly. Please add a description. 
Why are these checks commented out? This makes it looks like they're not being checked, when in fact they are. 
Without knowing the context, these changes are impossible to review. 
Why do we need to extra check for region? 
Why not make this two separate tests? 
Is this necessary? `addTask` takes a lambda with no capture. 
What's the relationship between the namespace and the imports? Should they be generated even if there is a namespace? 
Would be good to have a constructor with maxRetryTimes. 
Why is this method now called `applyManifest`? We were using plural before. 
Typo in variable name: DEDUP_RESUTL_CHECK -> DEDUP_RESULT_CHECK. 
Why is this a separate method? 
Could we return the matching node in the case of a match? Is this similar to the Visitor pattern?
Can you add a comment explaining why the label is different for different browsers? 
How about a `--drive-use-shared-date`? 
Shouldn't unregister happen in the constructor? 
Unfortunately, I don't think this commit is correct for this pull request. Please make sure that the code changes are relevant to the pull request you're opening. 
where does `k8s.io/client-go/util/jsonpath` come from? 
Don't you want to divide by the total number of files now, to get the average size? 
remove `responds` and use `respond_to_missing?` 
Should add the license for the University of Illinois Open Source License 
Why did you remove the copyright line? You should also add your own name to the list of contributors if you make changes to the file. 
Why was this moved from UserControl to GraphSummaryToolbar? GraphSummaryToolbar derives from MultiButtonToolStrip which derives from ToolStrip, so it seems like it should be ok to subclass UserControl. 
Let's use a better name for `_base_` and remove the extra `<add>` lines. 
nit: I'd prefer if this was called `SyncApplicationHandler` 
What's the use case for all this string replacement? 
Instead of returning a Task.CompletedTask, you could just do "return Task.CompletedTask;" to get rid of the explicit type. Also, can you add a comment explaining why this test is important? 
Do not use the `use` statement with the `Cookie` class, it was removed in Symfony 5.4. 
is the sleep necessary? 
Shouldn't we refactor the common code into a function? 
should we use `git describe` instead of `git rev-parse` for the docker tags? 
Is this a placeholder or is it actually a copy/paste mistake? Please remove the duplicates. 
Removing the nullable flag for all three of these doesn't seem like a good idea. Can you explain the impact of this change? 
Is there a reason why this couldn't be a `has_and_belongs_to_many`? 
Why is `toggle` a keyword argument? It seems like the method should raise an error if `toggle` is not specified and the bookmark already exists. 
Is this the right place to do this? I'm not sure this should be the responsibility of this package. 
It seems like the default service is never used? 
Should we throw if `DD_DOTNET_TRACER_HOME` is set but the integration folder is not there? Otherwise the user will not know why the integration is not working. 
Why is `driver_.fileDetector_` being rejected? 
Why not use `paths = ...`? More readable and shorter. 
What does `this.s.db` refer to? Shouldn't this be `this.db`? `options` is passed by reference, so there's no need to assign it to a new object. 
Okay, so I guess this is for tests, but I'm not sure it makes sense to export it. Can you add a comment above the function saying what it's for? 
Not sure why we don't just call `Start` here and return the error if it happens. I don't understand why we are retrying without the retry logic being in this function. 
As discussed in the first PR, this test requires some more explanation. 
Why is this checking in a file to /tmp? 
Do we ever expect there to be more than one msg in the given batch in the real world? If not, we should pick a better name
Can we merge this one too? 
Can you provide a brief summary of the changes made by this commit? 
Can we import `unique_iterator` from `..util` instead of adding the import here? We try to avoid module imports in the global namespace. 
Why not just set the `config` as a parameter in the `Mailer` constructor? 
what is this? 
Why not just put this in the existing lambda ?  
It looks like this function is assuming that if `full_parent_name` is `'composite_root/root/'` then we should return just `{resource_type_name}/`. Is that correct? 
Can you please add a code snippet like a TODO or a FIXME comment that explains the purpose of this code? 
why do we need to regenerate the config if we're managing it ourselves? 
nit: perhaps indent this to column 4 instead of 8 
Should the Urn 'http' string be in the Uri? 
Why is `color` not captured in a `struct`? 
Why are we adding `using Xunit.Extensions` here? 
Is `SOURCETABLE_NAME` not used anymore? 
Can we get rid of the `# noqa` annotations and reorder these? 
Why do you need a new class for that? 
Why is this change needed? Please elaborate. 
What is the purpose of the DESUL_ENSURE_HIP_LOCK_ARRAYS_ON_DEVICE call? 
Seems like the `shouldCorrectlyExecuteBasicQuery` test is testing the same thing as `shouldCorrectlyPassReadPreferenceToCursor`, but in a more comprehensive way. 
It seems that this test case is not doing what the test class name reads. Please rename. 
It might be worth separating the test cases into different tests 
Would you prefer "if (empty($url))" instead? 
Do we need this test? It doesn't seem to be testing anything that isn't already tested by other tests in the same file 
Maybe rename `aspects` to `aspectSet` to be more clear ? 
What is the purpose of the `preserve_backslash` method? It seems like it doesn't do anything. 
Why not put the two new keys in `HoodieCompactionConfig` instead of this class? 
is True? Why not just if singleton.value:? 
Can I suggest changing the docstring to be a complete sentence? "Converts tensors in inputs from src_type to dst_type recursively." 
is it possible to extract this block into a function? 
Why does this test need to be a separate method? 
what is the original intent here? 
Should we add all these constants to a `constants.go` file? 
Should we install nodejs/npm here? 
Do we need to catch the return value of multiGet? 
Is this still valid? 
It'd be good to have some tests for this. 
Can you link to the actual PR with the fix? This summary is somewhat general, it doesn't mention the specific fix. 
Why do we need to expose testMysteriumApiUrl? It looks like it's used only in tests. 
Do we have any tests checking the correct input types are passed to this? 
can you have a try/catch around this and call loading.hide() in the catch block? 
Shouldn't we be returning the error if we encounter an error? 
What is the purpose of this chain? 
Why are we adding this? 
Is the first example supposed to be the pending count, not the failure count? 
Why did you remove `html_safe` here? 
Can we move `init_cfg` to `build_loss`? 
Why is this not using a `StringBuilder`? 
Why not just use num_raw & 0xffffff? 
Why are you changing the log level here? 
Why the return type is changed? 
Why this is set to be `public`? 
should we add a test to ensure that we can still specify a custom value for this field? 
Should we be adding a new entry `Mvx` here? 
It's not clear to me why this is called `get_job_flow_id` if it also runs the job. Should it be renamed to `create_job_flow` or something similar? 
Added force_187_p371 method to force the test environment to use Ruby 1.8.7 p371. 
Why is the Id different? 
Why is this change necessary? It doesn't seem like this has anything to do with LoadFileRaw 
Could you please provide some context on what this code is doing? 
It's not clear what this code is doing. It would be helpful to have more context or comments explaining the purpose of this code. 
move the description of arguments tpfp_func and nproc to the docstring of the function. 
why use constants, when you are using them only once? and why use the constants with the keyword "const"? 
How about introducing a variable instead of doing the `if` inside the `add`? 
Would it make sense to have `fields` and `custom_fields` as separate methods? This would allow you to just iterate over `fields` and simplify the code a bit. 
Is it necessary to pass the service name as a parameter to the data error component? 
Doesn't seem necessary to have `userId` protected. Should be `final`. 
Can you add a comment explaining the logic for the `chainID` variable? It seems to be using the config value by default, but can also be overridden by the request. Also, should we handle the case where `req.ChainID` is 0 separately? 
What is the purpose of this exclusion list and how is it used? 
nit: use a specific test name, like `TestGetContainerEnv_GetAppContainer` 
maybe rename `end_bracket_position` to be more self-explanatory, it adds confusion 
Why is `MaxActivePeers` not readonly anymore? 
Why is `AdditionalIngressRules` needed on `ClusterSecurityGroupOverrides`? 
Tests with a single assertion should be strongly discouraged, I think. 
Would it be possible to explain the magic constants? 1 for multipart/form-data is clear, but 0 for the rest is not. 
Should we be using `probe.NewRecorder` here? The `NewRecorder` function is specifically designed to provide a recorder that can be used outside of the lifecycle of a probe. 
So we should have a test that checks that the new fields are actually being sent in the audit. 
Should we also be checking the `where->label()` expression here? 
Should be combined with `batchValidateActions` to avoid code replication 
It seems that this class is new and does not have documentation, so I would like to explain the purpose of this class. Currently, the `MvxDialogViewPresentationAttribute` attribute class is used to specify that the target view must be presented as a dialog. Similarly, the `MvxModalViewPresentationAttribute` attribute class is used to specify that the target view must be presented as a modal. Whether it is a modal or a dialog, it will be determined by the `MvxBasePresentationAttribute.IsModal` property. Therefore, I think the `MvxModalViewPresentationAttribute.Placement` property can be removed. 
Why are we ignoring the error from h.Manager.MatchingIdentities? Shouldn't we be logging it somewhere, or returning it to the caller? 
Why do we need both `detail_color` and `hyperlink` settings? And their descriptions are a little confusing. Can you make them more clear? 
It looks like this is unused, so I think you can delete it. 
maybe move to `pkg/commands/deploy.go`? 
Maybe we can have a test for this? 
Why is the function named `FetchCertAlternatives` if it only returns a single certificate? 
It's a bit confusing to me as I'm not sure what `beforeChangeResult` is. Maybe rename it to something like `shouldAllowChange`? 
It looks like the `strncmp(..., "NONE", ...)` is a redundant check. 
please add a note about the intended use of this extra label 
Is this correct that the `propagateDeadlineToChildren` function is triggered if the deadline is exceeded or if the node is in deleting state? 
Why are we adding parens? They are not present in the original code? 
Should `url` be a `JsonRpcUrl` instead of a `string`? 
maybe replace invalid characters with a suitable replacement character instead of an unknown character, like the unicode replacement character U+FFFD. 
Retitle to clarify that this is two functions, not one. 
nit: `github.com/projectcalico/felix/ipsets` isn't in the same group as the other `projectcalico` imports. 
Why do we need this? 
Why is this function even needed? There is nothing special about 2/3, and it's not used anywhere but in this function. 
how is `file.data.size` not a number? 'IsNaN' is a bad name for a variable 
make it a static class 
Would it make sense to change this to `for _, link := range config.Links()`? 
Why is this called `sas_token` and not `shared_access_signature`? 
Can you rename `afterAction` to something that makes more sense with the IDisposable hack? We want to eventually remove the hack. 
Why is this not called `rewrite()`? 
What is the difference between `isHydrating` and `isSvg`? 
Let's rephrase this comment to say that we will update the cert if the actual data has changed, but the files on disk haven't. 
why is cci->skip_save_flags considered in the first part of the conditional? 
Shouldn't the `inversedBy` be `payments` instead of `transports`? 
Can you please add some comments that explain why this is necessary? 
Instead of imposing "static" on everything, rename this class to StaticLangApiMethodTransformer 
Looks like the delete here is a mistake, why are we removing the waitForSelector call? 
Variable `duration` should be renamed `tmpDuration` to match the naming scheme in the other `if` statements. 
Why do we need to free views on failure? It doesn't look like the success case does.
Could we just add a flag here for whether it is a mailing list subscription or a paid subscription? E.g. `mailingListSubscription` = true/false 
doesn't there need to be a `clearProposals` call here if the experiment failed? 
move & order the instructions to use it before `if` 
Why is the dirty counter going down to 2 now? 
why is the method public? 
What is the purpose of this method? 
Why are you changing `GetHiveNamespace()` to `constants.HiveNamespace`? You're making the code more specific. 
Do we need a `seelog` statement? 
Why is this in the API and not in the backend? 
Does this comment apply to the line below it? 
Is this the same as the other versionSetId in JobExecutor? 
Why do we need to take the url here? 
Why do we need to check that the paragraph length is at least twice the heading length? Can you provide an example of what this is trying to avoid? 
Why is the sourcefile being passed to get_language() instead of the whole entry? Seems like a trivial change but I'm just curious 
Thank you for the pull request. Can you separate the changes in this PR into two separate PRs? The first change is the addition of a log level option, and the second is the addition of a plugin option. This will make it easier to review and merge. 
Does this mean that 1.99 is not allowed, or is it allowed but just not recommended? 
Should we add a comment to explain what is the purpose of this wrapper? 
What's the use case for having multiple approvals per api token? 
Can we use `IntPtr` instead of `bool`? 
Why do we need the `!opts->has_string("ckpt_dir")` check? 
Should we also have a `setAuthentication` method on the alert or web driver? 
Could you add a `@throws InvalidArgumentException` doc block for the exception? 
Is this meant to be for the user or ourself internally? I think this is mostly a user facing option, so I'd prefer to be able to specify the name of the ingress class. 
Why is the exit call removed? 
It's possible that this will change in the future but I'm not sure how to handle that. 
spec the memoization, not the decorator (learning) 
Is this doc accurate? It seems like this returns a chunk, not a chunk and an index. 
Should we put these `in` things in a struct? Like `func (s *Service) reconcileInternetGateways(ctx context.Context, network *v1alpha1.Network) error {` 
nit: I find it easier to read if you move the `map()` to a separate line and indent it one level 
Why is this necessary? Don't we already have xhr support in the webdriver? 
It seems like the convention is to use the singular form of the type as the name, so maybe <delete>nodeAffinityLabelsFlag</delete>nodeAffinityLabelFlag 
Can you add a comment that this is the most basic implementation, which doesn't do any retrying or multiplexing? 
should add more details about what exactly is being tested here 
Why return null if the primary type is not of type InputStream? 
Seems to be a good candidate for a protected method 
It's missing `gopkg.in/retry.v1` in the dependencies, it seems. 
It seems that all of the code paths that call this function don't actually expect this function to fail. Perhaps it should be named `ponyint_pool_realloc_size_unchecked`? 
Should this be a method on the Ledger? 
Would be good to add a test for unwatching a file. 
It seems like we're adding this here just to delete it. 
What is the reason for doing this change? 
What's the right way to handle this? Do we need to implement the import? 
There is a redundant line `regenerate:expected:csazure` was 2 times.  
should we rename the struct to something like etcdAddress? 
Why is this file being deleted? 
 I think it would be good to keep the name of the method in the message, like `String.format("overwriteFiles.validateNoConflictingAppends(%s)", conflictDetectionFilter())` or something. 
Style/MethodCallParentheses: Omit parentheses for method calls with arguments. 
using `expect.fail` now, but we may want to use `assert.fail` instead. 
Why do we need to add github.com/mysteriumnetwork/node/client/stats as a dependency? It seems like this dependency was added in a previous PR? 
Should this say "Returns a copy of this sequence as a new sequence of the same type" or something like that? 
Can you please rename this to `not authenticated` to make it more clear what's being returned? 
What happened to the comment about this being used for validation? 
why are you renaming this? 
Instead of `print`ing, can you `logging.debug`? Then this will be off by default and configurable. 
Is there a function that can be used to return `path` and `exists`? 
Why do you have a `defer` here? It seems like you should be calling `.Stop()` right before the return statement. 
Looks pretty reasonable to me! 
Why not use `typing.Any` instead of `typing.Optional[typing.Any]`? 
Do we need to make this `switch` so that we can handle other languages?
It'd be nice to not have to use `goenv.Get` here. 
Can we use `std::format` instead of `fmt::format`? 
Looks like this is just added to help test the mirror gateway. Can we get some tests in for that now that we have a way to test it? 
Sorry @cluzo, but this summary is completely wrong. It's not enabling OpenTelemetry for an activity, it's enabling OpenTelemetry for the application. We should use the summary from the base class and add a few comments. 
Should we prefix these with "fbo" or something else to avoid possible conflicts? 
Need to return the error you generate. 
There's a potential race condition here, if two threads call AddPeer at the same time, since the unlock/call to connectedPeers is outside the lock - one could overwrite the other's result? 
It may be worth noting that this is for querying messages in the state tree. I can see this being a bit confusing. 
node.<add>.isKilledBySLA() -> node.isKilledBySLA() 
Not that it matters, but this function doesn't seem to have any callers. 
With this change, RuleSetFactoryTest will be an empty test class. Is that really what we want? 
can we have a comment here explaining how is this different from `GetStageProgress` and `SaveStageProgress` in `eth/downloader/sync.go`? 
Is this file going to be deleted? 
Looks like this is not really a "formatting" change, but rather an addition of a new function. Maybe we should be a little stricter about enforcing summaries for files that don't look like they have a lot of formatting changes? 
Shouldn't this be registered in a way that it will be unregistered when the scope is destroyed? 
Looks like this is an old version, `convert_100_200` is not in the current code base. 
Can we not change these imports? 
Why was this change made? 
use `unless` 
Changing the name of the method like `keyFile(Optional<String> keyFilePath)`, `keyFilePath(Optional<String> keyFilePath)` would not be more clear? 
It's not clear to me if this code is complete. What is the next line? 
Could be a one-line list comp with an if/else, but don't think it's worth it. 
Can you please add a `throws ExecutorManagerException` to this method declaration? 
Is this really a function? If so, that should be made clear in the docstring. 
Why are you setting `Content-Type` header to `application/x-www-form-urlencoded` when setting the `DEFAULT_HEADERS` constant? 
is `cursor.cursorState` a thing? 
It's better to specify which resources are selected 
why is this labelled as `feature`? 
Can we make the class and its properties internal, since it is not clear why they are public, and also we are trying to reduce public surface area. 
why we need to import Vue and render App? 
Should we add a test case for this? This is not a trivial change. 
Is this because we can't do `this._original = null` in the `catchError` method? 
Do you have a way to test this? 
Can you change the logging to `LOG.info("Retrieved image: {}"), imageName);`? It's easier to read that way. 
why would you need to close the reader? 
Why is this function necessary? It seems like it would be more efficient to just strip the characters from the return value of `super().windowText` in the `windowText` property. 
What is the purpose of this function? It doesn't seem to be used. 
can you add some comments about what this test is trying to cover? 
It seems like this is not applicable for all cases. Can you update the summary? 
Can we fix the indentation? 
Should we remove the 'See doc for all details' part since there is no doc link? 
shouldn't memset be changed to memset_s? 
What is the difference between `GetObject` and `GetObjects`? Are they both needed? 
Wow, this command is actually executing arbitrary user-provided input?
Maybe it should be better to use the modified atom coordinates of the core. 
Why do we need to close the reader and writer after each iteration? 
Can we add an extra line break here
Should we add some description here about the changes we made in pvt_small.pth file? 
Should this be in a different file? 
why do you need this? is this a method you've added? 
Should the asset location be in `ghost.js`? 
What is the purpose of this? 
Can you use `reflect.StructOf` and `reflect.New` instead of `reflect.NewInstance`. 
Can you add some clarification on why the test is called `test_no_url_no_run_notifier` when it seems to be testing a different behavior? 
the addBinaryAnnotation could use a local variable to avoid the repeated computation of keyValue.length. Also, it could use `substring(idx+1)` instead of `substring(idx+1).length()`, but this is a minor nit. 
Can't you just use `Collection#find` here? 
Is this still needed? I'm pretty sure it is not used anymore. 
is there a reason for the function signature change or can we keep it as close to the original as possible? 
It might be more clear to name the struct `identityDTO` 
Does this need some kind of comment? :) 
Should we make the tag string parser more robust to handle more cases? e.g. tags separated by more than one character? 
Why is this in "core" and not in "certificates"? 
Why not just use a range - based for loop here for the range 0 to mol.getNumAtoms()? 
Missing indent before `<figure>`. 
It's hard to know if this is the right way to handle this, but it's certainly better than the previous implementation. We need some sort of easy-to-use public 'metadata' class that can be constructed from a `net::metadata` and then used to filter things down. 
Why not use datetime.isoformat() instead of this function? 
It seems like this should be string, not error. 
Is this a good function name? It seems like it does more than just set routes. 
Is it possible to refactor the add / delete statements into functions? 
Can this be a lambda? 
Should we have some specs for the shared behaviour? 
Can we move the `remoteHost` logic into a separate function, rather than just duplicating it in both branches? 
Why not i.addFlags() instead of i.setFlags() ? 
Is this a summary of what you are changing, or of the class? The summary should be more descriptive of the change, not the class. 
why is this returning a list of strings when later it is converted to a list of TableIdentifier? 
Can you add a description to this file? 
Why is the assert only for DR_HOST_NOT_TARGET? Should it not be for any target? 
Why do we need this? Can it be removed? 
Why is this servlet added twice? 
Do we need to handle the case where `opt` is not a string? If it is not a string, will it fail to expand? 
Any reason the imports should be re-ordered? 
Is this still needed? I had thought we removed all the list/map optimizations. 
Why is the help text changed? 
Why do you need `metricsConfig`? Can you provide a better name for it? 
Sorry, I don't think I understand what this method does. It seems like it creates a span from a `T` object, but the method name is "CreateObject" which doesn't make sense to me. Can you provide a sample usage? 
why not test the capability on the basic auth policy? 
Why was the `Eth1SyncServiceEnable` flag removed? 
Why are we injecting these methods? Something is wrong if we need to do this. 
Have you considered using the stack package from the internal dir? It seems like a better fit, and the template package is there already. 
why do we need to pass `consumerIntf` as argument? 
nit: This is a little confusing to me, what is the "base" address? And why do we need to import missing fields into the address? 
what is this file for? 
Can you add a test for this? 
Is this guaranteed to be included before you use any of these functions? 
nit: Why not just call the function `ListWorkloads`? 
How do you feel about `EnvironmentFileLocations` instead of `EnvironmentFiles`? I think it's clearer.
Why is this commented-out code here? Is it used somewhere else? 
Can you add a comment on the class level that explains what `m_next_instance_id` is used for? 
Assert is deprecated. Please use require. 
Looks like a bug in the old code ? 
It seems like this function could use some documentation. Also, the input arguments are not described in the code. 
inline the rowReader.readRow call? 
Do you think this should be refactored out into a service layer?
Why don't you move this code to the base class and make it virtual? 
should this be named `build_url_signature`? `generate_url_signature`? 
Should the log level be `FINEST` or `DEBUG` 
Should this be in a `Subscription` specific migration instead of a generic one? 
Seems like the `is_relative` variable should be declared as part of the `when` expression, since it's only used there.
Is there a reason that you don't pass the string `no_account_signed_in` as a parameter? 
Could you make the `if (createWriterFunc != null)` check before the `metricsConfig.validateProperties(schema)` check? 
Is this a bug fix or intentional? The type used to be a bool and now it's an error. 
Even though there is no logic change, I'd have preferred to have kept the `synchronized` here. 
Can we add a `default(bool)` to allowOptionalMappings? That way, people can call this without specifying a value for it. 
why not use a separate http.NewServeMux() for the debug api and add a http server on a different port? 
Why is this function returning `void`? 
Do we need the blank import on `rest` and `swift`? 
Is there a reason to sleep here? If so should the comment not mention it? 
It looks like this could be extracted to a helper function taking a function which determines the length. Also, why do you need to pass `protocol` in, can't you just use the one on `eval`? 
Is `actualNode` always defined? 
Can we add an option for `addTabIcons` to just default to true? 
Why is this public? 
Line is too long. [119/80] 
Should the source be configurable? e.g. if the user wants to set it to "DVN" or "Producer" or something else? 
Would it be possible to make the return type `ArrayCreationLevel`? 
It's funny, but not sure if it's useful 
1. With the exception handling, if the exception is thrown, the response code will be 200. 2. With the exception handling, the response will never be a BAD_REQUEST. 
Why is the cache needed? Can't the unique IDs be stored in a map instead? 
Code is looking better, but this is still a big function. I think we can do better to break it up. 
Maybe name this `Without` instead of `from`? So it will be more meaningful when used like `c.Next()`?. 
Why is this a public method? We don't want to expose this. 
if err := validateDocroot(app.Docroot); err != nil {
Why is `canPlay` being assigned to `reloadPlayButtons`? Shouldn't it be assigned to the `reloadPlayButtons` function? 
Public functions in the software.
What is the purpose of this test? It appears to be testing a mock that doesn't do anything. 
Why is this test failing? 
Should we be using pytest >=3.1 or pytest >=3.0? 
Could you elaborate on what this method does? 
Why to use `//` in here and `#include <mpi.h>`? 
What if we make the return type Optional<Comparator<K>>? we could then use Optional.empty to denote the natural ordering. 
Can you add a summary of what this test does? 
Why don't we use the context here? 
these should be `pony_asio_event_is_disposable` and `pony_asio_event_is_writable`, respectively, since they return a boolean value 
Why are we using `\\p{Alpha}` instead of just `[^:]+`? 
What happens if the file is being written to? 
why is this called processStageBlocksDownload (plural)? It only downloads one block at a time, right? 
random numbers are not required, but they are used in a lot of places. You can't really get away from it. 
Is it possible to split this test in two to make it more clear? 
Is there a way to avoid the string format? Maybe use `if/else` instead? 
What about aria-hidden? If the role maps to a presentation, we should still look for a permitted aria-hidden value. 
What does "avoid" mean? 
Can we add an index on :plan_type and :plan_id? 
nit - can we have a more explicit name - instead of 'enabled'? 
Is there a reason you're changing this data structure? It'd be easier to review if you broke it up into commits that were just changing the data structure and then commits that updated the references to this data. 
Can you reformat the opening and closing braces to the same column? 
Line is too long. [97/80] 
Use `pluck(:ba61_tier1_budget_mailbox)` instead of `map(&:ba61_tier1_budget_mailbox)`
Should be removed
Function is named "removeNode" but it actually just detaches a node from its parent. Maybe call it `detachNode` or `clearParent`? 
Is there a reason that this is an `attr_accessor` instead of an `attr_reader`? 
should we do this for all of the other summary methods? 
Is this code correct? 
Why is this needed in the first place? 
Should we add a completion type field? 
Why is this method called `namesLookback`? It's not clear what that means. 
Is this just a helper for ptrace tests? 
Does this need to be a member of the client?
Use a string instead of a symbol for the title. 
Why do we need this validation? Can we remove this if condition? 
It adds a lot of complexity for a feature that's not really being used. Are you sure you want to add this? 
Is this import needed? It doesn't seem to be used in the body of the file. 
Lock should be recursive because of the call to `handleJobFinishedInternal` 
Is the default series name configurable ? 
Should we be checking for null or empty on `users`? Or is it never null and always non-empty? 
Can you please add a comment here why this needs to be initialized in a separate function? 
It might be worth updating the summary to mention the new parameters too (effect2, effect3, etc.). 
why was it necessary to add these parameters? This seems like a change in functionality rather than a bug fix. 
Can we get rid of the `switch` and use `switch v.Type().Nature()` instead? 
Is it possible to extract this code into a class or a method? It feels like it would be more organized and maintainable that way. 
consider marking this with `//export` to make it clear that this interface is part of the public API. 
Looks good. I would even be tempted to add `auditLog *rpccontext.AuditLog` to the `batchCreateFederatedBundleRequest` to avoid having this `if` every time we want to audit. 
Not sure if IsolationLevel should be nullable, it is not on the other classes in the lib. 
Should this change be in a separate CL? 
nit: fine with this but prefer to follow the existing naming convention. as in job.log.kafka.enable. what does "globalDisable" mean btw? 
Is the `reader.Value` ever null? Or should we be doing a null check here? 
Looks good to me. Please add a test that PromotedCatalog#respond_to_missing? returns true if @catalog responds to the given method. 
It seems like we should get rid of the "this is the end" comment too. We can see that it's the end, and it's not adding any information about why the previous code was deleted. 
Remove the `using System.Threading;` line. 
What is the purpose of this comparator? Is it used in the project? Maybe a better name would be `FeedItemChronologicalComparator` 
Why the space? 
Could we use a helper function like `addTableRows(...)` to reduce extra `output = output + ...` lines? 
How about a `proposal.Location()` method that handles this logic? 
Do you need this change in the tests too? 
Can't you use cs.log.Errorf() instead of fmt.Errorf()? 
Should this be exported so that others can use it? 
should we return a `codes.Unimplemented` error instead? 
Use a default timeout of 5 seconds and increase the rate limit to 2 requests per second. 
It looks like `WriteDeadline` and `ReadDeadline` don't need to be in the `Options` struct. They are only used in the `Client`. 
Use `expect(page).to have_field('approver_email', disabled: true)` 
Why is this needed? 
Why not using `strtolower()` for `$formType` too? 
Can we refactor out the code that handles `Intent.ACTION_CREATE_SHORTCUT` into a separate method? 
Probably we should remove the 'retry' feature in this patch. It is an improvement for sure but its not directly related to the issue at hand. We can address that in a follow up patch. 
Any reason the port should be re-set to the default in the case that the user hasn't specified a port in the config? 
Line 1406-1415: if the schema of the keyProjection is not equivalent to the schema of the keyField return null. else if the schema of the valueProjection is not equivalent to the schema of the valueField return null. else if the LogicalType of `array` is not LogicalMap return null. else return the projection map. 
looks good, but what is the purpose of this change? 
duplicate import for go.uber.org/zap 
Should we return the error or only nil so the caller can set a default user? 
Why do we create a `ThreadSafePreset<swift::ModuleDecl>` here, but not in the other places where we create a new `swift::ModuleDecl`? 
Do we need to escape this data? Can you rebase and squash the whole thing? 
just curious, why we don't use a pointer to the Source struct? 
See if you can use the `admin` helper method instead of `login_as admin` 
What does this do? What is "event" ? 
Why do you need guard here? 
Use static readonly to make it shared between all instances. 
Is it worth putting a note here or in the readme that we are using this as a temporary solution until a better one comes along? 
Why are we using countlyCommon.formatTimeAgoText instead of countlyCommon.formatTimeAgo? 
As i read this code i think the `UNSUPPORTED_TYPE` is going to get swallowed here, eg a `LocalDateTime` is not an unsupported type but it will get handled by this code. 
Span should be ReadOnlySpan. 
It seems that this `runtimeMode` has always been `ModeAgent`? In that case, please delete the `else` block and this line: `runtimeMode = ModeController` 
Need to add this to the docs: "OpenBSD has no user-settable per-socket TCP keepalive" 
Why would we need to have a `[DefaultValue]` if we don't expose this in Config API? 
Looks good. 
feel free to merge after redoing the version bump in a follow-up commit to avoid the conflicts. 
Can you move this update in the controller? 
nit: Why is `translator` optional? Shouldn't this be more explicit? 
It'd be good to have some tests for this. 
nit: use a specific test name, like `TestGetContainerEnv_GetAppContainer` 
Can we just ASSERT that label > 0 && label < m_num_labels? 
So the idea is that we're testing the state tree logic and not the consensus logic? 
Is this code from an open-source project? It would help to add a link to the code or source repository for context. 
Can we move the new function `checkTypes` to a separate file? 
Shouldn't we have a default implementation of `HttpClientFactory` that returns a new HttpClient with a `SocketsHttpHandler`?
Do we need the comment `# Common setup?` or this is a question? 
Typo: `HostDataDir` isn't a thing. 
why is this a separate class? 
Can you add comment why this is needed. 
It seems like the use of "weave" is hardcoded in a few places. Is there a way to generalize it? 
These methods are not necessary anymore, since the agent process is now started in the constructor. So maybe we should just remove them. 
Can we move the entire `keep` block to the bottom of the function? 
For this constructor, can we add a default parameter of preview::read_mode::table? 
Can we add a comment to the continue statement explaining why we can continue there? 
Time is a misleading name, can you do something like `Timestamp` ? 
Why are we not using `f.Flow.Copy` here? 
Why do we need to pass config and isRevertReasonEnabled to this constructor? 
Why do we need to delete and then append? Why not just append in the first place? 
Is there a reason we use a combo here but not in the previous line? 
Use {{.Name}} in the example! 
There's a lot of commented-out code here, and the #include for holder.h is doing a lot of work. Could we reduce / remove some of it? 
What is the AppDomain field used for? 
~~Can this go in a separate service?~~
It looks like this PR is missing a summary. Please add one. 
we discussed this earlier, but the return value should be `Task<(Keccak?, AddTxResult?)>` to be consistent with `SendPubSubTransaction` 
Why is the hive file name changing? 
is this a constant for "kbfs_config" or is this a temporary file that is only used during a config write? 
Any reason to keep the original imports? 
Can we make the package name `testutils`, so that the package is itself self-descriptive? 
Are these URLs not already escaped or otherwise safe? Should they be wrapped in `raw()`? 
Any reason to keep up args=None? 
Looks good. 
Are we sure we want to use `Kernel.warn` and not `RSpec.warn_with`? 
is it possible to pass in the identity as an argument? 
What about adding a `--version` option? 
Is this really necessary? 
Should this be `CloseWithError` to match the comment, or `Cancel` to match the function name? 
Is there a reason you changed this to use `try-with-resources`? 
Thanks for adding this, I am curious what @tsg thinks about this. 
Why do you need to create a new AppDomain in a finally block and log some information from it? 
Is there any way to make this work with an interface rather than a struct? That way we could decouple the chainstore from the node itself. 
How about calling this `NewEntry`? 
Can we just replace this line with `parent::__construct($config)`? 
Use `with_progress` to get the number of completed exercises. 
Do you need this `else` block? Seems like you could just redirect in the `if` block. 
Why do we require the cluster ID to be set? The admin password should be enough. 
why is this being changed to a public property? 
Should the `--export-fixes` argument be added by default, if the result handler is not None? 
It's not clear to me what the code is doing. Please provide a more descriptive name for the function. 
What about `OPTION_RGX = re.compile(r'#\s*pylint:\s*([^;#]+)[;#]?.*')`? 
Just use require and use require.Error(t, err) in the cases where you want to check for errors. 
Can this be `void`? 
Can you add tests for flipping in the diagonal direction? 
Can we just `#ifdef NET46` this entire file? 
Why open/close the file every time? 
How come so many files have a non-Microsoft header? Has the company changed its policy? 
Why do you need to add `local_ip` to the flags? 
Why did we change the return type from bool to string? 
Use a single blank line to separate code. 
Maybe we should be documenting all exceptions that can occur here, rather than potentially silently ignoring them? 
Not sure I like the idea of having the imports inside the class definition. 
What is `VERSION`? It's being modified but never used, so it's confusing. 
Shouldn't the list be `GCLOUD_APPLICATION_DEFAULT_CREDENTIALS` instead of `~/.config/gcloud/application_default_credentials.json` ? 
Can we move the entire `var` statement to the top of the function, so that it's easier to read? Also, I think the default value of `leafFirstPingInterval` should be set to `leafDefaultFirstPingInterval` (without the parentheses), and that `leafFirstPingInterval` should be used instead of `leafDefaultFirstPingInterval` in the `if` statement below. 
why is on_open being redefined? 
Should move this function to a more appropriate module. Maybe the API module (since it operates on API resources)? 
Can we move these imports into the functions that use them? 
code style: if this is a utility class, then this should be a private constructor. 
Do you need to update the comment about the fact that you're only using the first value? 
Why not calling the variable just `Tag` or `RouterTag`? 
Do we need to remove this nil check? 
Should this test be in a package named `cloudfront`? 
Why the debug and trace fields were moved from the client object to the server object? Is it because they are server-wide settings?
Why is `model.setPageSource()` called twice? 
Why is the `IntermediatesManager` class being added here? 
Why are we deleting include for `rtps/participant/RTPSParticipantImpl.h`? 
why are we sleeping? 
Why use `Tuple` instead of just `List[str]`? 
How about `registry == null || filter == null`? 
Are you sure we want to change this prompt? It's an important part of the text. 
can we check if the image format is compatible with the view format instead? 
Is it possible to set the version here? 
Why did you add your copyright notice and change the year? 
Should this be named `findStrings` or `findStringsInFile` or something? 
Does this need to be a JUnit test? 
Well, that's not quite right. It's the entry point for the `osbuild` binary. If you were to update this comment, I suggest to make that distinction. 
Do we need to keep the default title method? 
 `retries` should be `{!number=} numberOfRetries` since it is an optional parameter. 
Can we call this `Query` instead of `Rules`? `Rules` is a bit generic. 
So, I'm not sure I agree with this.  When you have an `&image.Image` you do `image.Marshal()`, not `image.DockerfilePath()`.  I think that's the more idiomatic go.  We can document both ways, but I think we should use the more idiomatic way. 
Instead of passing settingsService to the JsonPrinter constructor, shouldn't you simply use JsonPrinter.jsonAsDatasetDto(releasedVersion, settingsService) ? 
Don't we need to delete the node from the parent? 
Looks good. Not sure about the second test, it doesn't seem to test anything about the server. 
Use `-1` as default value instead of `false` to indicate that the circuit breaker is not enabled. 
Why do we need to check that the AuthAddr is non-empty if we don't support rekeying? 
Why is the following code commented out?  ```
Since this is a constructor, I would expect the `$type` parameter to be after `$temporaryFilename`
Maybe use BOOST_CHECK_EQUAL_COLLECTIONS instead? 
why is it important to get the latest gas price? I'm just curious. 
what's the motivation of the changes? 
Should we make sure to only call `#keys` once? 
Line is too long. [166/80] 
Is there any reason to have this work in ticks rather than nanoseconds? 
Have you considered using the Optional.map() and returning the optional? 
Use `int64` instead of `uint64` for the `CpuWeight` field. 
It looks like this is still going to cause a problem for people using `structlog.stdlib.filter_by_level`. I think the right solution is to fix that filter to properly check the level for the `event` key. 
if the check is required, why don't we move them inside `extensions` class as well? 
So this is a method, and it doesn't open anything. 
Is this a typo? The description is confusing. 
Why do we read the policy after it's been deleted? 
Before, this was hard to read. Now it's slightly better but still not great. I think the best thing to do here would be to change this from a verb to a noun, so that we can say `connect <node-id> <provider-id>` or `connect <your-id> <provider-id>` which is more clear. We can handle the tab completion in a different command, and just use `connect` for the actual connecting. 
Typo here: "user s" => "user's". Also, can you add a period at the end ? 
we still need to fix the old stuff, but this is great. 
Is there a bug here? `ValidateAndUpdateStats` seems to be modifying `record` in a way that, when it's re-added with `AddFlowRecordWithoutLock`, it will now have the wrong stats for the connection. 
Should we remove the guard clause that checks for the type of the surface here? 
Why do we need to keep these? 
Why is this being changed? 
What about `XPathRule` is specific to XML (as opposed to XPathRuleQuery)? 
Since this is a non-null column you'll need to set a default value or set the existing data. 
the summary is a bit confusing. I would start with something like "Adds new columns to the database and updates existing data." 
Is there a better way to deal with the pause type then a bit mask? It seems like it would be clearer to have two separate fields... 
Let's add a blank line between the if and the else if here. 
Could you please add a comment to explain why `maxStalenessSeconds` is handled here and not in the `ReadPreference` constructor? 
why do we need this? 
Not sure what makes the struct readonly. i guess the underlying dictionary? 
Why is there a different hostport now? 
It looks like this loop will be running forever. In that case we should probably use a select so that we can exit this goroutine cleanly. 
Should this be documented? 
What is this for? 
Should this be called `GetMetrics`? 
Why is this 90 days by default? Maybe it should be shorter, like 30 days. 
What is the name of the node in this context? The summary seems more like a function comment. 
It seems that the constructor is not really necessary since the exception is thrown from the class itself. 
What if we just used the key from rememberMeServices.getKey() instead of keeping track of it ourselves? 
Why is this a problem? 
Do you need the `add` lines? 
Why is `OnEnd` a method and not a property? Also, is `MeasurementItem` the same as `ValueObserver`? 
Shouldn't this be something like `public static final String PREF_CURRENTLY_PLAYING_MEDIA = "prefCurrentPlayingMedia"` so that we can use the same string when saving *and* reading the preferences? 
method named `getPricingGroup` seems to return a boolean. 
Not sure if this is the best place to do this. Is it possible to do this in the UserPreferences class itself? 
Why is this change necessary? It looks like this has been discussed before and the original value has been chosen for a reason. 
is this safe to do outside the lock? 
Should it be ``get`` instead of ``or``? 
What is this SetWriteDeadline for? and why add a deadline? 
What does this method do? 
Do we need to check `node.hasAttribute('aria-valuenow')`? The roles you mentioned already have `aria-valuenow` in their implicit values. 
Why return a calendar object? Why not just the time in millis since epoch? 
Really? I think we should be more careful with our summaries. 
Is there a way to avoid the code duplication in the `if portData == nil` and `else` branches?  
Can we make this more efficient by not calling `hasAnyResourceNameParameter` if we're not logging? 
and `findBy` should also return `array` 
Why not just log “successfully connected to peer (inbound)”? 
Is it now possible to set a `null` tooltip? 
Good point. I think the only way to fix this is to add an extra API call to the DB. 
Consider moving this to `gkemgr` and use the `ephemeralDenyList` constant there.
It is the first time I see that you call a method and delete its call in the same commit. It is not fully clear to me how it is relevant for the test, but anyway the test is green and as you said, it is "just" a test. So I am fine with it ;) 
Unnecessary lines of code being added. 
My bad - you're right this one was ok. 
why do we get _all_options and _maxlevel here? 
Why not use `@wordpress/element`? 
Why not just set `sqlci_env->lobGlobals` to NULL in `cli/SqlciErrors.h`? The value is never used for anything. (The other `initLog4cxx` does set it to non-NULL.) 
Why is this change needed? 
can't we just have `*virtualDiscDesc.CapacityAllocationUnits == ""` as the default case and skip directly to `byteCapacity, err := Parse(...` 
should we also have a `getBaseFee()` method here? 
Can we just check if `version` is greater than or equal to `3.2`? 
Should this package be "arhcer" (or "archr", or "arcr", or "arch" or ...)? 
Revert this, we don't want to serve static assets from rails in production 
Why not just use `QVariant(x, type=QMetaType.Type.UInt)`? 
Why not use Buffer.allocUnsafe(21) ? 
What is the use of this property converter? Cannot this not be set via `spark.hive.redact.columns`?
Can you add a comment explaining this test? 
Do we need to log the registered nodes at finest level? 
Why do we need the `Guest` class, can't we just pass in an email string? 
What is the purpose of this script? 
It might be worth making the test name make it a little clearer that it's testing trimming. TestTrimComputeServiceAccount, maybe? 
nit: can you please change to specific import? 
Any reason not to just use `clamp` here? 
Why do we need this line? I didn't see any usage of the `mockManifest` variable. 
Could we use a regex for this check instead? Something like `code.match(/^P11[7J4T1ACZ]....$/)`? 
Why do we have this function? I cannot find any use of it 
Why is the contextHelpMixin import being replaced by gui.contextHelp? 
Why do we need to return the HRESULT if we never use it? 
Why do we need this? Can't we just use `io.MultiWriter` 
Is it really necessary to cast here? 
It seems like the `config` parameter is unused? If so, please remove it. 
Any reason not to use "config.PORT_S3" here? 
Why is this here? It's not needed. 
Why do we have two functions that do the same thing? 
don't need a new line here 
Don't forget to update the info doc whoever self is. 
Why do we need to call `get_master_status` here? It looks like we're not using the result. 
For this line and the following one, it's not clear to me why the import should return a network interface. The comment doesn't really help to clarify that either. 
Could you add a short summary of what this package does? 
What is the reason we need to suppress the useless-suppression and suppressed-message here? 
Do all of these dependencies still need to be there? 
Why is the app name set to "" if a Docroot isn't provided?
Does `command_options` need to be a local variable? 
Can we make the widget a dependency so that we can `import { Widget } from './googlesitekit/widgets';`? 
Why make this public? Do you use it elsewhere? 
It would be nice if the translation could include the name of the medication. 
Why is this extern? It should be declared in a header file and included. 
There's a strange `rescue` statement in this function, which doesn't seem to be doing anything. Maybe remove it? 
Is this the correct change? It looks like we're removing the `changeMd` parameter without using it. 
Not a fan of these overly generic method names. I think we should pick better names like LogErrorIfAny, LogErrorOrInformation, or something like that. 
Why is this a link to the config? 
struct field DockerLabels should be DockerLabels 
Why is this returning null when the slot is not found? 
nit: can we put these two together and name them in a similar fashion. What do you think, "iceberg." at the beginning? 
Should we consider using the pattern as an implicit validation rule? e.g. ` $attributeCode = AttributeCode::fromString('o_O'); ` should throw an exception. 
Would be nice to have the same logic on CPU as well. 
Can you explain what this is used for? It's a bit confusing. 
why not make a separate function for this? 
Why do you remove the `ovsctlClient` argument? 
Don't understand what this if not exists check is doing, as you're just going to return anyway? 
Why not use `boost::shared_ptr` and `boost::make_shared`? 
anything we need to do for the tests? 
Is this really supposed to be an async request? The xhr object is synchronous. Also, the `sync` flag is used to make a synchronous request, it doesn't have anything to do with the state of the request. 
Can we add some documentation to explain why we are starting the moto server twice? 
Why was this file included in the PR in the first place? If it's not relevant, it should be removed. 
why is this commented? 
Why did you comment out `SalesforceSDKManager.initNative`? 
why is this in users.js? 
What does this do? 
Why do we need to call `this.deleteBlobs()` with the array again? 
Somehow I agree with the change but I know it will be changed again later. 
we can use `sprintf` instead of `.` concatenation 
What is the `ext` in `ctx.Params(":ext")`? 
Is this necessary? 
Is it actually possible to use this class in some way with `new` operator? 
It would be good to also check the number of paths here. 
please delete the sentence "// The namespace of this pod." 
Why is this adding a class method? Seems unrelated to the method being modified 
What is the purpose of this method? It looks like it is never used. It also looks like you may have overwritten the wrong method. 
Should there be an example of how to use the EmitOptions struct? 
It's not clear to me why do we need to change this. 
It's not obvious to me why this special case is needed. 
Can we add a test for this? 
Why is this method not inlined into its only caller? 
Looks good to me, but I'm not familiar with this codebase so would appreciate a second opinion. 
to be consistent with the code, we should probably also rename the `LoadConfig` function to `LoadTestConfigWithoutTLS` 
Is this a typo? `inventory-file` should be `inventory_file` 
should I worry about it that memoryPlugin has no method to save the data? 
Why not use `random.uniform` for the first condition? 
Test code. 
Is there a reason why this setting is called `autocomplete_path` and not `suggest_path`? 
Test names should be descriptive of what they test. "SingleArchiveFileRollsCorrectly" still doesn't say what this test is testing. 
Is this test supposed to be in SolrTestCaseJ4? 
nit: use `System.getenv(key)` instead 
Why is this needed? 
Seems like this is a decent change. 
Not sure about the shutdown hook. It might be a good idea to register it in all cases and keep a static reference to every instance so we can call `deleteBaseDir()` in `finally` blocks. 
Maybe we can introduce a `copyCertManagerAnnotations` helper which does the annotations translation for us? 
Should we return a `DialogResult` here? 
Can we add a new line before the if condition? 
we should mention the file name parameter in the method so it's clear that it's relative. 
IOUtil, Control are not needed as fields? 
Why is there a shadow file defined here now? 
if this is the whole file, you can use a bare object and get rid of the import 
Looks good to me, but want to confirm that this works as expected on Windows. Do we have CI set up to test this? 
if this is a migration test, should it be in ./tools/migration/internal? 
Why change the name? 
Can this be a util function? 
It looks like this is only used in Debug build. Is that intentional? 
Is this something that would better fit in the order of the code block (e.g. before touch_point_destroy)? 
 `current_mode_min_count` is missing 
Looks like you're just checking for the size of the two strings. Is this the only thing you need to compare? If so, I think you can just do `return p->data.bo.size == p1->data.bo.size;`. 
What does this code do? 
Why not directly bind to `ZMSHandler.class`? 
Why is this in the shared project? 
Can you add a comment that says that this test is to ensure that the table exists after calling `createTable`? 
Why did you make the `Escape` method `static`? It seems like it could be a `delegate` (instead of a method). 
Should we move the strings to English.php too? 
How about using a constant for the default timeout? 
Why is this random null here? 
API Change : Instead of having `PropertyBagDictionary(PropertyBagDictionary initializer = null)`, how about just having `PropertyBagDictionary(PropertyBagDictionary initializer)` and `PropertyBagDictionary()`? 
Why do we need this as a file? 
Is this code related to the description? 
Should we use `__version__` instead of hardcoding the version? 
Can this be simplified to just using c.chain.LastBlock().Timestamp() instead? 
Can we add a class like `test-request-button` so it's easy to target in JS? 
Can this method be private? 
What is the purpose of the added path? 
What happens if the output pipe is closed and there is still data to be written? 
Can you clarify what this code does? 
Why are you using a static import here? 
Can this be simplified to just "This field prohibits :other"? 
Could you add docblocks here and below? 
It would be great to have a test case for this. 
Seems like the import for `getStandards` is redundant, as it's already imported above. 
Why did you remove the copyright for 2014? 
what's the point of this builder stuff? 
Is it ok to leave this here, or should we add a comment that we should fix this later? 
Do we want to use `flux_log()` here instead of `jobinfo_log_output()`? Also, is it a good assumption that `cmd` is not NULL in this code path? 
It looks like this was an intended change. 
Why was this removed? It seems like it could be useful information to have. 
the return value of `getLimitInfo` has changed... how is this handled downstream? 
why do we need to import iec104_information_objects? 
Can we add a comment explaining why we're doing this? 
Can we move this method to util? 
Should the error message be modified to "You cannot delete any item. Please modify the existing."? 
Is there a way to differentiate between the body being sent as bytes and the body being sent as a string? In the latter case, the `content-type` header should be `multipart/form-data; charset=utf-8`  
Should we keep the `MongoError` or the `core` version? 
Why do we need to check if the structs are compatible? 
Let's add a comment for the `if` statement to know what the condition is. 
Why are you changing this? 
Should we be returning the return value of read instead of FPGA_OK on success? 
Do you know the answer to the question you asked about `self._is_fileobj`? It's a property defined on the `SaveFileDialog` class that is not used. 
Should the documentation be updated to reflect the new `--template` option? 
why is this being changed? 
It would be good to also mention that this is the case for `apply`-able functions, which are the majority of functions in Julia. 
Why is there a comment about conntime balancing? 
It's been a while, but I think there's a reason we switched this to the relationships module instead of the old CS. Can we switch this back? 
Will do. After a bit more research, it's possible that this may be a bit more complex than originally thought. Something to be worked on over time. 
Looks like you're missing an import here, but not sure what. What is `iface`? 
As a side note: This is not a good unit test, as it relies on the code of the `SwaggerModeler` instead of tests the behavior of the `SwaggerModeler`. 
What is the purpose of removing the plugin from a container? 
What happened to the import of `random`? 
Do we need to check `!GraphSummary.IsDisposed`? 
should this be on the instance itself and not the instance's type? 
Why do you have underscores in your test names? 
Why we need to update this?
Why does this test fail when I remove `bob` from `self.effective_principals`? 
Is this necessary? Won't any FOO tests we run also run this? 
Is there an example of how this callback would be used? 
It seems like this is the same line repeated multiple times, is it a mistake? 
It'd be nice if we can factor out this repeated code pattern into a helper function. 
why `int(syscall.Stdin)`? 
As mentioned on the method below, why not just return the breakpoint if it is not None? 
Why aren't we using os.path.join for this? 
Is this a good place to add a comment that explains why the original code was wrong and this is the right fix? 
Is this part of the public API? If so, can we make sure it's documented? 
Should we use `ShowOutput` instead of `showOutput`? It's confusing. 
Can we use `virtualNode.attr('alt')` here? 
Is there a reason this is returning with a 500 and not just a `swarm.httpError`?
why not just ad, not ad.Source (it is confusing, as ad.Source is a string, not a real source). 
Why are we scheduling IP host resolving here? Shouldn't this be in its own method? 
How is this different from the previous function? What is the purpose of extras? 
nit: The description of these argument groups is a little confusing. The cloudsql-region is part of the network, and the network-host-project-id is part of the email group. Can you fix the descriptions? 
Consider using `RadioButton.Checked` property instead of invoking `Select` method. 
Can we use `tabbed_browser.activate_tab`? 
Not sure if this code is being left like this because it is only for testing, but if it is not, then this should probably be `return`ed. 
For scale_factor, should the error message be `scale_factor must be >= 0`? 
What is the valid range here? 
It seems like this is all part of the same method, so I would just merge this into 1 method call, and eliminate this extra `if host.is_powershell?` logic. 
Comments should not be left in code. Please remove this. 
It looks like `F.binary_cross_entropy_with_logits` has weight support, maybe we can just pass the `weight` to the function, instead of multiplying it. What do you think, @kchen? 
Why are these options not part of the constructor? 
These classes should probably be in separate files. <br> They are not nested. 
Is there some specific reason why you are chaining to `super.onConfigurationChanged()`? 
can you also throw this into a private method, like `api_job_response` or something? so `index` is a tad easier to read? 
These should be parsed by `configargparse` and then passed in... 
Just wondering, is there a way to make the code more readable? 
Can we please delete the comment on the second line. It's very confusing. 
Is the name of this function a typo? Should it be `test_incorrect_sequence`? 
Why is this a GET, and not a POST? 
nit: why not `private`? 
Could we have a better name for this async method? 
There is no code in this class. Can it be deleted? 
It might be worth mentioning that this is only used for the test suite. 
Should the name of this function changed to `displayMessage` and just use `updateTitle` in `showSubjectInMessageHeader`? 
Why does this function return smiles instead of the tautomers? `tsmiles` isn't used. 
Also, hardcoded url? 
should be called `isNonEmpty`? 
Line is too long. [118/80] 
For a 1.6 version we might want to consider adding a domain name field to this struct. 
Why not put the filter check in a filter validator? 
From the call sites, it looks like this is always called in a context where a boolean return value is ignored. Maybe it should return a error value rather than a boolean value. 
Is the input `$value` or `$decoded`? They don't seem to be used in a consistent way. 
Should this be marked as experimental as well? 
At least we should add a warning that test-time augmentation is not supported. 
Why not just use Note.load(noteIds[0]).then(note => {' +
It looks like `Value` is a vector, so why not just use `[]Value`? 
Is there a way to avoid the extra copy of the molecule in the common case (where the caller doesn't care about the molecule)? 
Should there be an error check here? 
Is this going to be a problem for IPv6 addresses? 
What is the purpose of this object? 
what is this test even doing? 
you have to define trackable_ordered and non_trackable_unordered in the gpx model 
Why do we need to initialize a new `Example` object? If we are doing this, do we need to restore it after the run (since it has instance variables)? 
why is this change needed? 
After the walk is detected, stop the event walk. 
Looks like you're changing a lot of code that isn't touched by the bug fix, could you split this out to a separate commit? 
Is it possible to add a description of the package and the purpose of the binary here? 
Do you know if this would work with the intellij idea plugin? 
Why is `k8s.io/klog` being removed? 
name - this should be in the interface, and possibly the hashCode() should also be in the interface
Maybe something like "Send a message to an SNS topic in the specified region" 
Can we rename this to `WorkloadOptions`? 
Maybe it makes sense to have a separate function for this which takes a `scope` and a `node` as arguments? 
Should we be passing around an object that represents the HCL for the config? It would make this a lot easier. 
What is the purpose of this? It seems out of place to be looking for accounts mentioned in the notification. 
Why is this metric config getting set here? 
Is this API really needed? It seems like we can just use `token` instead. 
What is the purpose of this new test? 
why are we commenting out the segfault handler? 
Is there a reason the ResultSet class is inheriting from UserList instead of list? 
What is the purpose of this test? 
Shouldn't these be getters? 
Shouldn't this be `fake` instead of `mock`? 
Followed the review comments to make sure that the object is immutable. 
Do you think it would be cleaner to make a helper function for the `new QueryAtom` call? 
Can you provide more context on what this method is doing? It's not clear from the code snippet alone. 
you should also change the counter to numFiles, as it's more precise 
when using `exec`, there's a far better way to check the output: `result = exec(command, :accept_all_exit_codes => true); result.stdout == 'x86_64'` 
It is not clear what this method does, could you add some documentation? 
Can we validate that the source disk is set when creating from source? 
What is the purpose of this code? Please provide some context. 
Why is the condition for sending the welcome email 2 seconds? Is there a reason for this specific time frame? 
It looks like this function is doing more than one thing, it handles both the context menu and the column insert. It would be better to separate these responsibilities into different functions. Also, the name of the function should describe what it does, rather than just being called `contextMenu`. 
Shouldn't the `[Benchmark]` attribute be on the method, not the class? 
It looks like all the tests are passing, but I'm not sure I understand the change. Can you provide more context or explain the reasoning behind this? 
What is the `googlecloudprofiler`? 
Consider using the new WordPress dependencies import syntax for consistency. 
why not just use self.assertEqual(redimmed.kdims, [self.dim1.clone(name='Integer'), self.dim2.clone(type=int)]) ? 
should we be sending items 1 by 1 in the future? 
why is this not in the /types package? 
why is this done by the mock library directly instead of just setting up the mock to return a specific error? 
Should we be adding this to `Microsoft.Rest.ClientRuntime`? 
Can you add a comment here explaining why we do this? 
Why is this only a comment and not a separate function? 
Why don't we just set `config->http_proxy` to `NULL` by default? 
Is this needed for something? 
Maybe we can use a better name? 'Option' is a bit confusing. 
you can remove the copyright line as it is not a Swarm file. 
Why is "go.opentelemetry.io/api/core" added here? 
Is there a reason not to always use `errors.Cause(err)` here? 
Why are you changing the return type from `void` to `object`? This is going to break any code that calls this function. 
Why are you importing React? 
Can we add the comment `// Test for #651` before this test 
Would be good to have a detailed comment about what this test does, and why it's useful. 
Do we also need a `MILLISECONDS` constant to follow the same pattern? 
nit: no space before semicolon 
lgtm, thanks - one minor change, but could you change `cg.Name` to `cg.GetName()` so that it is easier to change the API in the future? 
Why do we need this test_assert.h now? Why not just use standard `assert()` or `assert_eq()`? 
Is this an issue? I noticed that this is different from the code in the PR. 
nit: `get` to `find` or `byName`? 
nit: no need to import "k8s.io/klog" if it is not used 
Why is this needed? I was under the impression that this was a constant provided by JavaScript. 
Why do we need to import `threading`? 
maybe add a test that checks the flow is non-empty when it's supposed to be? 
What's the difference between this method and the method `addNodeToResults` above it? 
Why not simply call `callback.onSuccess(parseResponse(response, bodyConverter))` and catch the `IOException` only? &nbsp; 
What is the purpose of this controller (if it's still used)? Should it be removed? 
nit: no need to collect as we are already iterating 
is this the keystore? 
Can we add `//` comment explaining how is this different from `GetSubject`? 
Can you please add some docblock to explain what this function does ? Also, what is the purpose of `output_callback` ? 
Why is this not named `ITagContext`? 
Why do we need to specify the `Content-Type` header twice? 
Wildcard imports are bad. 
It seems like `from cliquet.scripts import initialize` would also work here. 
Why rename this file? 
Can you add a summary for the interface as well? 
nit: rename `allParameters` to `jsonParameters` and `parameters` to `allParameters`. 
Do we have an existing issue for this test flakiness? 
looks like this is missing the [Benchmark] attribute on the method. 
nit: I think we should make this an actual package. Even though it's only a single type right now, it feels weird to just have a naked type floating around like this. 
Why the change from IRewardCalculator to Func<ITransactionProcessor, IRewardCalculator>? 
Does this need a test? 
Wouldn't it be better to return null here vs a list of the interfaces? 
 Can we switch the order so that we don't have to duplicate the call to compute? 
Looks like this could be simplified if the `Act` could be passed as an interface to the helper function. 
Should we have a different method name for this? 
Can we make this more efficient by doing the nodeName check within the composed parent check? That way we don't need to recheck nodeName if it's not necessary. 
Could use some comments in here explaining the purpose of some of these variables. 
Why is this here? It's used nowhere. 
Is this class used anywhere in the code? Otherwise it could be removed. 
missing space before comment 
Should this be called `secondaryConfig` instead of `slaveConfig` to match the `secondary` property below? 
Is this test necessary? It just seems to be testing functionality that should already be working. 
can we also remove the key here? 
There is no need to have `else if` for the second check, `else` is enough. 
It looks like SOLR-7161 added the ability to specify a single file path to upload - can we add that support for the Config API as well? 
What is the purpose of this function? It doesn't seem to be used anywhere in the code. 
it's not clear what this is or why it's needed
nit: maybe you want to add a docstring? 
Can you add a comment explaining what is going on here? 
Can you log the privacyUserId? 
Line is too long. [98/80]<br>Prefer single-quoted strings unless you need double quotes to interpolate something. 
Why not use a `unique_ptr` instead of `dp_ostream`? 
why do you need this instead of just `h.resolvedReaders[uid] != ""`? 
Minor: can you add a comment here to explain what this variable is used for? 
Probably better to have an explicit dependency on libcodechecker. 
Line is too long. [80/80] 
Why not just `plugin.instance.getSourceData()` without the `Array`? 
What is the purpose of this method? 
Can we make this param.ObjectSelector? 
is this function still used? If not, let's remove it 
Can you add a comment explaining why this `if` is here? 
 This summary is too general and lacks important information, such as the purpose of this function. 
Why are we adding this? This seems like it could be a breaking change. 
These two functions are not related, why are they in the same file? 
Is the summary correct? It seems like it is returning a list of network interfaces with a single network link. 
Can we make a note in the generated script that this is a workaround for Mac OS X 10.9? 
Why are you changing the license? 
What does this change mean? 
Do we need to return the nil error? Maybe just return. 
Can you explain why the security attributes are needed and why we're not actually adding them? 
nit: does it make sense to replace the last 3 lines with this: `if this_column == that_col and this_name == that_name:`? 
same question as above - commits like this I think should just be annotated - there is only one change that I see so I don't think that the deprecation suppression is needed? 
Why is this in this file? 
Is this a performance optimization? Avoiding an unnecessary query? 
Why is `authenticated` required? If we don't care about the session, can we just make it `anonymous`? 
Shouldn't the subtraction be if (Blockly.BlockSvg.NOTCH_WIDTH) subtract this.NOTCH_WIDTH? 
Do you think it makes sense to call `quote.famous_last_words` to produce a quote for "Deep Thoughts"? Maybe it would be better to have a separate method for that. 
There's no need to add the `<add>` tag, the code is the same. 
How is this different from the previous function? 
Can we change the log level to debug? I think this is going to be very chatty. 
Should we have a test for the `range_type` kwarg? 
Why are some now static and others not? 
Do we need to check for RCLONE_CONFIG_PASS before now? 
Looks good to me, but I'm not sure what the right way to test prometheus metrics is. 
Looks good. Not sure about the name of the `nameOrHandle` parameter, but that's not a big deal. 
Is this an intended behavior? Should we not show a dialog box here? 
Should we be adding "beta" to the list of disallowed networks? 
Looks like you're missing the `f` prefix for the format string. Also, this looks like it should be `max_size` instead of `max_seq_len` to match the constructor arg. 
Link to a PR that shows how this function is being used. 
Is it now possible to validate a path with length > 1? 
Why do we have this extra addEvent method? 
Why are you moving `TaskIndex`? It's a POD, so it doesn't really matter. 
why the change to the default we probably don't want? 
What is the purpose of this change? 
can you add a new line after the new flag so it is grouped with the other flags? 
why are we passing the option here? can we get it from the server or something? do we really need to be this accurate? 
Shouldn't we mention the `imageMaxWidth` option here as well? 
It seems like we could use the same strategy for the other `NewXXX` functions. 
Why the change in the `dbName` assignment? That seems like a separate commit. 
Is there a reason for using Float instead of Integer for the stress test option? 
Why did you decide to change the name of this class? 
Think the comment is not needed any more. 
Address.fromHexStringStrict() might throw an exception. If that happens, we want to return a CoercingParseValueException, not a CoercingParseLiteralException. 
There are some tests that are commented out, do they need to be? 
it looks like `Address` was changed from a string to a byte slice for no reason? 
Is there a reason why you removed `'contact' => 'Contact', 'contact-us' => 'Contact Us'`? 
Why are we adding a new `toJSON` method instead of using `Object.assign`? The new method is not used anywhere in the code. 
It feels like the `os.Exit()` should be done in the `main()` function, not in a library like this. 
 This should be a class, not an interface. 
Minor: I think we would want `$options['allowfullscreen'] ? 'allowfullscreen' : ''` rather than `isset()` 
it might be nice to have a `namespace` here, instead of just a `get` 
Is there a way to not have to explicitly import all classes? 
Adding a new constructor is a breaking change. 
Why not use `getFlowStatus().equals(FlowStatus.FAILED)`? 
should we call RemoteClient.Test() in a goroutine? 
Comment is very misleading, the `end_time` is not the "transfer time" but the entire process time. 
What does this do? 
Is this the right default for the route53 provider? The secretRef is a bit confusing, would have expected it to be a SecretKeySelector (and same for the access key ID). 
What does the `Match()` do? That code is very hard to follow. 
What is the purpose of the 'length' parameter? It doesn't seem to be used in the function. 
There is no need for the parser field, as it's only used in one method. 
What is the purpose of this method? Does it archive the file or does it just return the archive file name? 
Why do you need to do this? Can you please move this comment to the top of the function to explain why this is necessary? 
How do we handle the `aria-current` attribute here? It seems we are not normalizing it. 
Is this really the best way to do this? 
Why does this function take a `json.RawMessage`? If it were `interface{}`, then you'd have `map[string]interface{}`, which you could then type assert as `map[string]interface{}`. Why not use that? 
Is this the external API? I'm not sure how to use it. 
Why does this method return `false`? 
Why is this nuking the instance path? 
recordStepTime should happen after the step is completed, and it should return an error to be returned instead of calling wrapRunError. 
What if the dispatcher is empty? I think that might be an issue. 
Why does the property need to be set to null here? 
Just a note, in the future it may be helpful to provide a little more context for the code you're changing. For example, what is `ds` and where is it defined? Also, it may be good to add some comments to explain the purpose of each test. 
can you use a more descriptive name for `Sync`? `handleChallenge` maybe? 
Why does this function need a `const` pointer? 
Why did MakeWatcher's wait arg get removed? 
Why is Path appended to the message? 
Why are we deprecating this? This is less verbose than a tuple... 
Are the `forceRDKit` arguments used anywhere? 
It would be nice to add a comment to explain why we are waiting for *current* round + 10. 
Don't we need to first delete all the manifests from the current snapshot, and only then add the new manifest? 
can you put this in the javadoc of the class? 
It might be nice to have a note about how the tests are run. 
Not sure I understand the additions, so the enqueueAppliedToGroup bool is for the case when we are in reprocessCNP and we are processing a Namespace event that triggers a CNP reprocessing, correct? Hence we should enqueue an event in the AppliedToGroup controller? 
Is `topology` always defined here? 
Would you prefer "SerializeTrace: no-op for a node that is not in the queue"? 
Can we do this with `&&` and `||` instead of nesting these blocks? 
why do we need a nullptr check here? should the call return nullptr if no features are found? 
Don't think this is necessary, but if you want to do this, then you should use a regular expression. 
pylint comment should be before the function definition. 
Not sure if this is worth it, but alternatively you could use "if not (2, 5) <= (major, minor) < (2, 7):" 
 @clarketm just a suggestion, but maybe the example could be updated to show the 'app_name' and 'environment_name' args as well? 
Missing docstring for newly added function get_if_raw_hwaddr 
use `identity-obj-proxy` instead of `jest-serializer` 
Looks great. I would just make a minor change -- when you add the comment, please link to the documentation of the scanner 
Why do we want to return early if cluster is nil? 
Why change this? 
Why is the new argument after the default one? 
Why do we need to import `Ember`? `computed` already imported from `ember` 
why do you need a `chaos-mesh` tag here? 
Does it make sense to move the `IptablesBackend` and `Ip6Support` to the `FelixConfig` struct? 
Is this still a WIP? 
can you please add a comment explaining why we're going through the trouble of building the lists in reverse, only to reverse them at the end? 
Why do we have these inner classes? 
Should this test be renamed to reflect the code it is actually testing? Something like `TestMerkleTreeHashMatchesRFC6962Sample`? 
Can't this just be `return nullptr;`? 
It would be good to add some comments explaining the use of these different properties. 
Why do we have a maxQueryLength? It seems like we should always return suggestions if the word is too long and a suggestion exists. 
Do we need to keep the `infoStream` field, or can we just remove it? 
Maybe add a comment here to explain what the difference is between `Plugins` and `Find`? 
What is the reason for this change? Can we add a comment explaining it?
`` `cpp // ... if (type == Type::None) { // ... } ` `` 
As you said, this is quite large so I'm not sure if this is the best way to do this. 
Why is this needed? 
Why is this method renamed? 
 I don't understand the change here. 
Why is the `RunUI` call now gone? 
Is this still just EC2 or can this happen for other machines? If this is EC2 specific, should we have EC2 in the log message? 
Perhaps you could add an __init__ method to avoid hardcoding the current_app? 
It's a little weird to have the error message here too. Maybe pass the msg as an argument to make_repo_error and do the assert in the test? 
Fix the comment to accurately describe the event. 
use an `else` here? 
Why no `setUp` method to do the `h2o.init` call? 
Should raise `NotImplementedError` in `_data` instead? 
Is this accurate? It looks like this is now only the encryption functionality for the given message. 
Do we really want to do this? This breaks the ability to test on any system that has NVCC installed. Perhaps this should be an option? 
Shouldn't this be named "SingleThreadedCrawler"? Is it really a config? 
Can you add a test case that would return a type that is not a types.Basic (e.g. a type that would return nil on the Type().(*types.Basic) call) 
Is it worthwhile to add `getArrowGlacierBlockNumber` here, or should we just wait until the fork name is known? 
Can you give some examples of how you intend to use this method? It might be easier to review with a bit more context. 
Why does `Send` have a `ctx` arg, but `Wait` doesn't? 
Why not just use `response.get_child ("blocks").size ()` instead of `blocks.front ().second.size ()`? 
Do we need an empty constructor for LatLonTriangle? Shouldn't we have all the fields? 
As I mentioned in the other PR, I think you should use `GetDictionary` and `GetString` consistently. This code is a good example, as you're using `GetInt32` here. 
Why didn't we just use `MODULES.map(&:instance_methods).flatten`? 
Truthfully, I don't even remember what this byte is. 
Why is this being added? 
Why is `this.state` reinitialized? 
Is this still necessary after the changes in 1f6a9b9? 
Why do you need to return a non-nil error here? 
Some questions: <li>Shouldn't `removeAll` return a `Set` instead of `Void`? <li>Is it useful to have `reverse` as a default method or should it be moved to `LinkedHashSet` and `SortedSet`? <li>Is `default` useful here? It should be removed if we move the method to one of the subtypes. <li>It is worth mentioning this method is a no-op if the set is empty? 
Why is this a regression test? I think it would be better to simply test that completionview.selectionModel().currentIndex returns an invalid index when there is no model set. 
Why did this change from a delta of 1 minute to 10 minutes? This is going to make the test take much longer to run. 
Should this be called `text_to_be_present`? 
Are you sure this is the right file? There's no mention of tags or sequences in the code. 
Can you refactor this to use a list comprehension instead of a for loop? 
will do! This does look like a useful addition, but i think we need some test coverage before we can merge it. 
Shouldn't we make sure the permissions are still present on the record? 
Wow, this is a pretty big change. Wonder if it could be broken down a bit more. 
So the name of this method might be a little misleading. It doesn't remove the namespace, it removes the namespace's path by setting it to "", and then it returns whether the path was set or not. Maybe we can rename to SetPath and return the bool, and provide a new Remove method that actually removes it? 
Why the addition of the ``hash`` argument? 
Can we add a comment here explaining what this is doing? 
Why do you return null if list is null? 
Should we check the MLflow version in the "mlflow" extra's requirements? 
Should `product_type` and `name` be constants or parameters? 
Can we do one more level of hierarchy? 
nit: can you turn this into a switch statement? 
Shouldn't these be in an `errors` namespace? 
could you please explain the `:py:attr:`Register._UNSET_NAMESPACE` in the docstring? 
What are these metrics for? 
in.skip(offset) -> in.skip(this.getOffset()) 
nameMap is actually a map of name to container object. Perhaps something like containerToName or containerToNameMap would be more accurate? 
It would be nice to have an empty implementation of `Directory.fileModified()` to avoid having to override it in test code. 
It would be great to have a common method for this transformation as suggested in the code 
Ok, that's better. But I didn't mean to say we should have a separate function for that... we should do the check inside the fixtures function. 
is this still required? 
Why is this guard here? 
Why aren't we using a `switch` instead of `if`-`else`? 
Seems like this could be spelled more succinctly as `Query.Limit(int)`. 
nit: the constants are on line 15 and 16, but the summary is on line 13. can you move the summary closer to the constants? 
Why is there a comment about filter and interceptor? 
Does `signer.init` throw any checked exceptions? If so, they should be caught and rethrown as runtime exceptions. 
Why do you have to delete all of these? 
It seems like the code used to do a retry on rc == 2, but that code has been removed. Is that by design? I'm not sure what that code did exactly. 
Can we make this class package-private? I don't think it's ever used outside of the package. 
What do you think about the name "test_can_send_approval_email" to more accurately reflect what the test is doing? 
Should we pin `pandera` here? 
Why change the collection type? 
why remove these constants? 
Freeze mutable objects assigned to constants.<br>Constants should be declared at the top-level. 
Why is this class called `ChromeDriverCommandExecutor`? It's not actually executing commands, but rather mapping them to URLs, right? 
Is there a reason for the delete and add statements? 
It doesn't seem like this is a valid domain object. Does this belong on the `docNode`? 
Why do we need to extra check this? Since this check is done in the schema validation as well... 
Why username is not lower cased for `get` and `remove`? 
Can you move the comment into a godoc comment? I think this is too much detail in the code. 
Can we use `BEARER_TOKEN` here instead of the actual string? 
can we just use the reflection helper functions? 
Maybe a note stating that this is used to validate the `ACME` challenge. 
Can we keep this as a single `on host` block, and have the `if` statement inside it? 
Use {@code #getKind()} instead of {@link #getKind()} in Javadoc to avoid linking to non-existent class 
why don't we use `Lazy<bool>.ExecutionAndPublication`? 
What happened to the comment? 
Why is this exposed as a `long?` instead of just a `long`? 
What's the reason for the second condition? The two blocks are identical. 
Seems like both the server and the client are doing the same thing. Should this be refactored into a common package? 
Is this class needed? It doesn't seem to do anything ... 
It seems there is no usage of `initCircuitBreakerManager` method ? I think this method should be removed. 
Remove this trailing space. 
 `date` is a bad name here since it's a string. use `dateStr` or something like that 
Is there a way to make the name more clear? The name makes me think that this function is getting a call number, not creating a random prefix. 
It's not clear to me why it is necessary to return a BaseTable, given that it doesn't contain anything, and we are already returning the ops. 
Don't use `f` as variable name, it is a bad practice. 
is this logic correct? 
Why is this needed after all? 
Can we use `After: append(parser.After, ...)`` instead of hardcoding the default values? 
and the Uppy instances are not? so what's the point of `uppy` var? 
Why are you having to load this manually? 
It seems like NewCounter should handle registering with the default registry so the caller doesn't need to know about it. 
Should we use `static inline` for function `update_state_map`? 
Let's keep the old default for the first iteration. 
Assuming the code could be simplified by just passing `BooleanClause.Occur.SHOULD` into the `add` call? 
Looks like this could use some cleanup. It returns empty response some times, and has a `self` that is only used to call a method twice. Could you take a look? 
Why the extra empty lines? 
Do we want to just raise a DataError here? We want to be able to handle the error and inform the user that their data is not valid. 
Is this fine? I have a feeling that `loadURL` modifies its input. 
It looks like `bench.hpp` was removed, but this is redefining it. I'm not sure if this is actually needed or not. 
Should we have a check to see if the method is being overridden (e.g. like a virtual `MinimumDataRateNotSatisfied` method) so that we don't have to call the delegate if there is no override? 
Why did you add `fileSchema` as a field if you are going to use it only here? 
can we introduce a local variable for _o.Test3? 
if you do `containerContainsText=""` you don't need to `containerContainsText=None` and `containerContainsText=containerContainsText` below 
assert arc.target on line 4 should be >= 0 (in debug). 
Is this function ever called with a non-NULL Private? 
Can we add the context in the constructor? 
Why do you check the nodeName !== 'DT' && nodeName !== 'DD' here? 
Isn't this a duplicate of `send_js_key()`? 
we can't do this because this class is used in external projects that use javaslang 2.0.0-SNAPSHOT 
Why is this in v90? Users with v92 will miss this column, I think. 
Wouldn't this be better in the `javaslang.collection` package? 
Maybe it would be better to move this code to the constructor of the `EasyAdminExtension` class. 
Can we please move this into `cmd`? 
Why not use `copy constructor` instead of writing it manually? 
It should be `System\Classes\MediaLibrary::class` to avoid potential invalid class name. 
Why is this an abstract method - shouldn't it be a plain method? 
Why remove this? Did you run into an issue with it? It's not clear from the commit message 
will this result in an infinite loop if there are no FSTs? Please add a test case for this.
What is `@options`? This doesn't seem to be defined anywhere. 
shouldn't this variable be set outside of the loop? 
Could use "unknown platform" and "unknown region" directly in the code to avoid these constants. 
Can we find a way to avoid this hardcoded value? 
Seems like it's a constant that is not used and could be removed 
Not sure if this is a good idea. 
Are we asserting the wrong thing? 
Just to make this code more readable, do you think we can put this in a separate function? 
It's not really a 'clean' call, it's just a single object. 
What is the purpose of this method? It seems like we are adjusting the skew twice 
code duplication: if (methodToReplace != null) { methodToReplace.remove(); }<br>methodToReplace = containingClassOrInterface.addMethod(callable.getName());
LGTM with a nit. I am fine with this PR, but I think this is a general issue that we should discuss as a team. I think we should open an issue to track this and come up with a more permanent solution. 
Can you add a comment here? I'd like to know why you're doing this. 
It might be nice to add a comment here explaining why we are checking for the signature. (I know it's obvious from the message, but still.) 
What about a constructor that takes the example group and the new description and a new metadata. I'd expect `new_metadata[:block]` to be `nil` and not `metadata[:block]` 
Can you either remove this if, or at least explain why you need it? 
Why are we still returning nil here if the resource is not found? Shouldn't we be returning an error? 
Is it possible to put the calculation of 'selectedOptions' into its own function? That would make the code more readable. 
Is there a reason why we need to use different paths here compared to the ones in the `functional` directory? 
What is the `2` in the added line? 
Why not require this to be set in the config file? It's a required field. 
Why is this needed? 
What is `BATCH_SIZE_MAP` used for? 
Can we call this `HIVE_ICEBERG_METADATA_REFRESH_MAX_RETRY_COUNT` to be consistent with other configuration names? 
Why is count int64 here and not metric.Number? 
Why is this now duplicating the UTC date field? 
Why does this need to be null? 
What does the `CommandBridgeServlet` have to do with this? 
Should this message take into account the argument name? 
Not sure if this is the best solution, but I think it would be better to move the `error` variable into `if (unsignaled_semaphores.count(semaphore))` and `else` (since `error` is not used in the `if (unsignaled_semaphores.count(semaphore) || ...` block). 
why not just have a line that checks if the environment variables are set? 
Is this comment still accurate? It seems that there is no "node" module, but instead there are many different "node" modules. 
Since you're using `NOGIL` in the block, you can drop the `NOGIL gil;` line. 
Is this suppose to call onResult_? 
Can you add a null check? 
the function name seems a little long 
Why is this sitting in a comment? 
Is there a reason for hardcoded `pin-mongos` or it's just a temporary solution? Also, I think `maybeSkipIt` and `it` variables are a bit confusing to read in this context. Maybe it would be better to have more descriptive names. 
Perhaps these settings should be named `color_success`, etc., because that's what they represent, right?
NullLogProvider is internal, so this should also be internal. 
It feels like `idToPos` should be a `ListMap` if it needs to be case insensitive. It's not clear to me why it needs to be case insensitive in the first place. 
Why the coreV1 and v1 removals? 
Couldn't this be done with a regular expression? 
use `net/http/httptest` as the test server 
Why not just use `os.fsdecode()` 
Is `_mainChainProcessor` ever used? If not, we can remove it. 
Use `respond_with @node` without the condition. 
Is this a refactor or just random code moving? 
What is this line doing? 
Why did you replace `Outbox` with `MsgQueue`? 
Test if slaves and secondaries are stopped in parallel? 
if we have an error in Start, doesn't the api return the error? 
you can replace this with `stream.rangeClosed(2, max).map(PrimeNumbers::factorization).reduce((m1, m2) -> m1.merged(m2, Math::max)).foldLeft(1L, (xs, x) -> xs * pow(x.key, x.value))` 
Let's test that the exception is not thrown, but just catched 
Why do we need to call unsetenv()?
Why don't you use `StandardCharsets.UTF_8` & `StandardCharsets.ISO_8859_1` ? 
if we're going to change the currency, can we do the same in the `number_to_currency` call above? 
why is this changed? 
Why are we converting the buffer to a string and then back to a buffer? 
What we could do is to document that the user can use any hash type as long as it is set as config value. 
Why do we add this logic ? If I specify _id as undefined, I want it to be saved as undefined, not as null. This is also a breaking change. 
It would be great to not duplicate the code here. (Set `next_grouping` and `next_result` in both branches, and then keep the `render` call at the bottom of the file.) 
Is it worthwhile to add a note about the relationship between this and the CStorVolumeClaim and CStorVolumeAttachment resources? 
Should we 'include "google/protobuf/stubs/common.h"' here for std::strtok ? 
Why does the `rb_global_variable` call need to be in the body of the function? And why is the variable being declared in the first place, if it isn't being used? 
Should this be `Task RunAsync()`? 
What is the difference between `sortRecLen` and `bufferSize_as_ulong`? It looks like sortRecLen is only set if `bufferSize_as_ulong` is set. 
Thanks for the review. I modified the code to use a sugared logger. Please take another look. 
Is there a comment on why this test is racy? 
Should we check if options.roles is a string and if so make it an array. Also, should we maybe check if it is an array with a length of 1 and if so make it a string? 
Is there a chance that `clientRegistration == null` here? If so, that should be handled. 
Should this just use *args and **kwargs instead? It's not like there's a ton of arguments. 
It would be great to have a test case for this. 
Why is this `FullVersionReplace` and not `NugetVersionReplace`? 
What does the TODOs stand for? It may be helpful to provide more context around why this code is commented out. 
Why are there two pop(2)'s? 
Can't tell what this is supposed to be doing. 
Why is this struct defined in this file, but used in `lib/common/httpclient.c`? 
Use FQCN in import. 
It's unlikely that a user will know about this. Why not simply change the signature to something like `write_packet(self, packet, header=True)` and have it default `header` to `self.header_present`? 
Should we be checking for `err != nil` here? 
Some PEP8 violations. Maybe in a separate commit? 
Why are we adding this? 
Maybe it's just a documentation thing, but should the `Attestor` field be capitalized to be exported? 
Why not just use a `std::shared_lock`? 
Since this is called only once in the constructor, could we just inline it here and pass it to the constructor as a delegate? 
Why is this change necessary? Using the service locator instead of a constructor makes things more complicated, not less. 
Do you still want to unlink the network-audit-results.json file? 
There is no `data` object created. 
What do you think about adding a `panic` if the given `FolderBranch` is zero? 
MemoryUnlimited is not equal to -1. Do we want to set both to -1 only if the memory passed in is -1? Is that why we have the special configs.MemoryUnlimited? 
Maybe add a sentence about `CR` not being enabled or something? 
nit: `iceberg.catalog` and `iceberg.catalog.type` are mentioned twice in the summary 
Why is this ``S3 docs for HEAD object requests say S3 will return this`` comment indented? 
why we don't use equals and hashcode of super class 
Is it possible to validate the list of ports here? 
Looks like you're not using the new remainderOut property anywhere. Should it be in the if block? 
Is it possible to deprecate and remove this function? Seems like we could redo the code paths to use `IdentifyForChat` instead. 
Is this necessary? I use `new(big.Int)` in a few places and it's not really that bad. 
What about `promise.url`, `promise.token`? 
Should we add a test that we reject IPv6 addresses? 
What is this for ? 
Use `where.not(deleted: true)` instead 
Can 'IsClear' be set to true for offline items? 
Can you explain what this addition is for? It's not clear to me why we would want a policy that's named like an exception policy, but doesn't inherit from the ExceptionPolicy class. 
Is this the last part of the dynamic module loading? Exciting! 
Is the TODO self-contained? Make sure to put some context for the reviewer. 
can you add a unit test for this? 
should we always delete the bucket if it doesn't belong to the project? 
Is this still an issue? 
It looks like you're adding a new controller, so you'll need to add a route to use it. You can do this by adding a route to `config/routes.rb`, or you can use a resource routing shortcut like `resources :stacks` to create routes for multiple actions at once. 
It's a little odd that the summary contains the phrase "Get the last port". 
Where is the source language? 
why use `DeleteTag` and `SetTag` instead of `Tags.SpanKind`? 
From the comments, it's unclear whether the requestTimeout and unresponsiveTimeout are still relevant or not. If they are, I'd suggest keeping their definitions with them (either in the const block or as separate const assignments). If they're not, I'd suggest removing them entirely. 
Is this change intended? It is not mentioned in the description, and it is not in the task list. 
Is this the correct way to handle unsupported operations? 
seems like the new code is less permissive than the old code. is that true? 
Why is it necessary to add `has_all_data`? 
Could you please remove the blank import lines? 
Can we use the `ctx` we pass everywhere here? We want to be able to timeout the trie stop as well 
What is this doing exactly? 
What's the point of this status code? 
Function name too long.<br>Function name should use lower snake case. 
Does the tracer instance need to be stored in a local variable? 
Could you add a comment here with a bit more context about this? 
Comment: The match might not have a ConjunctionID, but I don't think this is a sufficient name for a function. Maybe MatchWithConjunctionID? 
Is this a new feature? If so, how is the GA property ID used? 
It would be better to add a comment in TableCodec that RowCodec encode/decode should be used to verify the correctness. 
Is the class summary accurate? It looks like it is adding some custom attributes to the request object, not creating an entity object. 
Why are we not passing the VolumePolicy to `getOrCreateTargetService()`? 
.. code-block:: yaml
Is the folder only counted if it fails? 
Do we want to run directly against a server, or should we instead do a connection? 
Can you elaborate a bit on what the inputs and outputs are of this function? 
Would it make sense to call this KeyNodeAffinityHostname? 
Shouldn't this function list all regions? This function only lists the regions that are currently in shared memory. 
Is EnableDNS already used? 
Why the move from InitializePlugins to ReviewBlockTree? This seems like a change in the constructor. 
please document what's going on here 
Why do we have `if true != c.Data["IsApiToken"]`? 
Same for this. 
ultranit: This change is simple enough to merge without review, but I'm curious why this is needed.  I think we agreed that giving each struct/interface its own type keyword as opposed to grouping them is more idiomatic, just so each type def is followed by its various methods so all related info is in one place 
It should be possible to remove the UUID stuff entirely now that we've dropped 16-bit and 64-bit platforms. 
can this be `import sqlite3` instead? 
Shouldn't this be called `Config`? 
Why does this function need a `region`? It's already defined in the client. 
Why are we doing this here? 
why is this being removed? 
What is the purpose of this? Are you going to include a header with the same name as the .c file? 
Why did you replace `Amazon S3` with `Amazon Simple Storage Solution (Amazon S3)`? 
Hey, is this method related somehow to the `refresh_user_token`? It seems to me that we have duplicated functionality. 
Why does this need to be a method on the cgroup object? 
Why do we need to check for block_a.type() here? 
Why the `if (c._nextState==null)` block? 
Can we move this to a model? 
what is the difference between `connection` and `connectionARN`? 
Can you add some comments explaining what this test is doing? 
Seems like this could be part of a test, as opposed to in the main codebase. 
Is there a reason you can't use the standard `go run` mechanism to pass in command line arguments? 
How is the manifest file related to the manifest entries file? 
Should it be called `accepted_messages`? 
Why do we need to recursively copy the contents of one directory to another? This could potentially be dangerous if the directory is large. 
Should we be using `compute.max_rows` instead of `1000`? 
It seems you need to split this unit test into two separate tests, `test_ranker` and `test_regression_with_custom_objective`. They are not checking the same thing. 
Why are we adding this new `appName` property? Is it necessary for the functionality of the class? Also, can we add a comment explaining the purpose of the `packagePrefix` and `methods` properties? 
Looks like we are getting rid of a `cancel()` here. Is that intended? 
Why is `T` constrained to `struct`? 
why is this still needed? 
Why are we using this class to assert? 
Is the `EPS` variable needed? It doesn't seem to be used anywhere. 
Should we add a defer to Close the stream, since we create it here? 
Seems like this comment is outdated, care to update it? 
Can you add a test for this in TypeSolverRegressionTest? 
Why do we need this v1/v2 check here? This isn't v1 code. 
Is this still necessary? I'm not 100% sure I understand why we need to do this here, but if it's just for the test suite then I guess it's not worth worrying about. 
Why not use `pdf = kdf.to_pandas().stack(level=1)` directly? 
It's hilarious how these tests are not testing the one thing that we're trying to test. 
Do we have test for this? 
Why do you have two different `onCreateViewHolder` methods? Seems like you could combine them into one. 
It seems like this should be a checked exception as the caller will want to know if the feed does not exist. 
Would it make sense to use a more general name like `FeatureFlags` and have a setting named `DelayWcfInstrumentation` and `HeaderTagNormalizationFix` instead? 
Why are we using a call to `driver_.schedule` in this function? 
Prefer `int t = this->iter_ + 1` to `const int t = this->iter_ + 1`.<br>Prefer `std::pow(beta1, t)` to `pow(beta1, t)`. 
And this is the history_tree table, right ? 
Looks like this is run for every `ddev sequelpro` invocation. Is there any benefit to caching the `app.SiteStatus` check? 
Why is this #ifdef'd out? 
it would be nice to have a note for why we need to copy here. 
Do we really want to swallow this exception? 
Is there a way to differentiate between an application error and a failed response? 
Should we call `Requires` to check the span context instead of doing it manually? 
Use the built-in strings.EqualFold() function to compare the tags. 
Could you add a comment to explain the purpose of this method? 
Why are we keeping this code around? We should delete this. 
When removing things, please delete all the code. 
Why deprecate? 
Why can't we just assert that `result` is true? Seems like this is what we're really testing. 
Refactor this so that we actually still get the compiler and version from the runtime package, but we can mock the `runtime.Compiler` and `runtime.Version` calls. 
Same here, you could save the `Method` too in the field. 
there are a few of these types of functions. One for each of the "magic" prop types. 
Could we move this to a function called `initOVFImportParameters`? 
Can we rename `pageSpeedLink` to `pageSpeedLinks` here and make it an array of arrays? 
it adds a lot of complexity for a feature that people won't use that much. 
Use `use Psalm\Report\ReportData;` instead of the `@param` annotation. 
Please use a static readonly field instead of a property. 
patchbpf is only used by the seccomp package. Perhaps it would be better to move this function to that package. 
Why do you need this import? 
Let's use `with self.log` for logging. 
TEST(1U << 31, enc) is true, so the condition is always true. 
TODO: this is just a suggestion, but this would be a good place to add a comment about how to Dispose the TracerProvider. 
Can we rename `AspNetInstrumentation` to `AspNetCoreInstrumentation`? I think this is more clear. 
Not sure I understand the change. Can you explain a little more? 
It's hilarious how these tests pass now. 
Why does this need to be checked in? 
Why is this change needed as a result of this PR? 
why do we need this if statement? Can we not just call the addRequiredColumn method? 
Can we make this a list of tuples or some other data structure so that this is easier to add to? 
Does this have anything to do with the actual "code" associated with this task, or is this more just a weird build system thing? 
Is this a good function name? It seems like it does more than just set routes. 
It is confusing that you pass the context to this function, but you don't use it. 
What is better way to name it? 
Maybe we should use a better name for this function, like `createMiddleware` or `createMiddlewareInstance` 
Can we extract out the magic numbers (4096, 32k) as constants with meaningful names? 
Is this related to the changes in #8629? 
Can you do this w/o having the <ScrollEffect/> wrapper here? 
Could we have a mapping of `metricName` to `metricType` so that we can avoid using `eval`? 
Can we add an argument to `NewProfileDecoder()` to specify the converter? 
There's a lot of stuff going on in this spec, can we split it out so we can tell what each part is testing? 
Can these lines be removed? 
nit: fix typo: "currnent"->"current"
should the storage_backend and permission_backend be configurable. 
Any reason the error should be rewrapped here? 
Package name should be at the beginning. 
Is the `beforeHandshake` check right? We don't want to send an error if the user has closed the connection before we even attempted to send anything. 
Is there a reason to use a const here instead of var? 
Why is this change required? It looks like this is moving from a more specific check to catch a single use case to a more general one. 
Is there a reason the legacy-holds and legacy-summonrecord routes are added to the application configuration file in this commit? 
why is this in a separate file? 
why do you need to check if index is None here? 
please add typehint for `$name` and `$filesystem` 
Unrelated to your change, but I'm wondering if it's worth having this method in a different utils class, just for tokenization? I'm not sure it's something that's specific to axe.  
Is this meant to be the same as `alphaDash`? 
Why don't we pass the `func(string) Policy` down to `NewStaticUpstreams`? 
**suggestion (non-blocking):** I think we can remove this closing curly bracket. 
nit: Is this really supposed to be a docstring? 
It's fine to use plain `should` when there's no subject. 
Maybe "to use based on region" -> "to use when based on region" ? 
Why do you check `@ssh` and not `@channel`? 
Should we be setting `terms_seen` in `create` as well? I think it's possible for the user to get created without going through this form. 
Why was this change made? The gRPC website says that "golang.org/x/net/context is now deprecated." 
Should we do an `INNER JOIN` instead of a `LEFT JOIN` since we're checking for `item_view.is_suppressed = false`? I think we should only care about non-suppressed items. 
Why is this a promise? It looks like a basic data object. 
Should we be doing something different for the `if` check? 
Why is this hardcoded to 1. 18. 0? Shouldn't this be configurable by the user? 
Does this mean that we should add `azkaban` to the list of project names? 
What is `PSWINDOWS_PACKAGES`? Also, is it possible to extract the `/windows/` regex into a constant?
That `__()` isn't adding `googlesitekit-user-input__notification__cta-label` to the tags where it is used 
Is it worth using a `for` loop instead of writing the same thing twice? Also, maybe the variable name can be more explicit? 
It's hard to tell what this function is doing from the name, maybe we could call it `isDBusClosed` or something like that? 
It's not clear to me what this is. This looks like a mishmash of a few types/structs. 
Can we switch to switch or if/else? 
Maybe I'm missing something, but why do we need to randomize the name of the veth? Maybe we can hard-code it and just use `netlink.LinkByName`? 
Only do this if the partitionCount is 1, right? 
maybe move this utility to a file under `utils` folder? 
There's no way to replicate the :all behavior in this case - I don't think it's worth it to try. 
These usings aren't used. 
What does this test? 
nit: `skipOSConfig` -> `skipOSConfigMetadata` 
When you say "can be used" do you mean if it is available or not? 
Why is this a function? It seems like the code is too specific to be reusable. 
Looks like this is now unused. Should we remove it? 
Would it be worth adding a comment documenting what this function is intended to do? 
Shouldn't this be "Private method to analyze usage of callee registers." 
It's possible for this to fail, right? In which case we wouldn't want to remove the key half, right? 
It seems like the method is doing the opposite of what the summary says. Or am I missing something? 
Why add unnecessary configuration ? 
Why is this being moved? 
Maybe add a comment saying what this is supposed to do? 
Is there a reason these are non-concurrent? I'd think some intermediate state could be shared. 
Why do we need to change the value of `primaryNodeUnupgradedProtocol.ApprovedUpgrades` here? It seems like it would be better to use a different object for the node that doesn't have the other `ApprovedUpgrades` set. 
Are all the command strings here unique? If so, could the list be a dictionary with the command name as the key and the tuple as the value? 
What if we move this to a partial? 
Can we rename `#fulfillment_method` to `#delivery_method` so it's consistent with other methods? 
Why not use a loop to do this? 
Move the `label` prop to where it's used, so it's easier to find the label for the field. 
Can we extract `proposal` into a before action? 
Why do we need this test? 
Can you use a ternary operator here? 
There is no description of what the method does. 
Feel free to use `array $values` as parameter type declaration. 
Is this the same as cfg.Genesis.GenesisHash()? 
Can you rename this function to `find_violations` and move it to `self.rule_book` ? 
It might be better to use Path.Combine instead of the manual concatenation. Also, I think we should use the full version of RuntimeInformation.OSDescription, for example "Microsoft Windows 10.0.17134". 
Can we rename this function to something like `Pop`? 
There is a double util variable. 
Looks like you can simplify the code if you move the `CreateTestSentry` function to `stages/mock.go` 
It's a little bit confusing that the first if statement is checking for !added_new but the second one is checking for added_new. It's not intuitive that you'll only get to the second if statement if the first one fails. 
promisedServer is not a great name. I would suggest something like 'createTestServer' 
Maybe instead of raising an error here, we could have a `DagsterInvalidDefinitionWarning` and return `None` instead of raising `DagsterInvalidDefinitionError`. Then we can proceed with the schedule list rendering (and not show that schedule) instead of failing. 
It'd be nice to provide an example of how the parsing result could look like. 
Do we need an empty line between these two functions? 
What is the purpose of this code? It seems to be unrelated to the summary. 
Could you please add a Javadoc for this test and its purpose? 
Is it possible to add some unit tests for this function? 
RevField can be blank, "" to indicate that it is named as the default. 
typo: 'Empy' -> 'Empty' 
Don't you need to import `react` before `enzyme-adapter-react-16` 
we should be printing the event regardless of what it is (in other words, `if event: print(event)`) 
Is there a way to document each of the `def`s separately? 
Why is this method in `ModelProtobuf`? It should be in `ExternalClassInstantiatorFactory`. 
Why is this an empty function? If it can be removed, let's remove it. 
What is the purpose of this file? 
Can we rename the "clientconfig" to something like "client_config"? 
Shouldn't the message mention `task`? 
It's not clear to me what this is meant to accomplish. 
Why is this method named `FullClose`? It seems like it's doing the same thing as `Close`. 
Won't this work with `Octokit::Conflict` too? 
How about adding a `assert` statement to make sure `cfg.max_per_img` is not overwritten by `cfg.max_num`? 
Doesn't this duplicate the error message? 
nit: CheckForCStorVolumeReplicaCRD should be changed to CheckForCStorVolumeReplicaCRDList method, since it is returning list of CRD's 
Why is the default implementation not enough? 
Why is this in an object? 
can we switch to a bool here, so nil is not a valid return? 
Could you add an empty line after line 94? 
Is this causing a breaking change in the API? 
What about adding some comment about the fact that the tables are recreated? 
Instead of passing a std::string* as parameter, return the string and pass the error_code as variable reference. This will make the code more readable
Shouldn't this be in `path`? 
Why is this in this PR? 
Seems like this is a decent change. I'm not sure if there are any performance implications though. 
Can you use `if result.exit_code_in?(acceptable_exit_codes)` instead of `!result.exit_code_in?(Array(acceptable_exit_codes || [0, nil]))`? 
What do you mean by "no capability in the slot list"? 
Why not just return `dialog.show(options);`? Also, the rejected promise in this case would have the value "ok". 
Is this really a "set" method? It seems like it is more "add" in the fact that it appends to any existing context. I'm not sure what the context is used for and how it is managed. 
Do you think it would be better to move these constants to the top of the function? 
Is this needed? It is not used in the code. 
Is there a particular reason why you haven't used `raise_if_not_in()` here? 
It would be great if this was documented in a comment above the function. 
Why are we adding this? 
Unused `use` statement. 
Can you move the logic to `useSelect`? 
What's the difference between null and 'CASCADE'?
Can we use some other way to test for this, because it might get broken in the future? 
It's unfortunate that we still have to have a dedicated handler for reading files from bzz. I wonder if in the future we could just have bzz integration with the standard handler (like we have for filecoin) 
Does this belong in the `internal` package? 
nit: seems like this could potentially be an expensive operation, maybe we should rename to `findSynchronousMerges`? 
Can we rename this to something like `evaluateTransaction` or `processTransaction` so that it s clear it s not the same as the package name? 
Should you be using SetProperty instead of setting Properties directly? 
iris.experimental is not available in the current version of the package, can you please fix it?
Maybe you could use `::class` notation for mocks as well, so it's easier to see what's mocked? 
Is this necessary? It doesn't seem to be used anywhere. 
Why are you changing this? 
It's possible that this method should be moved up to the interface, but I'd rather not do that if we can avoid it.
Why is this hack needed? Can we find a better solution? 
Why do you need `cftime_types`? Can't you retrieve the `datetime_types` from `util` directly? 
Is it worth adding a docstring that explains what this method is doing? It might be helpful for someone who is not familiar with the code. 
Do we really want to initialize logging here? 
Let's avoid using System.exit() and throwing exceptions. Instead, have a method that will stop the downloader and the blockchain synchronizer, and then restart them. See #763. 
Use `else if` here so we don't even have to evaluate `vol.GetXattr()` if `req.GetXattr() < 0`? 
Can you explain why you are renaming manifests to dataManifests? I assume it is to make it clear we are only looking at manifest files that contain data, but it would be nice to have a comment explaining that. 
Should the added overloads also have the out parameters? 
can we please put the `$pse->save($con)` inside the `if` block, just above the `throw`? 
nit: cs1.salesforce.com is for sandbox, no? 
maxSelects is not a good name for a constant. 
There are too many type checks in this codebase. Can you see if you can avoid it? 
why don't we use retryutil.Retry() instead of custom retry logic here? 
typo in package comment: "containing the state of a connection with a specific" 
Why is a menu item ever disabled? 
nit: maybe make the private method isTestSetup more clear? Maybe something like isUsingMySQL? 
Maybe it's worth adding a comment indicating that this is the function of asynchronous handler. 
Is there a reason why you added this extra empty line? 
Is this function necessary? This seems like a lot of code for something that's just going to be called in a couple places. 
What is the purpose of this function? 
nit: `isRecoverableError`? 
Maybe we should sort the arguments by purpose, before passing them to the HIP_INIT_API macro. 
There is no `mean` and `standard error` in BoxWhisker. It's median and quartiles. 
It would have been nice to have a test which actually checks that comments are properly handled, but this is good I guess. 
Is there a way to update the reference? 
Indentation: This class is not indented. Please indent the class. 
Can we rename the sectioning variable? `sectioningRoles` or something like that? 
Should we add some checks for those new parameters (e.g. to see if the provided threshold is positive or to see if the `memoryCircuitBreakerThreshold` is smaller than the `memoryCircuitBreakerThreshold`)? 
maybe we should remove test_over_two_gb and test_over_one_gb and just use a loop to allocate 2GB and check for an exception at the 1GB mark 
Can you just delete `wasHiveString_(FALSE)`? It's dead code. 
can we move the `reactActivityDelegate` check out of the if block? 
Can we move this to a function instead? This is a lot of lines to have in a global scope. 
What is the reason to remove this? 
Prefer `unless opts[:localize] == false` 
self._classificationCompute() is no longer a thing 
Why is `handle(router, "/tags", ...` not in the `else` branch? 
Why is this in the postgres module? 
Hey, is this method related somehow to the issue we just discussed about the _browse security_ button? If it's the case, I don't understand how, and I'd appreciate if you could provide me with some context. 
It is not clear to me why a `send_resource` would have a different timeout. It seems to me that the timeout should be passed to the opendds::DataWriter. 
Is this the right method? It doesn't seem to match the summary. 
Can you add a comment explaining what this function does? 
Shouldn't this test be named something like `should return true if the element has a shadow`? 
Is this a bug fix? If so, could you add a comment explaining why you're disposing the response? 
It's not clear from the name of the function what it is that we're getting the description of. 
Why do you need to create an extra array here? 
Why is this logging at all? Shouldn't this be more of a silent builder? 
Why do we need this?  This isn't mentioned in the spec, and I don't see how it would be useful. 
Looks like this is used by the CLI, so it needs to stay. 
Can you perhaps also mention the `Windows` key and its alias `COMMAND`? 
Why would we need to pass a ref to a child? This seems like a pretty obscure use-case. 
why did you use #ifndef DR_HOST_NOT_TARGET? 
It is a bit strange that you have all these commands that do nothing. Is this just a start? 
Follow-up: should we also test that OnCompleted is called when OnStarting is called? 
Can you put the logic to determine the trusted host in a helper function so that it can be unit tested? 
Why is this a goroutine? 
Why is this deletion of Driver.prototype.VENDOR_COMMAND_PREFIX necessary? 
So this is a signature we send to Amazon? Maybe should say that. 
Is this suppose to call `tch.Stop()` as well? 
Can you add a comment explaining why we need to change from `self.assertEqual` to `self.assertDictEqual`? 
Is this a class? This is a new blacklight plugin - I'm not sure if I understand the question - This is a class that is used to render a document in the index view, as part of the blacklight plugin. 
It would be good to add a brief summary to this file. 
Should we use `const` instead of `var` since it's never reassigned? 
is the comment about `dataSource` really correct? seems like you're not using it as a ds param, but as a user event param. 
Unused method. Consider removing it. 
Is there a reason why the OpenTelemetry.Trace using is deleted? 
nit: please add a comment that basically says "we're testing pylint's handling of this case, not the code itself" 
Why do we need this random_state here? 
50000 is magic, could it be configurable? 
Why not replace this with a `Set`? 
It looks like this class is no longer used. Can you remove it? 
It may be useful to print the response data on error as well (e.g. when `c->resp.status != 200`) 
Why is this not supported for open? 
Why is this test necessary? I do not see any changes that would affect this test. 
Can we add a line before the `Supported:` to explain what this is? 
Really? I thought we no longer have a custom file picker. 
Probably unrelated, but why is this a `KeyMode` and not just a `Mode`? 
Remove the try/catch and let the caller handle the exception. 
Why is the "show_img" array being created if it is not being used? 
It might be better to use `ensure` instead of a `rescue` block. It has the advantage of making it clear that we're doing something after the block is done, instead of relying on a side effect of `raise` to accomplish that. 
Not sure I understand the change. The file is a symlink, what's the action? 
shouldn't this be a separate test? 
Why is this change needed? 
Can you add a link to the documentation of the return value? 
It looks like this is a bit more than just a reformat? 
Why not just write it to a string and use `atoi`? 
Seems a bit confusing, would be good to add some comments explaining how it works 
Where's the description? 
Does this need to be exported from the package? Only export it if needed. 
Restart is used to restart the instance with the given input 
What is `global._googlesitekitUserData` and why are we using it here? This looks like it could potentially cause issues in the future if the `userData` variable is not available. 
What is the purpose of this function? 
Shouldn't this return a string pointer and an error instead of silently failing?
How is this different than the code that you removed? 
There is no need to use `method?` to check truthiness. 
Could you add a comment about why we return false for various cases? It's not obvious at first glance why we do so. 
why not use `stateKey` and `batchKey` directly? 
Unused variable? 
Why does the name not match the add call? 
why add the other one if it is commented out? 
Is the `opt_searchAttempt` parameter needed? I know it's currently used in the tests but it seems like it could be rewritten so it is not needed. 
It would be helpful if this exception would include a message like "This operation is not supported for reflection parameter declarations". 
What's the point of this? 
Layout/SpaceAroundOperators: Surrounding space missing for operator ==. 
Do you have a test for this? 
What is the purpose of this change? 
Why are you adding the `forward_ssh_agent` here? It seems like it should be a part of the node, not the container. 
Can we change `model` to `models`? 
Why do we need this method? 
There's a lot of code here, would be better to split up into smaller methods. Also, the `Deprecation.warn` line should be removed if this method is still needed. 
why is there a checkstyle suppression here? 
Space missing after comma.<br>Use `str.format` for complex formatting. 
Why do we always set AllowRenegotiation to false?
It seems that this test case is not doing what the test class name reads. Please rename. 
Wouldn't it be better to pass the StringBuilder to TraceError? 
Be explicit about the return value, adding `true` or `false` here could make it clearer for other developers. 
Why all the `nil?` and `empty?` checks? 
Is this a change of functionality? 
Why did you move this to the end of the file? 
Can you use the jsx style `return <Context.Consumer>...` here? 
nit: import order, alphabetic & order of type & static imports 
Can we use the `getDependencyInjectionType` hack for BC instead of duplicating the code? 
Is there a reason for the removal of the assertion `assertStemsTo("Ijs");`? It seems to be a valid check to make. 
What is the purpose of this function? 
Should there be a note about the initialization of a `MapRouter`? 
Any reason the `assert` operation isn't included in this list? 
It might be worth mentioning the return value too, since this is a documentation comment. 
When you have fixed the version please do not forget to remove the comment or add a TODO to remove it later. 
Should be renamed since it's no longer mapping hashes but message_ids to the messges (even though the ids are still hashes...). 
Could you add a `@return` to `getMaxFeePerGas()` 
There are a lot of whitespace and formatting changes in this PR. Are they all intentional? Please limit the changes to the actual changes in the PR. 
Let's add a comment here at the top of the file to explain what this file is for. 
Why do we need to query for object(o) when we just want o.id in the select clause? 
Does this need to be instantiated with a specific project name or will it be used for all projects? 
Is this new method used? It looks like it is just overriding the superclass method with no change. 
Is this necessary? I don't think we would want to use this in the codebase 
Why not use a struct for this? 
What's with the try/except indentation? Also, I think this is still going to fail if the URL is not a valid one. 
Use `localeCompare` instead of manually comparing the strings, and use the `numeric` and `sensitivity` options. 
Do we need to use OrderedDict here? It doesn't seem like there's anything that requires it. 
Why are all these letters in the string? 
can you link to the docs you are referencing for this function? 
Consider removing duplicate code (see also: https://github.com/TheOnceler/TransCoding/blob/master/TransCoding/TransCoding.cs) 
Why don't we add here `this.driver()['loadExtension']`? 
Is this change necessary? 
Make a comment on how cin works and what it is. 
nit: this is more of a `GetCherryPick` 
Do we need to update the patch URL again? 
Is this needed? Can we use the `first` field instead of `this`? 
Can we log the message with a log level of debug? 
Don't we also need to update the ConfigMap? 
 Please only keep the imports you use. 
Why is this PR required? 
It is not clear what this code is trying to accomplish. `len` is always incremented by 1, and then you increment it 2 more times. `originalOffset` is never used. 
Why we need to repeat the `text` key here? I think we should move this check in the model, and show only the content of the `text` key if it exists. 
Can you add a comment here describing what this package is for? 
why not just call gsf.ssb.Matcher() twice and assign the results to the two fields? 
showTemporary is the default behavior for an error, so I don't think this is needed 
Could this be more easily done with string concatenation? 
Why is this ifdef guard_pages? I don't really care so long as we have a guard page.. 
Why is this not static?
Is this the right place to call out the unsupported stage, or should we do this in the call to 'NewDeployStage' in deploy_stage.go? 
Is there a reason why you're doing this? 
It's not clear to me what this function is doing nor what it's supposed to return. The summary should hopefully make it clearer. 
Also, why is this returning `false`? 
Do we need to return a `list` here for an empty input? 
It looks like this was an intended behavior change in the new release. 
Why do we have to initialize the indexInput with `preload`? Can we just remove preload from this method and remove `final boolean preload` from the constructor? 
When you run `Exit` in a goroutine, the exit code is lost. <s>
Remove this if and refactor to `validType = SyndTypeUtils.enclosureTypeValid(type) || (type == null && validUrl);`
Is this used anywhere? 
Why is this code here? It's a duplicate of code in bokeh.models.sources.ColumnDataSource.update() 
include/flux/core.h: 2719: 121: warning: parameter 'attrs' set but not used [-Wunused-but-set-parameter] int create_persistdir (attr_t *attrs, uint32_t rank) { 
Can we also add a comment saying that this is used for case-insensitive comparison? 
Why do you add TestVendor\_Goto and not TestVendor\Goto? 
At least one of these parameters must be a pointer to `double`, otherwise it is impossible to pass a `bool` argument. 
BuildFileName always returns a valid filename, so I don't think the `else` case is needed. 
Is there a reason you don't pass in a `ManagedGroup` to `copyManagedObjects`? 
Why is this code needed? 
There is no need for this property to exist if we use the `TargetAssemblies` property
Why do we need this finish migrate repository function? 
since `h2o_lcstris` is only used for ASCII strings (which is not the case for some headers such as `:authority`, and we have to hack around it), we should just inline the comparison (and make the `host_is_unix_path` flag unnecessary). 
Why do we need the NS class here? 
Why are we committing before redirecting? Also, consider using Flask's url_for() for building URLs. 
Can we move this one up a level in the hierarchy? 
So the idea is to have `LOG_...` macros that have a diagnostic output and a `CHECK_...` macro which are just for the assert? 
if message is null, the message.getId() will throw a NullPointerException.  
It looks like this `env.Printf` is not going to do anything since the `env` is never run. 
There's 3 potential return statements here. I think the code would be clearer if the first line was the `if...return` and we kept the other two returns inside the `if` block. 
Why are we using a C-style buffer here, instead of just using a C++ string? 
Thanks Mark Heckler. I updated the javadoc as you suggested. 
How is this different from #requireCsrfProtectionMatcher? 
for ember we use `page-title` for i18n keys 
Can this be added to the comment above, with a description of what the function does? 
Why did you get rid of the `dcn` and `sac` asserts? 
Interesting -- this had a `di.IdentityManager` which is a much larger thing than `di.IdentitySelector`. Maybe we should do a quick scan of these to see any other big things? 
is it really an error if we can't resume? 
Is there a way to deal with the case where GetAllPids() returns an error but status is Stopped? 
not sure what this code is doing - it looks like Ruby code with a function called `edit` but it is not clear what the purpose of the code is. 
Is there a reason why this has to be done in two steps? 
What is the difference between this and `testTLFJournalConfig.TlfIDGetter()`? 
Is it actually possible for `response.properties` or `response.profiles` to be empty at this point? 
Why is `maxSpanCount` set to `500000`? It is not used in the builder. 
is this error message correct? 
What is the purpose of this test? I'm assuming the "single user" is a reference to a singleton object, but I'm not sure what the context is here. 
Perhaps take a different approach to determine if the checksums match. If the first one fails, then don't even bother checking the rest, just return immediately. 
Is this the same code as `RunGetRequestedDataAlwaysOffSampler`? 
Why is this test failing? 
why is this in a separate file? 
What is the next step for `FIXME i#1569`? 
Can we also add a comment on what is the significance of 20? 
why is the tag lock being used here? 
Why was this removed? If it was because it's no longer used, you should add a comment saying that. 
It seems there is no need to update the defaultDialTimeout, because the default value(2s) is acceptable. 
Getter for the collection path `path` should be before `log.debug`. 
Is there a reason you need this method? 
Why not checking for existence? 
It seems to me it's better to use a constructor function to build the element rather than a string. 
It seems like we don't need the `retry_on` method. We can just use `curl_with_retries` and pass in a `:max_retries` value. 
Are you sure removing `plugin:@typescript-eslint/recommended` is okay? That looks like a regression. 
Why don't we have a TestGRPCErrorFromStatus or something to test the grpcErrorFromStatus function? 
Could you move the `result` variable to the top of the function? 
How about just `seed = os.getpid()`? That would probably be a little more intuitive. 
Don't we want to check for a `GET` in the output? 
It is not clear why we need to close the udpConn twice. 
Should we be using `before_validation` here or `after_initialize`? 
1. Why do we need to add this `if`? - it seems to me that the `if` is the same as the one we have in `map_to_output`, isn't it? 2. `map_to_output` is a bit of a confusing function name - it doesn't really map anything to anything. Maybe `parse()` would be a better name? 
Do we need to check for 'disable' as a string? 
Maybe it should be documented that the list of services is not exhaustive and can change without notice. 
Does the duration really need a default of 3000? 
Can you document the format of `reporter_class`? Is it a fully-qualified type name? 
can this be in the pkg/apis/namespace package? 
With this change slaTrigger will be immutable. When will it change? 
Missing semicolon at the end of the `const expect = chai.expect`. 
Line is too long. [88/80] 
if the directory we're writing into is 0600, why is the file 0655? 
Should we use `resource` name in this package name? 
 It is a little bit strange that you have a `single_gpu_test` which does not test a single GPU. Maybe `test_single_gpu`? or `test_one_gpu`? 
Mark a DB connection. doesn't make sense 
Now we have a new issue with the name of BeforeWrite. Let's discuss. 
why not just rename `SimpleParamDocView` to `ParamDocView` and make `SimpleParamDocView` private? 
It looks like this test is trying to test that a disabled button cannot be clicked, but the first line is actually clicking a link. I'd recommend splitting these into two different tests. 
Why are we removing these variables? 
Can we add some comments to explain what this processor is doing? 
Why is this change needed? Can you describe the bug that you're fixing? 
Why not use the `original` `m_indirectKernelMem` here? 
Why is the `.h` file called `CommuncationUtilities.h` while the namespace is `CommunicationUtilities`? 
Is the return statement a typo? If not, please add a comment explaining what it does. 
it's not clear what this function does, it's better to add a comment. 
Maybe we should add `destroyResourceLinks` and `destroyResourceLinks` to `LinkManager` and then call them from here and from `AbstractTag`? 
Why was this removed? 
As this is a public method, I'd recommend checking the parameters for null. 
Use `lm` instead of `self.list_marker` in the body of the loop. 
Can you explain what this is used for? It looks a bit confusing. 
Why is this method called from within the `bisect_round_finished` method of `Bsearch` object? 
Is this the same as the "Rpc-Header" prefix? Is there a way to consolidate these into one prefix constant? 
Can you explain this change and why it's necessary? 
Use `@user_message_author` instead of the string literal? 
It seems like `New` should take in a kubernetes client rather than a string. 
What happens if `fairBankEpochNum + a.foundationBonusLastEpoch` is beyond `currentEpoch`? 
we should check here for instanceID and for additionalTags 
What is the config instance here? Can you add some more explanation about how this function works? 
Most of this logic should be moved to validation package. 
What is the purpose of this method? 
just add the `else:` block below to this method, no need to keep the code around. 
Why is this function returning true or false based on whether an NPC is casting a spell in a bard song? Is this just to prevent the AI from casting? If so, why does it need to return true or false? 
Why are you adding `@team_plans` here? The method is called `new` but you are using it to edit plans? 
Consider adding a comment to the regex. It is not obvious that this is matching language codes and some people may not be familiar with that. 
nit: this should be called `destination` instead of `append_destination`, as it is constructing a destination string. 
Why not just use log.Logger? 
But SplFileObject::fgetcsv() also returns <code>false</code> on error, no? 
What is the purpose of this method? 
Why not use `copy->segments = segments` if the `segments` argument is not NULL? 
Why do we need the grpc-prometheus dependency in this file? 
Can you add a comment here explaining what this is doing? 
Does this have anything to do with the actual error? I think that this is potentially fairly confusing naming. 
switch does not need a break if it is the last case 
is there a reason you need to check if value is a dictionary? 
Ok, this is a big problem. `typeSupported` is used to determine whether we can use an index, or can evaluate a predicate in the storage engine. I'm assuming the original use case was to allow scanning of a column that would be used for an index, but isn't yet indexed. If that's not the case, then `typeSupported` is a bad idea all around. But if it is, then this needs to be completely removed. 
Could you add a comment on why you need to get the absolute path, and why you do the check if the file exists? 
What about the `manager.cleanConnection()`? 
Is there a way you could add a test for this additional condition? Something along the lines of: `Assert.AreEqual(spells[spell_id].reflectable, spell.GetSpellStatValue("reflectable"));` 
Would it be possible to add an explanation of why this is necessary? 
if dockerVersion is not nil, then the return dockerVersion is not nil, so err is redundant and can be removed. 
Unneeded parens around the type switch, also I think the type switch needs to switch on col.(type) not just col (and there are a few other places like that) 
can we get rid of the longtests in this refactor? 
Can we make the threadCount check more specific? I think we could just use `threadCount > 1` and not have to worry about this code at all, but I'm not sure what this is guarding against. 
Alternatively, you can also use `RemainingCount` helper method here. 
It looks like this is a listens profile page, but it doesn't seem like it's actually displaying the listens. Maybe we should rename the function to reflect that? 
Isn't `null` a valid value for `getSource`? 
Why not just use the id from the gallery and media? 
it's helpful to see these differences in the test output, so I would prefer keeping them in the assertion 
Seems like the condition `bbox_feats.shape[0] > 0` should be checked before calling the `bbox_semantic_feat.shape` check? 
Is it possible to put a comment here saying what the while loop is doing? 
Why not use `kv.WriteBatch` in `PutBlock` and `kv.Batch` in `GetBlock`. 
Is there a particular reason why the `try-except-raise` pylint rule was added? 
Won't this cause a problem? You're not setting the `searchTerm` property here. 
How about a comment that it implements metric.Provider? 
Is this the only use of `NextPlanNodeIDKey`? Seems like it could just be a string. 
Not sure what to make of this summary - the anchor head 'object'? 
Would it be possible to add a comment explaining why we're doing this? Don't we want to use the build dir as the working directory for the compilation? 
Adding a new parameter is not an API change. That's what the version is for. 
Shouldn't we also respect `telemetryConfig.Enable` here? 
Should this new parameter be added to the interface, or should the old ones be removed? 
Not very clear what this is doing. 
should we have a comment why we are calling AsReadOnly? 
What does this function do? What is the code? 
Maybe we should add a new method `setMap` and `setArray`, then we can remove the `isMap` and `isArray`. 
Why are we adding a new feature here? 
Can we add a comment in the NewWorkingSet function that explains why we're passing `false` here? 
Why is this method necessary, why not just have the {@link #manifestListLocation()} return the sequence number as well? 
Can you use `urlparse` instead of `urlsplit`? 
What is the purpose of backing up the data directory? Is it necessary to do this before removing the peer? 
Unnecessary `const_cast`? 
~~~I would consider leaving some margin between the used capacity and the real one, to avoid calling GC too frequently.~~~ 
it's not clear to me why the return type is changed from array to \Shopsys\FrameworkBundle\Model\Product\Flag\Flag
Update `config` to be a `dynamicconfig.Config` instead of a `Config`. 
Is the `GetAbsoluteUrl` method necessary? It seems like it's just duplicating the functionality of the `GetTag` method. 
maybe consider adding to the PHPDoc that this will return null if the file doesn't exist? 
Shouldn't this be a private constructor ? 
Why is this needed? This seems like it would be much more understandable if it was just an object. 
Rule files: Don't hardcode the list of rules in this file. 
Should we pass in a context object or a function to wait for the database to be unlocked? 
Maybe use `JSON.parse` instead of `eval`? 
Why is the return type still `bytesPostResponse` if the return value is actually `swarm.ZeroAddress`? 
Why is `options` a magic number here? Maybe something like `options.maxWidth = width * 2` would be better?
Why are we storing this as a string? We should use whatever type the OCI spec uses - probably an int? Parsing should be done when we set the umask. 
These should all be separate commits. 
It seems like the default service is never used? 
Is this dev->_device check just a sanity check? Or is it possible for the device to be uncreated here? 
IsXNullableReturnType is a bit confusing, what does it mean? 
Is it possible to split this file? The part after `Uuid` is quite different from the part before. 
It's OK, just I think it would be better to keep it as simple as before. 
Why is this deletion of Driver.prototype.VENDOR_COMMAND_PREFIX necessary? 
Shouldn't it be using Nethermind.Blockchain.Filters? 
Is this the same as the other method that creates a link to contact your mentor? 
Would it be better to use a constant for the strings 'Functional' and 'Unit'? 
Have you tried to do this in a separate patch? It seems unrelated to the rest of the patch. 
SortOrder is a map of sort order ids to their respective sort order values. 
Do we need to test that the hrp is of the correct length? 
Can this be `static`? 
Revert this file, it's not part of the patch. 
Why are you moving the ICMP types here when the map already contains them? 
Do we need to catch and log this? 
Shouldn't this be `if len(self) == 1 and (key == 0 or key == self.keys[0])`? 
nit: should follow member variable convention (_). 
Maybe add a comment explaining the purpose of this class. 
Standards: Could you please add a space after the `if`?   Standards: Could you please add a space after the `&&`?  
Maybe we should rename this to `vcap_data_or_nil` to make it clearer that it always returns the value. 
Not sure this is really necessary. If you're looking for examples, I think the context is the wrong one. We should be documenting a real example of a struct that contains two fields of type `tchannel.Context` and `yarpc.Context`. 
Why are we removing a providerToken here? 
Is this using statement necessary? 
It would be great to have a test for this error case as well, just to make sure that the error message is correct. 
Why is this being added back? 
Do you have any tests to verify the `getUnmergedMDUpdates` function? 
What's the difference between this and `ostree_repo_load_variant`? 
Don't we need to remove the trailing 0 from the identifier? 
Should we use `ALTER TABLE host ADD INDEX host_cpid (host_cpid), ADD INDEX host_domain_name (domain_name)` instead of doing two separate queries? 
According to the description, this should be the tail probability of the normal distribution, not the probability of getting samples > x. 
Do we have any tests that check the output of the dump? 
Why not use an `enum` for this? 
Can this be split up into multiple lines for clarity? 
Why is this method named `GenerateParameterGroupModelText` instead of `CreateParameterGroupModelText`? 
Do you have a test for this? 
What happens if `sentence_` is null? 
Why delete the license in this file 
Needs a visibility, also I think this should be moved to the constructor. 
Why did you modify this? 
Is there a reason this is inlined rather than a standalone function? 
It might be nice to align the option names here, it might make the code a little more readable. 
Not sure the nagios package belongs in here? 
Why is this not an error? 
why not use `isTsTest = !!process.env.FB_TS_TEST;`? 
Adding import for `github.com/thanos-io/thanos/pkg/store/storepb`. 
Can we move the sentence "Renders a table showing the user s unique identifier." to the summary? 
Why is publicLink a string? Can't it be a URL? Also, can you add a comment about what the ID is? 
Why are we checking for `EOF` manually? Is it not possible to use `feof()` here? 
What are ks and kc? I think we could use some more descriptive names here. 
Why do we need this? Isn't the constructor not sufficient for this? 
reordering: Maybe move the definitions of `INITIAL_BATCH` etc. to the top, so that `FLAG_BLOCKED` is still at the bottom? 
Why is this an `AnyTimes` mock? I don't think the test case needs it. 
you should run `./configure --help` and see if there's a way to use a different binary for yacc 
Why do we need to define CATCH_CONFIG_MAIN in all files ? 
Why is this method returning a boolean? 
Why not just use #ifdef PLATFORM_IS_BSD instead of #if defined(PLATFORM_IS_FREEBSD) and #if defined(PLATFORM_IS_LINUX) ? 
Actually, this isn't being used anymore. I'll remove it. 
Can we switch to `System.arraycopy` with a comment that it's better for `Object[]` than a `for` loop? 
Why is the deletion necessary? 
why is this needed? 
Why size 24 instead of 20? 
Why are you using `typing`? 
Just a small nit, but don't you need to update `self._default_zoom_changed` when calling `super().setZoomFactor()`? 
Can you mention that it converts the input to a JSON string? 
It's not clear to me the role of `network` and `location` in this struct. Can you expand on it? 
Should the `tab` parameter be named `parent` to match the parent class's `parent` parameter? 
Why is Delete not implemented? 
should we add a check that this is not a string or dict? 
What is the purpose of this file? It seems to have been added in the same commit as some other changes to the same file. Can it be removed? 
Why the change from `res` to `result`? 
Why do we need both a `fakePromiseIssuer` and `fakeStorage`? They seem to do the same thing. 
Why do we need this random cache=false here? 
What is the purpose of this code? 
Maybe you could add a comment why do you need to pass logr.Logger and client.Reader to this function 
Yes, you are right. I want to include the first sample and the last sample in the evaluation. 
Is there an equivalent property for the pipeline_def? It looks like you could use the `pipeline_def` property on `DagsterInstanceLocal` -- is that a sufficient replacement? 
Thanks for the clean up! 
What's up with the DEFAULT_* keys? 
What's the reason for this change? 
Why is this needed? Seems like a step back. 
It's not clear to me why `RecordHttpServerAttributes` is a part of this interface. 
why is it important to provide a `maxMessages` parameter. I would assume that we could get an arbitrary number of messages from the driver. 
Why do we use both fastrtps and fastdds namespaces here? 
Can you change the name of the method to something more descriptive and add a documentation string above the method definition? 
Don't forget to add `CommentCreator` to `ProposalComment`'s `#create_comment` method. 
What is the purpose of this error swallow? 
~~What is the point of the file? Is it testing forEach or something else?~~ This is actually testing VelocityResponseWriter, but it's a bit of a grab bag of tests. 
Is this really needed? Can't you just use the base class? 
should we have a multi-line string literal here to make this more readable? 
Shouldn't these be called `new` and `newNoOp` or `newStringDetector` and `newNoOp`? 
Why are we changing this? This shouldn't be needed. 
Can we just use a different method name for "setVisible" instead of having to put "menu." in every line? 
Why is there a difference between the return value and the call to the same method above? 
can we move the `if` to the other side of the `else`? 
Why is this returning 0 instead of 1? 
you should add a comment here about why it's necessary to call `mini_approval` in this situation, otherwise it's really confusing to anyone reading. 
Why do we need to add `cniNet` and `cniIpam` here rather than just using `cni.Tags`? 
Why not create a `CloseableIterable` around the `ManifestFiles.read(manifest, io, null, null).project(schema)` call instead of calling `transform`? 
Do we really need a new `GetSessionQueue` class which does pretty much the same as `GetNewSessionQueueSize`? 
Is it necessary to have the check for `uploadedToServer`? It's always true here. 
As I said, I don't see any point in changing the name of the variable to `btl` as you are not using it. 
It would be good to get rid of the "XXX"s in the comments and replace them with real bug numbers. 
There is something wrong with this summary, but I'm not sure what it's trying to say. 
either this should fail if the prefix already exists, or it should be a noop 
Using Verbosef here makes it look like this is going to be output all the time, but it won't. Maybe Warnf? 
Should we be exposing the max number of documents? Why not just pass in a constant? 
Why is this not a global const? 
Can you use sprintf instead of replacing a string? 
Wrap the new `data` arg in a `try/catch` and if an error is thrown, display the DataErrorComponent with that error. 
Is this change necessary? Can you refactor it so that the change is unnecessary? It looks like the change would be 29.0 -> 30.0 
Should we have a diagnostic error message in the log here? 
Why did you make this change? 
It's not clear to me why this is needed. In the case of detecting the size of a register, do we really want to log information about the register? 
It would be good to add some comments to explain what the columns represent. Also, why change `public_id` from `string` to `text`? 
Why are we checking access to :exercises here? 
Is there a good reason why the order of the variable declarations was changed? 
Can you change this to use the `IsEmpty()` method instead of the `==` check? 
do we need to keep the `execute.AggregateConfig`? 
Is there a reason it's optional instead of required? 
There should be some kind of punctuation at the end of the summary, like a period or colon. 
