I think this is a bug. `snapshot` should never be null.
I think we should use `collectorUri.OriginalString` here.
This is a bit of a nit, but I think it's better to use `RegExp` literals instead of `new RegExp` when possible.
This message is not very clear. I would say something like: > Instead of using exit() or quit(), consider using sys.exit().
`ret` -> `result`
This is the package that contains the glue code needed to start a Bee node.
I think this is a good candidate for a constant.
This is a bit of a hack. I'm not sure if there is a better way to do this.
missing a comma at the end of the line.
This should be `if (is_single() || is_page() && !is_front_page()) {`
This is only valid for the client.
This test is not doing anything. It is just waiting for the element to be unclickable.
I think this should be `methodName()` instead of `methodName` (same for the other changes in this file).
This is the only change I'm not sure about. I'm not sure if we should be changing this to the new location. I'm not sure if we should be changing it at all.
I think we can use `io.servicecomb.java-chassis` instead of `io.servicecomb` and `java-chassis`
I think we should remove this TODO.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is the only change that is not backward compatible.
I think this should be `allowOptionalMappings = false` by default.
This method is not used.
I think this should be `test-slug` instead of `test/` + `MODULE_SLUG`
nit: `String.valueOf(MetadataTableType.ALL_DATA_FILES)` can be replaced with `String.valueOf(MetadataTableType.ALL_DATA_FILES)`
I think this should be `if ifaceName == "wireguard.cali" {`
I think this should be `abstract T getDocValues(int numDoc)`?
I think this should be `Increasing receive flow control window for the connection to %d kB, in response to stream flow control window increase`
This is not true anymore. We can call init multiple times.
I think we should use the `UserId` from the `SharedKernel` here.
I'm not sure if this is the right thing to do here. I'm not sure if we should just send an enter keypress here. I think it's possible that the focused element is not a selectable element.
I think we should keep the `skipIfNotIPv4Cluster` check here.
why not use `NewStateDBAdapter(sm, 0, hash.ZeroHash256, NotFixTopicCopyBugOption())` directly?
This is a bit of a hack, but it's the only way I can think of to handle this case. I'm not sure if there's a better way to do this.
This is a good idea, but I think it should be done in the caller. This function is used by both `cuda_prefetch_pointer` and `cuda_prefetch_pointer_async`, and it would be nice to avoid duplicating the check.
missing a comma at the end of line
I think this should be `AgreementFilterTimeoutPeriod0` to match the other one.
I think we should move this to the `quizzes` resource.
I think this is a bug in the test. I think it should be called thrice.
I think this is a good example of how to use template literals.
I think this should be `Assert.ContainsAsync`
nit: I think we should use `Activity.Current` here instead of casting to `Activity`
I think we should also set the `spec.template.spec.containers[0].image` to the empty string. Otherwise, we'll end up with a broken image.
I think this is a good change, but I'm not sure if we should be using `bucket` here. I think it's better to use `bucketRegex` here.
Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
nit: I think we should rename this to `partitionFieldMap` to be consistent with the other maps in this class.
Line is too long. [105/80]<br>Block has too many lines. [34/25]<br>Block has too many lines. [34/25]<br>Block has too many lines. [34/25]<br>Block has too many lines. [34/25]<br>Block has too many lines. [34/25]<br>Block has too many
I think we should keep the `source` key here, since it's a valid key for the `Upload` step.
This is a bit confusing. I think it would be better to call this method addOneRowAggregatesForceGroupByAgg() or something like that.
Line is too long. [112/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
Can we add a check here to see if the hash is already set and if it is not, then only calculate the hash and update the hash value.
I think this should be `perm_getNodesAllowlist` (not `perm_getNodesWhitelist`)
I think this should be false.
This should be `controlTypes.STATE_PROTECTED` instead of `focusObject.isProtected`.
This is a change in the API. I think it's better to keep the old API.
This include is not needed.
This is a bit of a hack, but it's the only way I could think of to avoid the NPE. I'm not sure if there's a better way to do this.
I think this test is failing because of the new reindex command. I'm not sure how to test this.
I think this is the only place where we need to do this.
This is a breaking change. We should add a new field to the message and leave this one as is.
I think this should be `osconfig_tests/config` and `osconfig_tests/gcp_clients` (without the `github.com/` prefix).
I think this should be `const`
This is a bit ugly, but I don't see a better way to do it.
I think we should check if the job exists before we check if the app exists.
I think this should be `snakebite` instead of `cdh4`
I think this should be `^text$` instead of `^checkbox$`
This is the only test that uses the `padding` prop. I'm not sure if we should be using it at all.
typo: negtive -> negative
This is a bit of a hack, but it's the only way to get the layer surface to get keyboard focus.
I think this is a bit of a hack. I'd rather return a constant value that is not a valid timestamp.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think this is the only place where we're using `time.Duration` as a multiplier. I'm not sure if it's worth it.
I think we should use `TimeUnit.MILLISECONDS` here.
I think this should be `H2O_VECTOR(uint64_t)` instead of `H2O_VECTOR(double)`.
I think this should be `Table registerTable(TableIdentifier identifier, String metadataFileLocation);`
nit: I think this should be `from mitmproxy.proxy import context`
This is a bit of a hack, but it's the only way I could get the test name to show up in the logs. I'm not sure if there's a better way to do this.
I think this should be `ITaskItem[] BlobNames { get; set; }` (without the `public`)
This is a test plan.
`hostsString` is not used.
I think this should be `kernel_extent = dilation_data[i] * (kernel_shape_data[i] - 1) + 1;`
nit: I think this should be `if (pathStart == -1 || pathEnd == -1)`
This is a breaking change. We should not change the name of the function.
I think we should be able to remove this.
This method is called by the `ImageIO.read(InputStream)` method. The `ImageIO.read(InputStream)` method closes the stream.
This line is too long. [101/80]
This is the equivalent of --ponynoscale.
This function is no longer used.
This is a bit of a weird name, but I'm not sure what else to call it.
typo: validates -> validate
This is a bit of a hack, but it's the only way I can think of to make the validators and vote fields optional.
I think this is a bit confusing. I think it would be better to say "This works well because managed certs are only associated with one name per config. Note, the renewal inside here may not actually occur and no error will be returned due to renewal lock (i.e. because a renewal is already happening). This lack of error is by intention to force cache invalidation as though it has renewed."
This should be `require_once __DIR__ . '/Psalm/Internal/exception_handler.php';`
I think it would be better to use `Shopsys\FrameworkBundle\Model\Article\Article` here, because it is used in the whole framework.
Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `msg.GetGroup() == "user" && msg.GetType() == "data"`
I think we should use a buffered channel here.
I think this should be `renewBeforeExpiryDuration` to match the field name in the struct.
I think this is a bug. The `title` should be the `title` and the `artist` should be the `artist`.
nit: remove empty line
I think this file should be removed.
I think we should use `const ServiceType = "wireguard"` instead of `const ServiceType = "wg"` to be consistent with the rest of the codebase.
I'm not sure if this is the right way to do this. I'm not sure if we should be using a callback at all.
I think this is a bit misleading. The ACME server is not guaranteed to deliver the preferred chain. It's the client that is not guaranteed to deliver the preferred chain.
I think this should be `const { MongoClient } = require('../../');`
I think this should be 4MB.
I think this is a bit confusing. It's not clear what "caches" means here. I think it would be clearer to say "If it has triggered a prefetch, it returns that."
I think we should use `browser.isTizen` here.
This is a good example of how f-strings are better than %-formatting.
I think this is not needed. The `LogManager.Flush()` below will wait for the flush to complete.
I think this is a bug fix. The original code was returning 1 for stdlib files, which is incorrect.
I'm not sure if this is the right way to do this. I'm not sure if we should be using the compat shim at all.
I think we should have a `CloseShardRequest` struct in `persistence/shard_manager.go` as well.
This is a breaking change.
I think this should be `if server_side_encryption_customer_algorithm is not None:`
This is a bit of a hack, but it's the only way to get the summary data on Linux. The summary file is not a regular file, so we can't use the regular `ot_file_mapat_bytes` function. Instead, we open the file and read it into memory.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think this is the only place where we need to worry about the `id` field. The other places where we use `id` are for the `object_id` and `parent_id` fields.
This is a bit of a hack, but it's the only way I can think of to get the default value for the number of cores. I'm not sure if there's a better way to do this.
This should be used when an object does not notify of selection changes.
I think this should be `logrus.Errorf` since we're logging the error.
This should be alphabetically sorted.
I think we should use `Security.Instance.Settings.RulesPath` here.
I think this should be `Include = d.GetValueList("Include"),`
Please add a comma at the end of the line.
I think this is a bug in the test. We should be able to use the latest version of pandas.
I think we should log the error here.
I think this is a good change. I'm not sure why we were using `json` before.
I think this should be `Client` (capital C) to match the other fields.
I think this is a bug fix. I'm not sure why it was here in the first place.
I think we should use `hasMany` here.
This import should be grouped with the other stdlib imports.
why change to v3?
Nit: I think we should use `github.com` instead of `github.com` in the regexp.
I think this is the only place where we're using `trim_to_bytes` with a string. I'm not sure if we should be using it at all. I think we should be using it only for bytes.
I think this should be `percentiles: Optional[List[float]]`
I think this should be 2000. I'm not sure why we're limiting it to 200.
nit: space after `=`
Metrics/LineLength: Line is too long. [105/120]
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a breaking change. I think we should deprecate this and add a new method `ResultsMap` that returns a map.
Can you please add a cleanup for this function?
nit: `coma_separator` -> `comma_separator`
I think this should be `self._execute(Command.GET_ELEMENT_RECT)['value']`
I think this is a bit misleading. It's not a new or pre-existing gauge, it's a new or pre-existing SettableGauge.
I think this is wrong. The timestamp is supposed to be the sum of the two values.
This is a test of the late disabling of useless suppression.
I think this should be `RootfsPropagationMode` to match the `MountPropagationMode` type.
This is a workaround for a mypy bug.
I think this should be `DisableHttpGit` (with an uppercase `H`) to match the other settings.
I think this is the only place where we're using the `conntrack.NewScanner` function. I'm not sure if we should be using it here, or if we should just be using the `conntrack.Scan` function directly.
This class is not used anymore.
I think this is needed here, because the user is logged in, and the session timeout is set to the default value.
I think this is a bit confusing. The `ReadOnlyTransactionProcessorFactory` is used to create a `ReadOnlyTransactionProcessor` which is used to create a `ReadOnlyBlockProcessor`. The `ReadOnlyBlockProcessor` is used to create a `ReadOnlyValidatorProcessor`. The `ReadOnlyValidatorProcessor` is used to create a `AuRaValidatorProcessor`. I think it would be better to have a `ReadOnlyAuRaValidatorProcessorFactory` which creates a
This is a change in behavior. I'm not sure if it's a good change.
Metrics/BlockNesting: Avoid more than 3 levels of block nesting.
This class is not meant to be used directly.
This is a list of arrays, not a list of `array[]`
I think we should rename this to `ErrorNotification` as well.
This is a bit of a nitpick, but I think "Invalid username" is a bit more descriptive than "Invalid email" here.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `HandleUpdate(prevRanges, currRanges []address.Range, peer string) error`
I think this is a good change, but I'm not sure if we should be using `owner` as the name. I think it's a bit confusing to have a variable named `owner` that is not an owner. Maybe `sessionOwner` or something?
Standards: Please add a space after commas.
This is a bit of a hack, but it's the only way I could think of to get the remote host to be set. I'm not sure if there's a better way to do this.
I think this is not needed anymore?
This is a breaking change. We should not do this.
I think we should remove this flag.
Layout/SpaceInsideParens: Space inside parentheses detected.
I think we should not implement this method for fakeTwoPhaseChaos.
I think we can use `map[string]int64` to replace `map[string]string` here.
I think this is the only place where we're using `require` instead of `t.Errorf`. I'm not sure if that's a good thing or not.
I think this is a breaking change.
Please don't import sys in a module. It's not used.
I think we should also remove the `newRetryTask` and `newRetryTaskV2` functions.
This is the only change I made to the code. I think it's a bit more clear to say "AWS IAM" than "IAM" in the snippet description.
This is not correct. If the width is null, the height should be null too.
Style/RedundantSelf: Redundant self detected.
This is a bit confusing. I think it should be `isClosed = FALSE;`
I think this is the only place where we need to use `act` now.
I think this is a bug in the test. The `follow-redirects` should be `False` here.
I think this should be done in `cStorPoolAddEventHandler` itself.
Please use `foreach ($missingPlugins as $pluginCode => $plugin)` instead.
I think this is a good change. I'm not sure if we should be checking for nil here. I think we should be checking for empty string.
This is a bit of a hack. I'm not sure if this is the right place to do this.
This is a warning, not an error.
This method is not used anywhere.
I think we should keep this code. It's not a breaking change.
This is a bit of a hack, but it's the only way I could think of to make this work. I'm not sure if there's a better way to do this.
I think this should be `NoValidateShapeMethods` (note the extra `e`)
I'm not sure if this is the best way to do this. I'm not sure if it's possible to do this without passing a flag.
I think this is the only change that is needed to make this work.
I'm not sure if we should be disabling this rule for this file. I think we should be able to use camelCase for acronyms.
I think we should remove this warning. It's not deprecated, it's just not used.
I think this is a bit more readable as `bundle != null ? bundle.getBoolean(IS_GLOBAL_STORE, false) : false`
This is a breaking change. We should not change the method name.
I think this is a bug in the AvalonTools code. The AvalonTools code should be returning 53 bits.
I think this should be `GET,POST,PUT,DELETE,HEAD,OPTIONS` to support preflight requests.
This can be used to filter deduplications of multiple reports.
This is a bit of a hack, but it's the only way I could get the package to install. I'm not sure why the package format is being set to HDF5, but it's not being used.
I think this should be an error. If the apply fails, we should fail the entire operation.
Please add a space after the `=`
I think we should keep this flag. It's not a bug, but it's a change in behavior.
I think this should be `GET /version` (singular)
I think this is a good change. I'm not sure if we should have a default label of "CudaSpace" or something like that. I think it's better to have a default label.
I think this is a bug. We should not reset runID here.
I think this should be `config->xwayland_lazy = true;`
I think this is the only place where we can't use `io.Copy` because it doesn't return the number of bytes copied.
Line is too long. [105/80]<br>Unused method argument - snapshot_name. If it's necessary, use _ or _snapshot_name as an argument name to indicate that it won't be used. You can also write as take_snapshot(*_) if you want the method to accept any arguments but don't care about them.<br>Unused method argument - snapshot_name. If it's necessary, use _
nit: I think we should add a space between `--ignore-certificate-errors` and `--enable-features=NetworkService`
I'm not sure if this is the best way to do this. I'm not sure if we should be passing the `name` value to the `variation` method. I'm not sure if we should be passing the `name` value to the `variation` method. I'm not sure if we should be passing the `name` value to the `variation` method. I'm not sure if we should be passing the `name` value to
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `filepath.Join(paths...)` instead of `filepath.Join(dir, ".mysterium", filepath.Join(paths...))`
I think we should use `EXECUTION_SOURCE` as the constant name.
I think this is the only place where we set the resource type. I think we should remove this line and instead set the resource type in the `AddProperty` call below.
This is a bit of a nit, but I think it's better to use `std::make_unique` here.
This is a non-nullable reference.
I think this is a bug. We should be passing in the transport.NoDeps here.
I think this should be `klog.Info("preparing ovs bridge ...")`.
This is not used anymore.
I think this should be `Category.Error` as it is a breaking change.
I think this should be `import yaml` instead.
I think this is the only change that is needed.
I think this should be done in `get_cpu_info` and not here.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is not needed.
I think this is a bug in the conda-forge feedstock. I'll open an issue.
This is a bit of a hack, but it's the only way I could think of to prevent the same account from being added twice.
This is a bit of a nitpick, but I think it would be better to use `std::min(creature->getHealth(), maxHealth)` instead of `std::min(creature->getHealth(), static_cast<int32_t>(maxHealth))`.
This is a breaking change.
nit: this is a bit of a weird test. It's testing that the client is able to parse the response, but it's not testing that the client is able to parse the response correctly. I think it would be better to test that the client is able to parse the response correctly.
This is a temporary fix. It should be removed when the issue is fixed in Python.
This is a bit of a weird one. I'm not sure if we should be printing the error here. I think it's better to let the caller decide if they want to print the error or not.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a copy of the function in `internal/bytealg`. Why do we need to duplicate it?
I think we should keep the `ActivitySourceAdapter` here. It's not used in the constructor, but it's used in the `HttpInListener` constructor.
I think we should not use Fatal here. Fatal will exit the program.
I think it would be better to use `H2O_VECTOR(int)` instead of `H2O_VECTOR(int *)`.
This method is not used anywhere. Can we remove it?
This is a bit confusing. It's not a method of the driver, it's a method of the `self.driver` instance.
I think this is a bug. If we have a mapping, we should not be removing it from the opts.Accounts. We should be removing it from the account that is being registered.
I think this interface should be public.
why not use a bool?
nit: can we add a reason why we ignore this?
I think this should be `GOOGLE_CHROME_OPTIONS` (uppercase) to match the other constants.
I think this should be `time.Hour * 24 * 30` to match the default retention period for user namespaces.
I think this should be `log.Debug` instead of `log.Println`
This import is not needed.
This is a circular dependency. You should move the include to the cpp file.
This is a bit of a hack, but it's the only way I could think of to get the number of messages in the folder without loading the entire folder. I'm not sure if there's a better way to do this.
nit: I think this should be `nextPrefixKey` to be consistent with the other methods.
nit: can we use 0 instead of -1?
This method is not used.
This is a breaking change. I think we should keep the old method for now.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit of a hack, but it's the only way I can think of to get the auto-fire to stop. I'm not sure if there's a better way to do this.
snprintf(str,128,"unknown *KEYWORD: %s", arg[ioffset]);
I'm not sure if this is the right way to do this. I'm not sure if the `showFullScreen` call should be conditional on the config value. I'm not sure if the `setWindowState` call should be conditional on the config value. I'm not sure if the `setWindowState` call should be conditional on the `self.config_state_before_fullscreen` value. I'm not sure if the `self.config
Defaults to 0.0001.
Unused import statement
I think this should be `if (Sdk.SuppressInstrumentation || this.handler.SupportsNullActivity && Activity.Current == null)`
I think this should be 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
This is a breaking change. I think it's better to keep the old name.
I think this is a breaking change. I'm not sure if we should be passing the server config to the server. I think we should be passing the server config to the server, but I'm not sure if we should be passing the server config to the server. I'm not sure if we should be passing the server config to the server. I'm not sure if we should be passing the server config to the server. I'm not sure if we should be passing
I think we should use the same wording for the link as the page title.
Line is too long. [85/80]
I think this is a bit of a hack. I'm not sure if there is a better way to do this.
I think we should keep the `SecretARN` field here, and add a new `SecretName` field. The `SecretName` field should be a concatenation of the `SecretPrefix` and `SecretCount` fields.
I think this is the only place where we're using `cleanup` so I think we can remove it.
I think this is the only place where we need to add the `unix://` prefix.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why the `KeyError` is raised, but it seems to be related to the `logical_key` column. I'm not sure if it's a bug in pandas or if it's a bug in the way we're using it.
This file is not used.
This is a bit of a hack, but it's the only way I could think of to get the driver version. I'm not sure if there's a better way to do this.
I think we should use `time.Duration` here.
I think we can use `enable_history` to replace `enable_history_file` and `history_file_path` in the future.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This method should return a NamedList<NamedList<?>>.
I think this is the only place where we're using `h.TypeForKeying()` instead of `h.Type()`. I think it's fine to use `h.TypeForKeying()` here, but I'm not sure if we should be using it elsewhere.
I think this should be `BooleanDefaultFalse` since the default is false.
I think this is not needed anymore, as the default bucket is always included.
This is no longer needed.
This is a bit of a hack, but it's the only way I could think of to avoid the NPE. I'm not sure if there's a better way to do this.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit of a nitpick, but I think we should use the `LOGGER` constant here.
I think this should be `offset += ...` (note the `+=`).
I'm not sure if this is the right place to add this flag. I think it should be added in `vkQueueSubmit` and `vkQueueBindSparse` but I'm not sure if that's the right place.
This is a bit of a weird pattern. I'd expect the stream to be deleted in the destructor.
Line is too long. [105/80]<br>Use 2 (not 3) spaces for indentation.
I think this is the only place where we use `quotas.NewDynamicRateLimiter` directly. I think we should be able to remove it.
I think this is not a good idea to pass signedUserName here.
I think it is better to use `TBB_INTERFACE_VERSION_MAJOR` and `TBB_INTERFACE_VERSION_MINOR` instead of `TBB_INTERFACE_VERSION`
I think this should be `if timeout <= 0 || timeout == 0`
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `KOKKOS_COMPILER_CLANG_VERSION_GE(1300)`
I think this should be `RoundOffsetError` (not `RoundOffsetError`)
I think this is a bug. The selection should be `[[0, 0, 0, 0]]` because the first row is hidden.
I think we should keep the `kinto.core` prefix for these settings. It's a bit confusing to have `kinto_redis` as a prefix for the settings, and `kinto.core` for the backends.
I think this is the wrong fix. The bcc address is not the same as the account address. The bcc address is the address that the user entered. The account address is the address that the user selected from the account. So, the bcc address should be visible if the user entered it. The account address should be visible if the user selected it.
I'm not sure if this is the best way to do this, but it seems to work.
This is the only place where we're logging the container name. I'm not sure if we should be logging the container name here. I think we should be logging the task ARN instead.
Use the new Ruby 1.9 hash syntax.
This is a workaround for a bug in Python 3.2 and 3.3. See #1034.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why the `getAttribute` method doesn't work here.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `false` by default.
I think this is a good idea. I'm not sure if we should do it in this PR, but I think it's a good idea.
I think this should be `metric must not be null`
I'm not sure if we should expose these properties. I think we should keep them internal.
This is a breaking change.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `string[] Frameworks { get; set; }`.
This method is only used in .NET Framework. Can we remove it?
I think this should be `TracerTimeout` instead of `TracerTimeoutLimit`
I think we should be able to remove this import now.
This is a bit confusing. I think it would be better to write the checksum that was read from the file.
This method is not used in the codebase.
This is a bit of a hack, but it's the only way I could think of to prevent the auto-fire from firing when the player is too far away.
I think we should keep this lowercase.
I think this should be `pgcfg.MaxIdleConnections > 0` to avoid setting the max idle connections to 0.
This test is not needed anymore.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
This is a duplicate of `internal/fileutil/fileutil.go:105`
This message is a bit confusing. I think it would be better to say "On Python 3, super() without arguments is equivalent to super().__init__()" or something like that.
I think we should use `EXECUTION_SOURCE_FLOW_TRIGGER` instead of `EXECUTION_SOURCE_FLOW_TRIGGER_JOB` in the code.
I think this is a good change, but I'm not sure we should be passing the action to the callback. I think it would be better to pass the action to the `with_events` method and then pass it to the callback. This way the callback doesn't need to know about the action.
I think this should be `int[] addressOffsets` to match the other names.
This is a breaking change. Can we add a new method instead?
I think this is the only case where we can return Remux.
I think this is a breaking change.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should keep the old fields for backwards compatibility.
(style) line over 80 characters
I think this should be `getSnapshotObj`
This is a bad idea. We should not be using print_function in this file.
This method is not mutation-free, because it returns a string that is not immutable.
I think this is the only place where we can be sure that `scope` is not null.
I think we should use the same string as the one used in the UI.
This is a bit of a hack, but it's the only way I could get it to work. I'm not sure if there's a better way to do this.
This is not used.
I think this should be a private function.
I'd prefer to keep this in for a while, as it's a useful message to help people migrate.
nit: space after `else`
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a breaking change. I think we should keep the old name.
This is the change that was causing the test to fail. I'm not sure why it was here in the first place.
This is a bit of a hack, but it's the only way I could get the test to pass. I'm not sure why the test is failing, but I'm guessing it's because the review status is not being passed to the diff command. I'm not sure how to fix this, so I'm just passing the review statuses as arguments to the diff command.
nit: can we use `io.netty.util.concurrent.ScheduledFuture` instead?
I think this should be `print("{owner}/{pkg} already installed. Overwrite? (y/n) ".format(owner=owner, pkg=pkg))`
I think this should be `protected` instead of `public`
I think this should be `expected_error_message = "Series.name must be a hashable type"`
This is a bit of a hack, but it's the only way I can think of to get the seq number from the underlying layer.
I'm not sure if this is the right way to do this. I'm not sure if this is the right way to do this. I'm not sure if this is the right way to do this. I'm not sure if this is the right way to do this. I'm not sure if this is the right way to do this. I'm not sure if this is the right way to do this. I'm not sure if this is the right
This is a bit of a hack, but it's the only way to get the pooling parameters from the layer.
[WARNING] pod status operation: update unsupported [WARNING] message: 1564344337477444734 process successfully
This is the only place where we're not returning the error. I'm not sure if that's intentional.
I think this should be `public abstract String codeGenVersion();`
I think this should be moved to the top of the page, right after the error notice.
This method is not used anywhere.
This is a bit confusing. I think it would be better to have a separate `setFocus` and `setCaret` method.
I think this should be `r` instead of `R` to be consistent with the other flags.
I think this should be in the `signed_in_analytics` partial.
I think this is a bug. The `key` should be the first argument.
I think this should be removed from the list of allowed origins.
I think this is the only place where we call `onFinished` and return. I think we should remove the `onFinished` call here and instead call it in the `else` branch.
I think this should be `issubclass(x, t)` instead of `issubclass(t, x)`
nit: space after `if`
I think this is the only place where we can't reuse the buffer.
I don't think we need this.
I'm not sure if this is the right place for this. I think it should be in the `AsyncRequestQueue` constructor.
I'm not sure if this is a good idea. It would be a lot of work to change all the code that uses `Value` to use `Number`. I think it's better to keep it as is.
This is a bit of a hack, but it's the only way I could get the delaySource to stop. I'm not sure why it's not stopping on its own.
This class is empty.
nit: this is not needed, the `if` is already checking for null.
Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I'm not sure if this is the right change. I think we should keep the `IList<IList<AnnotatedCodeLocation>>` here.
please keep the import order as before
This is a bit of a hack, but it's the only way I could get this to compile on Android. I'm not sure why it's failing, but it's not a big deal.
I'm not sure if this is the best way to do this. I'm not sure if we should be using the last refresh time to determine when to refresh. I think we should be using the last update time. I think we should be using the last update time to determine when to refresh. I think we should be using the last update time to determine when to refresh. I think we should be using the last update time to determine when to refresh. I think we should be using
I think this should be `INFO` level.
I think this should be `public` as it is used in the `Logging.dll`
This is a global variable, which is not allowed in C11. You can use `static const` instead.
I think we should move this check inside the `api_form.xml` file.
I think this is a bug fix. The `?? false` is needed because `IsGenesis` is a `bool?` and `??` is the null coalescing operator.
I think this should be `process.env["ANDROID_NDK_HOME"] || process.env["ANDROID_NDK"]` so that if both are set, we use the one that is set first.
Style/OptionalArguments: Passing a literal as the last argument is not recommended. Use keyword arguments instead.
I think this should be `Assign to Notebook` (or `Assign to Folder`) to be consistent with the other menu items.
This is no longer needed because the `once` is now waiting for the `o.conn` to be ready.
This is a bug fix. The `daysFromTimestamp` method was called for DATE literals, which is incorrect.
I think this is a good change. I think it's better to use the thread name than the thread id.
This is the only change in this file.
I think we should be able to remove this line.
Use the `unwrap` method instead of calling the `unwrap` function.
I think this is the right thing to do. If an exception is thrown, we want to return a non-zero exit code.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
@johndoe1011 I think this is the right place to add the ExecMetrics.
This should be `!ie.ServiceBuilder`
I think this is the only place where we need to check for `StrictSigningKeyUsage` and not `StrictIssuerCheck`.
This is a bug fix. The previous code was not working for the case where the column is added with a non-null default value.
I think this should be `this.options.readConcern` instead of `this.readConcern` since we're not setting it on the instance.
I think this should be `StringArrayComparer` as well.
This is a relative import. Is this intentional?
I think this is the right place to put this.
This is a bit weird. I think we should just remove this line.
Nitpick: I think this should be `TEST_QUEUE_ARN` to be consistent with the other tests.
Layout/SpaceInsideHashLiteralBraces: Space inside { missing.<br>Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
I think this is a bug in the test. The test is expecting an error, but the test is not setting the error.
This is the type of the column in the Iceberg table. It is used to determine if the column is nullable.
This is a bit of a hack, but it's the only way to get a unique directory name. I'm not sure if there's a better way to do this.
I don't think we need this anymore.
Style/RescueStandardError: Avoid rescuing StandardError. <br>Prefer single-line unless.
I think we should set the default to false for the next major release.
I think this is a bug fix. `names` should be a list of tuples.
remove empty line
I think we should use `json:"zvolWorkers"` instead of `json:"ZvolWorkers"` here.
I think this should be `https://www.googleapis.com/discovery/v1/apis/%s/%s/rest` instead.
I think this should be `handler.ErrorPages[whatInt] = where`
I think this is not needed. The domainId is already set in the constructor.
This is a bit of a hack, but it works. I'm not sure if there is a better way to do this.
This is a test for the `src` build.
I think this is a good name. It's not clear what it does, but it's not clear what it should be called either.
I think this is a good idea. I'm not sure if we should do this for all the URLs we get from the server. I think we should do this only for the login server.
I think this should be `GET_CONTEXT_LIST` to match the other commands.
I think it would be better to use `array_key_exists` instead of `isset` here.
I think this should be "Generate JSON schema" (with an uppercase "J")?
I think we should use the latest version of the image.
This is a bit confusing. I think it would be better to rename this to `mdDecryptionKeyGetter` and `mdEncryptionKeyGetter` and have them implement this interface.
I think this is a bit confusing. I think it would be better to just say "if the caller wants to force a server check, they can set `desiredKeyGen` to `UnspecifiedKeyGen`".
I think this is the only place where we use the `InsertTraceIdByServiceName` and `InsertTraceIdBySpanName` classes. I think we can remove them.
Use unless instead of if unless.
Nit: Please remove the extra line.
I think we should remove this import.
This test is failing on Travis, but not locally. I'm not sure why.
I think we should use the same naming convention as for the other services. `start_ses_service` or `start_ses_server` or `start_ses_server` or `start_ses_server` or `start_ses_server` or `start_ses_server` or `start_ses_server` or `start_ses_server` or `start_ses_server` or `start_s
If `addrs.value().empty()`, `metaClient_` will be nullptr.
I'm not sure if this is the best way to do this. I'm not sure if there is a better way to check if the element is a child of the dialog.
remove empty line
I think we should also mention that the implementation should have a constructor that takes a Props object.
I think this is a bug in the linter.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
This is a bit confusing. I think it would be better to say "the lockID that the client required the write to be contingent to is not held at the time the server tries to commit the MD"
import org.springframework.web.client.RestClientException; import org.springframework.web.client.RestTemplate;
I think we should keep this code. It's not a big deal, but it's a bit confusing to have a test that doesn't do anything.
I'm not sure if this is a good idea. I think it's better to keep the original formatting.
I think this should be `FileAccess.Read` by default.
This is a change in behavior. The `options._commit` callback is now called for every component in the commit queue.
I think this should be `Nethermind.Blockchain.Filters` instead of `Nethermind.Blockchain.Filters.Topics`
I think this is the only place where we need to check for the allowed post request.
This is a no-op, right?
I think this should be `RealPath = new string[0]`
I think it's a typo here.
I think we should use `get_api_quota_config` here.
This is a bit of a hack. I'm not sure how to do this properly.
I think this is not needed anymore, as the `GET` method is not protected anymore.
I think this is a bug. If the reader doesn't support the new parameters, it should raise a TypeError.
This is a bit confusing. I think it would be clearer to say "Either GitRepo or LocalRepo must be set, not both."
This is a breaking change. I'm not sure if it's worth it.
I'm not sure if this is the right place to put this. I think it should be in `init()` of `init.go` in `cmd/runc/main.go`
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should remove this. It's not needed.
Line is too long. [105/80]<br>Use 2 (not 3) spaces for indentation.
This is wrong. The `xwayland->server` is a pointer to a `wlr_xwayland_server` object. It is not the `xwayland` object itself.
I think this is the only place where we need to call `ForceFlushAsync` explicitly.
This is a bit of a hack, but it works. I'm not sure if there is a better way to do this.
I'm not sure if this is the right value to use here. I'm not sure if it's possible for the timer to fire before the context is canceled.
This is the only change that is not related to the bug. I think it's better to keep it here, because it's related to the same issue.
I think this is the only place where we need to set the mode.
I think this should be `c.dirtyBcache = nil` instead of `c.dirtyBcache = oldDirtyBcache` so that the caller can use the return value to know if the cache was reset.
I think we should use `get_service_url` here, as it's the preferred way of getting the endpoint URL.
I think this test name is a bit misleading. It's not testing the transition, it's testing the verification.
I think this should be `self.dilation` instead of `self.kernel_size`
This is a bit of a hack, but it's the only way I can think of to get the colour to update.
I think we can use `methodConfigMap.get(methodConfigProto.getName())` directly here.
trailing comma?
I think this should be `vendor/` instead of `tpb/`.
I think this should be `scriptEngineNameJavaScript` (with the `scriptEngineName` prefix)
This is the only change that is not backwards compatible. I think it's fine to remove this check.
I'm not sure if this is the best way to do this. I'm not sure if we should be passing in the pygment object here. I'm not sure if we should be passing in the pygment object here. I'm not sure if we should be passing in the pygment object here. I'm not sure if we should be passing in the pygment object here. I'm not sure if we should be passing in the pygment object here.
I'm not sure if this is a good idea. I think it's better to keep the old behavior.
This is a regression. I'm not sure why it was removed.
I think we should use `ShardContext` here.
I think this should be `os.Remove(dynamicListenerRegenFilePath)` instead of `os.RemoveAll(dynamicListenerRegenFilePath)`?
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
I think this is a bit dangerous. If the server is shutdown while this is running, the resetCh will be closed and the go routine will panic. I think it would be better to have a channel that is closed when the server is shutdown and have the go routine check for that.
This is a bit of a hack, but it's the only way I could get the keys to be sent in the correct order. I'm not sure if there's a better way to do this.
This is a breaking change. I think we should just return an error here.
I think we should keep the same value as before.
I think we should be able to remove the `ambient` flag from all of these constructors.
This is not needed anymore.
I think it would be better to use the `categorization` wording here.
I think this should be done in the `easyadmin.configuration.design_config_pass` service, not here.
This test is slow, but it's not marked as such.
This is a breaking change. I'm not sure if we should do this.
This is a BC break. The return type of this method is now `string|array|Markup`.
I think this is a typo.
I think this should be `yarpcerrors.InvalidArgumentErrorf` since the request is invalid.
I think this should be `final` as well.
I think this is a good change. I'm not sure if we should rename the variable `keysSource` to `primaryKeysSource` though.
This code example demonstrates how to upload an encrypted object to an Amazon Simple Storage Solution (Amazon S3) bucket.
I think this is the only change that matters. The rest is just cleanup.
I think this should be `metrics.0.values.0` instead of `metrics[ 0 ].values[ 0 ]`
I think this should be `plugin:prettier/recommended` instead of `eslint-config-prettier`
nit: remove extra newlines.
Metrics/LineLength: Line is too long. [122/120]
Nit: I think we should use `github.com/aws/aws-sdk-go/aws/session` instead of `github.com/aws/aws-sdk-go/aws` for consistency.
I'm not sure if this is the right thing to do. I'm not sure if we should be disabling this on mobile. I think it's a good idea to have this on by default, but I'm not sure if we should be disabling it on mobile.
I think this should be `// TODO: implement this` instead of `// override if needed`
I'm not sure if this is a good idea. I think we should keep the test as is and fix the flakiness.
Please remove empty line.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `errors.RouterUnrecognizedEncodingError`
Line is too long. [105/80]<br>Use the new Ruby 1.9 hash syntax.<br>Space inside { missing.<br>Space inside } missing.
This constructor is not thread safe.
Please don't use wildcard imports.
I think this should be `PausedPredicate` (singular)
I think this should be `INFO` level.
I think this should be `0.2.0` to match the version in the `pom.xml`
This is the only test that needs to be run manually.
This test is now testing the opposite of what it was before. I think it should be changed to test the opposite.
I think we should make this a pointer, so that we can distinguish between unset and set to the default.
I think this should be `Down` as well.
I think we should return the block hash of the block that contains the account.
I think this is the only place where we need to do this.
This is a bit of a hack. I'm not sure how to do this properly.
Metrics/LineLength: Line is too long. [111/120]
This is a bit of a hack, but it's the only way I could think of to remove the target attribute from the link. I'm not sure if there's a better way to do this.
This is a bit confusing. The plugin loader is the one that loads the plugin, not the plugin itself.
I think we should keep the original name here.
I think this is wrong. The `const` is not linear, but `const eff`.
This is a bit of a hack. We should be able to get the grantee list from the role list.
I think this is a leaked key.
I think this is a bug fix. The previous code was passing the wrong number of arguments to the translation function.
I think this should be nullable.
I think this is a false positive. The `checkstyle:IllegalType` is because the `Lists.newLinkedList()` is not a `List<String>`. The `checkstyle:VisibilityModifier` is because the `fieldNames` is not `private`. I think both are valid.
This is a bit of a weird pattern. I'm not sure why we need to do this. I'm not sure if it's a good idea to have a sentinel object that is not default constructible. I'm not sure if it's a good idea to have a sentinel object that is not copyable. I'm not sure if it's a good idea to have a sentinel object that is not movable. I'm
nit: space after `if`
This is a private method, so it's not a problem that it doesn't dispose the object.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
I'm not sure if this is a good idea. I'm not sure if we want to expose this function to the global scope.
This file should be moved to the `store` package.
I think this should be `term in config.val.url.searchengines.values()` instead.
nit: I think it would be better to use `fieldName` here instead of `origFieldName` since it is the name that is being sanitized.
I think this is a bug. We should be able to use `LengthList` as a `List` type.
This is a breaking change.
I think we should return the error here.
why change this?
This test is skipped because it is not yet implemented.
This is a bit confusing. I think it would be better to have the `x` in the `cos` function be the index of the atom.
I think we should remove the `omitempty` here.
This is the only change in this file.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why the FileInfo constructor throws an exception when the file doesn't exist.
I think this is a bit confusing. The policy specific properties are placed with RuntimeTLP as the top level property. I think it would be better to say that the policy specific properties are placed under RuntimeTLP.
I think this should be `auth-server` or something like that.
This is a bit of a weird pattern. I'd expect the lock to be passed in, but it's being created here. Is there a reason for this?
I think this should be `127.0.0.1` instead of `localhost` to avoid DNS lookups.
I think we should move this to the `dev` section.
nit: I think this should be `table.io()` instead of `this.table.io()`?
`failed to decode data` is not very descriptive. I would say `failed to decode hex string` or something like that.
I think this is a good change. I'm not sure if it's worth it to add a polyfill for `Number.MIN_SAFE_INTEGER` though.
I think we should rename this to `gsa18f-layout-container` or something similar.
Style/RedundantSelf: Redundant self detected.
I think this is the right fix. The last time we checked was the last time we checked for settlement.
This should be `is_content_editable_prop` (without the underscore).
I think this is a bug. The `executor_id` is not nullable, so this should not be possible.
I think this is a breaking change.
I think this is unused.
I think this should be `CopiedAnnotationsPrefixes` to be consistent with the other names.
I think this is wrong. If the blockhash is null, then the block is not valid.
I think this is the only place where we need to check if the task is necessary.
This is a bitmask, so it should be an integer.
I think it would be better to say "Freezes the specified column (i.e. adds it to fixed columns)."
This is a bit of a hack, but it's the only way I could think of to get the debugger to work with the new debugger. I'm not sure if there's a better way to do this.
I think this should be `other[args[0]]` (or `other[args[0]][args[1]]` if `args` is a tuple of length 2)
This test is failing because the plan name is not being resolved correctly. I'm not sure why, but I think it's because the plan name is being resolved relative to the current working directory, not the modulepath. I'm not sure how to fix this, but I'll try to figure it out.
This is a bit ugly, but I don't see a better way.
This is a good change. I'm not sure if we should remove the error code from the error message, though. I think it's useful to have the error code in the error message.
Metrics/LineLength: Line is too long. [122/120]
I think this should be `MergeEnvironmentVariablesFromSecrets` to be consistent with the other methods.
I think this should be `Cannot add the duplicate file %{fileName}, it already exists` (without the `new`)
I think this is a typo.
This is a bit of a hack, but it works. I'm not sure if there's a better way to do this.
I think this should be `PubSub` not `Publisher`
This is a bit of a hack, but it's the only way I could get the Holding Pen to display the "Need action" items. I'm not sure how to get the Holding Pen to display the "Need action" items without changing the Holding Pen code.
This is a bit of a nitpick, but I think it would be better to call this `copyCommand` instead of `copy`. The latter is a bit ambiguous, since it could be interpreted as a function that copies something.
I think it's better to use `market.Address().Hex()` here.
This is not a good error message. It should be something like "new_tab and new_window are mutually exclusive" or something like that.
This is a bit of a weird place for this. I'd expect it to be in the `crypto` package.
This is a pointer to a pointer. I think it would be better to use a pointer to an array.
This is a bit of a hack, but it's the only way I can think of to get the heap to start at a specific address.
I think this is the right fix. The issue is that we're calling `setActive(true)` on the session, which is causing the layers to be enabled. But we don't want to enable the layers if we don't have a display.
`onlyVertexProps_` is always true here?
This is a bit of a hack, but it's the only way to get the closure id.
I think we should limit this to the current client.
I think we should not change the log level here.
This is the only change that is needed to make the tests pass.
I think this should be `adaptiveScalarEncoder` (lowercase `s`)?
I think this is a bug. The message should be "ENGINE-16002 Exception while closing command context: ENGINE-03110 Required admin authenticated group or user or any of the following permissions: [READ, WRITE, CREATE, DELETE, UPDATE]".
I think we should remove this TODO now that we're ready for production.
I think this is the only place where we need to check for XDPEnabled. The rest of the code is only relevant if XDP is enabled.
I think this is a good idea, but I'd prefer to see the exception message in the message.
This file is only used in net452 and net461. Can we remove it?
I think this is the only change that is not related to the release process.
I think this is not needed anymore.
I think this should be "Azure Resource Management only supports HTTPS scheme."
This is a copy of `pr.peerToNode` so it's not a snapshot.
This is not a valid option.
I think this is a good idea, but I'm not sure if we should do it in the test setup. I think it's better to do it in the test itself, so that we can be sure that the test is actually testing what we want it to test.
I think this is a good idea. I'm not sure how to do it, but I think it's a good idea.
I think we should not export empty batches.
This is a breaking change. The balance record is now stored in the account data.
I think this is the only place where we use the config directly. I think we should use the config manager instead.
This is the only place where we call PrepareToStop. I think we should call it here and in the other places where we call Stop.
I'm not sure if this is a bug in clang-format or if it's a bug in the configure.h file. I'm not sure if it's worth fixing.
I think this is a bug fix. If you have a query with a projection, and you call `query.select(path)` on it, it will not be added to the projection. This is because `query._fields` is not updated.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
nit: I think we should use `nameof(span)` here.
Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
This is a bit of a hack, but it's the only way I could think of to get the dataset and datasetversion ids. I'm not sure if there's a better way to do this.
This test is failing on Travis. I'm not sure why. I'm not sure if it's a problem with the test or with the build.
This is a change in behavior. The previous behavior was to raise a `ReadTimeoutError` if the read timed out. Now it will raise a `ReadTimeoutError` if the read timed out or if the read failed.
This is a bit of a hack. I'm not sure how to do this properly.
I think we should use the same method here as in the `autocomplete` action.
I'm not sure if this is the best way to do this. I'm not sure if there's a better way to do this. I'm not sure if there's a better way to do this. I'm not sure if there's a better way to do this. I'm not sure if there's a better way to do this. I'm not sure if there's a better way to do this. I'm not sure
I think this should be `this.isNetworkError = true` instead of `this.isNetworkError = false`
I think this should be moved inside the `if (eclipseFormattingEnabled(project)) {` block.
I think we should use `{{ .Name }}` here instead of `{{ . }}` to get the name of the resource type.
I think this is the same as `autouse=True` (which is the default).
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This method is deprecated. Please use `reject` instead.
I think this is a bug. The fingerprint is not used for geometries.
I think this should be `prefetch_current_()` instead of `prefetch_current_` (no `*`)
I think this should be `void attach(String name, String filename, String contentType)`
This test is too slow. It should be moved to a separate class.
This is a bit confusing. I think it would be better to have a separate function for this.
I think we should return here. If the message is not map type, we should not process it.
This file should be removed.
I think this should be `config.sync.fullSynchronized !== undefined && config.sync.fullSynchronization === false && config.schema === undefined`
I think this is a good candidate for a `String.prototype.truncate` method.
This is a bit confusing. I think it would be better to say "Returns the sort order id of this file, which describes how the file is ordered."
This is not needed.
This is where we are checking the signature. We have to fix the v value if this is a private transaction.
This is a bit of a weird one. I'm not sure if we should be asserting here. I think it's possible for a validator to be called with an invalid image view. I think the right thing to do is to return false and let the caller handle the error.
I think this is a good candidate for a unit test.
This outputs the "address" of thescript
I think we should add a `description` here.
I think we can use `auto s = (__VA_ARGS__); if (!ok(s)) { if (spaceRet.left() == ResultCode::ERR_SPACE_NOT_FOUND) { LOG(INFO) << "Space " << spaceId << " does not exist, skip it."; return ResultCode::SUCCEEDED; } return error(s); }` directly.
Please remove the extra space before `کچھ`
This is a bit confusing. I think we should just say "We will be in touch with you before the workshop."
This is a bit of a hack, but it's the only way I could get the output to be unicode. I'm not sure if there's a better way to do this.
I think we should use `from sklearn.datasets import load_linnerud` here.
This is no longer used.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I'm not sure if this is the best way to do this. I'm not sure if there is a better way to do this.
This is the only change that I'm not sure about. I'm not sure if we should be using `axe.configure` on the `iframe.contentWindow` or `axe` directly. I'm not sure if we should be using `axe.configure` on the `iframe.contentWindow` or `axe` directly.
I think this is a bug. The multiStepBestPredictions is the correct inference element for anomaly detection.
I think this should be `final` as well.
Line is too long. [105/80]<br>Use the new Ruby 1.9 hash syntax.<br>Space inside { missing.<br>Space inside } missing.
> HeadResponseBodyNotWritten [](start = 12, length = 27) I'm not sure if this is a good name for this test. It's not really testing that the body is not written, it's testing that the body is not written when the response is a HEAD request. I think it would be better to name this test `HeadResponseBodyNotWrittenWhenRequestIsHead` or something similar.
I think this is a good change, but I'm not sure if we should add this to the `getHelperProperties` method. I think it would be better to have a separate method for this.
I think this should be `FeedFileDownloadStatusRequester` instead of `FeedFileDownloadStatusRequesterInterface`
This is the only change that I'm not sure about. I'm not sure if this is the right way to sort the images. I'm not sure if this is the right way to sort the images. I'm not sure if this is the right way to sort the images. I'm not sure if this is the right way to sort the images. I'm not sure if this is the right way to sort the images. I'm not sure if this
This is a public constant, so it should be in all caps.
I'm not sure if this is the right way to do this. I'm not sure if we should be throwing exceptions from the `StartAsync` method. I think we should be throwing exceptions from the `DoSend` method.
This import is unused.
I think this is the only place where we need to pass the block number.
I think this is the only place where we need to call `InitFSRepo` directly.
I think this should be `char * hiveTableName` instead of `char * hiveTableNameLen`
I think we should be able to remove the `getSimpleName()` calls here.
This is a bit of a hack, but it works. I'm not sure how to do this properly.
I think this should be `t.Fatalf` instead of `t.Fatal`
This is a bit of a hack, but it's the only way I can think of to get the test to fail. I'm not sure if there's a better way to do this.
I think this is not correct. The identifier is the name of the plugin, not the code.
This flag is no longer used.
nit: I think we should use relative imports here.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Please, use `context` package from `golang.org/x/net` instead of `context` from `golang.org/x/net/context`.
This test is not testing anything. It's just creating a model and then dropping it.
I think this is wrong. The formula is: `height_col = (height + 2 * pad_h - dilation_h * (kernel_h - 1)) / stride_h + 1`
I think this is a breaking change, but I'm not sure if it's a big deal.
I think this is a bit confusing. I think it would be better to say "Lint the role (dependency, lint, and test)."
I think this test should be named `Constructor_throws_when_capacity_is_negative` or something similar.
I think this should be `dynamo_exited_synced` (with an `i`)?
This is a bit of a nitpick, but I think it would be better to have this as `if (!event || !event.preventDefault) return` so that we don't have to worry about the `event` being `null` or `undefined` in the future.
I think this is not correct. If the repo is private, the user should have access to it.
I think we should keep these imports in alphabetical order.
This is no longer needed.
I'm not sure if this is the right place to do this. I think it should be done in the `input` and `change` event handlers.
I think we should be able to remove this line.
I think it's better to use `dal::preview::spmd` here.
I think this is a bug. The AQR should be enabled.
I think this is a bug. The regexp should be `=('[0-9A-Za-z,_-]+'),*|`
I think we should keep the alphabetical order here.
This is a bit of a hack, but it's the only way I can think of to get the MPI communicator from the Python object. I'm not sure if there's a better way to do this.
This is the only place we use the rust parser. I think it's fine to keep it here, but I'm not sure if we should move it to `internal/parser` or `internal/libflux`.
I think we should also check for `cmapi.CertificateOutputFormatPEMKey` here.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
I think this should be `k-NN brute force method is not implemented for CPU device`
This is a bit of a hack. We should be able to serialize the module after differentiation.
This import is unused.
I think this should be `override: bool = True` by default.
I think we should start the handler in `newAttachENIHandler` and not here.
This is the data store for the modules.
This is a bit of a hack, but it works. I'm not sure if there's a better way to do this.
I think this should be `a.Tag.String()` instead of `a.Tag`
This is the only place where we use the proto3 binary format. I think it's fine to use it here, but I'm not sure if we should use it everywhere else.
This is a bit weird. I'm not sure why we're ignoring the return value of `WriteTo`.
This is a bit of a hack, but it's the only way I could think of to make this work. I'm not sure if there's a better way to do this.
I think this is a breaking change. I think we should add a new field to the `Outbounds` struct and deprecate the `ServiceName` field.
I think this should be `receiveUpdates` (or `receiveUpdateEvents`) to match the other options.
I think this should be `this->Save(true);`
This is a bit of a weird test. It's not testing the block_get function, it's testing the tx_begin_write function. I'm not sure if this is a good test.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think we should keep the default value as 4.
Line is too long. [105/80]<br>Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
`Remove exist dir failed of checkpoint : ` -> `Remove exist dir failed of checkpoint : `
This is a bit confusing. I think it would be better to have a separate method for this.
Line is too long. [121/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
nit: I think this should be `createEmptyApiConfig` or something similar.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Nit: can you add a trailing comma here?
I'm not sure if this is the best way to do this. I'm not sure if we should be using the default preset or if we should be using our own. I'm not sure if we should be using the default preset or if we should be using our own. I'm not sure if we should be using the default preset or if we should be using our own. I'm not sure if we should be using the default preset or if
I think this should be `get("/session/:sessionId/chromium/heap_snapshot")` (without the `post`)
I think this should be `p => !p.IsConstant && !p.IsReadOnly && !p.IsRequired`
This is the only place where we use `kDepthStencilAttachmentRasterOrder` so I think we can remove it.
I'm not sure if this is the best way to do this. I'm not sure if there's a better way to do this.
I think this should be 256, since the runtime ID is a UUID.
I think this should be `debug` to match the default in the `logging` package.
I'm not sure if this is the right thing to do. I think we should probably just make `Put` return a channel that we can wait on, and then we can do the `Put` synchronously.
nit: I think we should use `rewritten-file-scan-task-set-ids` to be consistent with the other configs.
I think this is the right place to check for context cancellation.
This is a bit of a hack. I'm not sure if there's a better way to do this.
I'm not sure if this is the best way to do this. I'm not sure if we should be using a selector at all. I'm not sure if we should be using a selector at all. I'm not sure if we should be using a selector at all. I'm not sure if we should be using a selector at all. I'm not sure if we should be using a selector at all. I'm not sure if we should be using
This test is failing on Android. I'm not sure why.
I think it would be better to throw an exception here.
Skip this test on Windows. It's not a valid test on Windows.
nit: `Class<?>[] initializedClasses = javaClasses();` -> `Class<?>[] initializedClasses = javaClasses;`
I'm not sure if this is the right place to put this. I think it should be in the `install` method, but I'm not sure if it's necessary to export the path there.
I think we should return an error here.
This is a bit of a hack, but it's the only way I could get the roles to be found. I'm not sure if this is the best way to do this, but it works.
This test is now testing the wrong thing. The test is testing that the number of accounts in the result is correct. But the result is now the number of accounts in the result + the number of accounts in the result.
I think this is a bug. The timeout should be the same as the one used in the main thread.
This is a bit odd. We're testing that the env config is loaded, but we're not testing that the env config is correct. I think we should be testing that the env config is correct.
I think this should be `parameters.Length > 0`
I think this should be `return None` instead of `return job_id`
I think we should add a validation rule to ensure that if `UncompressedUserData` is set, `UserDataSecret` is not set.
I think this is the right value. The card is 100% width of the window, and the image is 50% of the card.
Freeze mutable objects assigned to frozen variables.
I think we should keep the original names here.
I think this should be `final` and the `null` should be removed.
I think this is the right approach, but I'm not sure if we should be using `STEP_SKIPPED` here or `STEP_UP_FOR_RETRY`. I think we should be using `STEP_UP_FOR_RETRY` because that's the event that will be emitted when a step is skipped due to a retry.
This is a marker interface. It is used to identify the parameters in the view model.
This should be `ERROR_LEVEL = 0`
I think this should be `ivLength != 16 && ivLength != 32`
why not just use `fetcher.AddSourceBlocks(calcGenBlk, calcGenBlk)`?
This is not needed. The process is already null.
I think this should be an error.
I think this should be `addRequestId: false` by default.
Nit: I think we should use `com.google.common.collect.ImmutableSet` instead of `com.google.common.collect.ImmutableList` here.
nit: please remove this empty line
I think this should be `true` by default.
I think this should be `prometheus-config-reloader-reload` to be consistent with the other binaries.
I think this should be `TaskType.GGA_OPT` and `TaskType.GGA_UNIFORM` instead of `TaskType.GGA_OPT` and `TaskType.GGA_OPT`
I think this should be `>=` instead of `<`
I think this should be `Encryption *SecretEncryptionSpec` to match the type of the field in the struct.
This import is unused.
I think this is a good idea, but I'm not sure if we should be doing this in the `AfterEach` cleanup. I think it's better to do this in the `It` that created the pod, so that we can be sure that the pod is cleaned up even if the test fails.
I think this should be `aws_sts_endpoint` instead of `aws_endpoint`
typo: "just a single columnm." -> "just a single column."
Please avoid using wildcard imports.
I think this should be `ApiExecutionError` instead of `ApiInitializationError`
Refreshed [hive.test.db.test_table]
I think this should be "overlapping lease" not "overlapping leases"
I think this is a good idea, but I'm not sure if we should do it in the detachedClone function. I think it would be better to do it in the `render` function, so that we can avoid the overhead of cloning the vnode if we don't need to.
I think this should be `SalesforceSDKManager.getInstance().isDarkTheme(getActivity())` instead of `SalesforceSDKManager.getInstance().isDarkTheme(getActivity())`
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we can remove this line.
I think we can use `ManualResetEvent` here.
I think this is a good change, but I'm not sure if we should be passing an empty object here. I think we should be passing the default options.
I think we should keep the default value here.
This file is not used anymore.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
nit: I think we should use `TimeSpan.FromSeconds(pushIntervalInSecs)` here.
I think this should be `minimize` (not `miniimize`)
f'Invalid flipping direction "{direction}"'
I think this is the only place where we need to check for array.
I think this should be `if c.Wireguard.EncryptHostTraffic && c.Wireguard.MTU == 0`
This is a bit of a hack, but it's the only way I could think of to get the LCCN from the first call number.
I think this should be `private` and not `public`.
reverse (bool): Reverse the order of planes in layer sequence. False for ResNet, True for Houglass. Default: False
I'm not sure if this is a breaking change. I'm not sure if we should be using internal types in public APIs.
This file is not needed.
I think this test is too slow. I'd suggest to use a random time instead of `time.Now()` and check that the result is within the expected range.
I think this is a good idea, but I'm not sure it's necessary. I think we can just use the `filesToIgnore` map as-is, and then in `processNotification` we can check if the notification is for a file that's in the map, and if so, ignore it.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
nit: `openFileCost` -> `openFileCostInBytes`
This is a bit of a hack, but it's the only way I could think of to get the `NotFoundError` to be raised. I'm not sure if there's a better way to do this.
Nit: I think we should use `FailedTagInternetGateway` as the event type.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why it's necessary, but it is.
This is a bit confusing. I think it would be better to say "in response header if the status is OK".
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
> hash_mask on weakly ordered arches. [](start = 45, length = 33) I'm not sure what this means.
I think this is a good change. I'm not sure why we were using `MarshalIndent` before.
This class is not used anymore.
I'm not sure if this is the right place for this. I'm not sure if we should have a `cliquet.events` module at all. I'm not sure if we should have a `cliquet.events.ResourceChanged` class. I'm not sure if we should have a `cliquet.events.ACTIONS` constant. I'm not sure if we should have a `cliquet.events.subscriber` decorator. I
I think this should be `c.Log.WithField("dir", dir).Errorf("Creating spire agent UDS directory: %v", err)`
This class is no longer abstract.
Please remove empty line.
I think this should be called in `onPause` and `onResume` instead of `onStart` and `onStop` to avoid the race condition.
I think this should be `color=Cycle()` instead of `color='black'`
> The functions gets the HttpContext, and should return a boolean. [](start = 10, length = 73) > If functions returns true, the request is collected. [](start = 10, length = 73) > If functions returns false, the request is filtered out. [](start = 10, length = 73) > If filter throws exception, then this is considered as no filter being configured. [](start =
I think this is a bit too much information. I think we should just have a `MessageLocation` class that has a `path` and `line` attribute.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
I think this should be `update_policy="incoming"`, not `update_policy="outgoing"`.
I think this is the right place to do this. We want to cleanup the syncs soup if it exists, but only if it exists. If it doesn't exist, then we don't want to create it.
I think we should remove this field.
I think this is the only place where we need to restore the original request.
This is a bit of a hack, but it's the only way I could think of to get the tabbar to close the tab. I'm not sure if there's a better way to do this.
I think this should be `log.info` as it's a useful message for users.
This test is wrong. It should be 4.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this is a good change, but I'm not sure if we should be using the same ID for agentless workloads. I think it's fine for now, but I'm not sure if we'll want to change it in the future.
This is a bit of a hack, but I don't think there's a better way to do this. I'm not sure if there's a way to get the language server to tell us what the file type is.
I think we should also copy the `SecurityGroupOverrides` and `TagSecurityGroups` from the restored cluster to the destination cluster.
I think this should be `isWP5_0+` (with an underscore) to match the other keys.
I think this is the only place where we need to do this.
I think we should use `implicit` and `pageLoad` as the keys for the timeouts.
I think this is a good change, but I'm not sure if it's the right place to do it. I think it's better to do it in `create-element.js` where we create the vnode.
I think this should be `c.msubs = opts.MaxSubs` instead of `c.msubs = opts.MaxSubs`
This method is not used anymore.
I think this is a bug. The `Locators` object is not supposed to be copied.
This is a bit of a hack, but it's the only way I can think of to get the alt key to work in the menubar.
I think this should be `if (toSearcher.getFilterCache().isAsync()) {`
I think this is a bug. We should not return a null future.
This interface is not used anywhere.
I think we should keep the field name `_runtimeDescription` to be consistent with the rest of the code.
I think we should keep the enum in alphabetical order.
I think this is not needed anymore.
I think this should be a bool.
I'm not sure if this is the best way to do this. I'm not sure if we should have a setting for each of these values, or if we should have a single setting for the entire object. I'm not sure if we should have a setting for the entire object, because then we'd have to do a lot of work to make sure that the values are valid. I'm not sure if we should have a setting for each of these values, because
I'm not sure if this is the right place for this interface. I think it should be in the `Microsoft.AspNetCore.Server.Kestrel.Http` namespace.
I think we should be able to use `require('../collection')` directly here.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this is a breaking change. I think we should keep the flag name as `github-url` and add a new flag `repo-url` for the new feature.
I think this is the only change that's needed to get the `paramcache` binary to be copied to the right place.
This is a bit dangerous, as it will reload all scripts, even if they are not loaded. I think it would be better to only reload the scripts that are loaded.
I think we should use `k8s.io/apimachinery/pkg/util/sets` instead of `k8s.io/utils/sets`
remove empty line
This is a bit of a hack, but it's the only way I could think of to make this work. I'm not sure if there's a better way to do this.
I think this is a typo.
I think this is a bug. `self[:2]` should return a `Column` object.
I think this is a bug. The method `Name.lowerCamel(String)` should be called with `Name.lowerCamel(apiTypeName)` instead of `Name.lowerCamel(lowerCamelApiTypeName)`.
I think this should be `user = "-"` to match the other cases.
I think we should also add the version to the `activity_task_scheduled` event.
I think we can pass the diskList as a comma separated string and then split it in the function.
I'm not sure if this is the right thing to do. I'm not sure if we should be using `Seek(0, 1)` here. I think we should be using `Seek(0, 0)` here.
I think we should just return the transport here.
I'm not sure if this is the best way to do this. I'm not sure if there's a better way to check if the process is running or not.
Please add a blank line after the `use` statements.
I think we should remove the `*` from the beginning of the line.
I think this is wrong. The copyright is only for the code that was written by CERN. The rest of the code is under the MIT license.
I think this should be 5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
I think this is a bug. We should be writing the headers from the request to the response.
CStorPoolPhase is a CStorPool phase.
I think we should use the `import` syntax here.
Nit: extra newline
I think this should be `False` by default.
This is a bit of a hack, but it's the only way I could get the `id` of the object. I'm not sure if there's a better way to do this.
`claimFromRewardingFund` -> `ClaimFromRewardingFund`
remove this interface?
Use if-elsif-end instead of multiple ifs.
I think this is the only place where we use `api` as a package name. I'm not sure if we should rename it to `osconfig` everywhere.
This is a debug statement.
This is the address that will be used to sign blocks. It is not the address that will be used to pay for storage.
This is the only place where we set the entity on the row. I think it's better to set it in the `getRow` function.
I think this is the right thing to do. If we can't get the config, we can't do anything.
This file is not used.
This is a bit weird, but it's the only way to make it work.
I think this should be `reacher.RetryAfter` instead of `*reacher.RetryAfter`
This parameter determines the time range the listen search. Each increment of the time_range corresponds to a range of 5 days and the default time_range of 3 means that 15 days will be searched. Default: :data:`~webserver.views.api.DEFAULT_TIME_RANGE` . Max: :data:`~webserver.views.api.MAX_TIME_RANGE`
nit: I think we should use the same name for the flag as the parameter name.
This is a bit confusing. I think it would be better to just remove this line.
This should be a docstring for the class.
This is not needed anymore.
I think this should be `if err == nil && res.Status != keybase1.BlockStatus_ARCHIVED`
This is a new feature, so we should add it to the list of features in `src/features.js`.
I think this should be `from boto.compat import OrderedDict`
This is a no-op on Linux.
I think this should be `AlwaysOffSampler` (without the `Activity` part)
This is a bit of a hack, but it's the only way I could think of to get this to work. I'm not sure if there's a better way to do this.
nit: I think this test is missing a `self.assertEqual` or similar.
I think this should be `sprintf` instead of `sprintf`
I'm not sure if this is the right place to put this. I think it should be in the `PodTemplateSpec` of the `Deployment` that is created for the `Challenge`.
Please remove unused `use` statements.
Style/MutableConstant: Freeze mutable objects assigned to constants.
Please remove this empty line.
I'm not sure if this is the best way to do this, but it seems to work. I'm not sure if there's a better way to do this.
This is a bit of a nit, but I think it would be better to say "We do case-insensitive match here to cover the MongoDB's `lowercaseFields` option."
This is a bit of a hack, but it's the only way I can think of to get the select query to be evaluated before the where query. I'm not sure if there's a better way to do this.
This import is unused.
I think this should be `PredecessorBlockDeviceCPK` instead of `PredecessorCStorPoolInstanceCPK`
I think this is a good change. I'm not sure why we were checking the z-index.
I think this is a good change, but I'm not sure if we should be doing this in the `sync` function. I think it's better to do this in the `sync` function, but I'm not sure if we should be doing this in the `sync` function. I think it's better to do this in the `sync` function, but I'm not sure if we should be doing this in the `sync` function. I think it
I think this is a good change. I'm not sure if we should rename the method though. I think it's a bit confusing to have a method called `configure` that does not actually configure anything. I think it would be better to rename it to `setup_rvm` or something like that.
This is a bit of a hack, but it's the only way I could get the upload to work. I'm not sure why the upload fails, but it does. I'm not sure if it's a bug in the library or if it's a bug in the server.
This is not needed.
I think this is a false positive.
This is a bit of a nitpick, but I think it would be better to use `instanceof` here.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
nit: this is a bit confusing, since `idToConstant` is only used if `projectsIdentityPartitionColumns` is true. I would suggest to move the `if` statement inside the `constantsMap` method.
why not use proto directly?
I think this is a bit misleading. The error is not unexpected, it's just that we don't know how to handle it.
I think this is the only place where we need to fetch the config.
This is the row position in the page. It is used to determine the row position in the page when the page is advanced.
Missing space after comma.
This is a bit of a nitpick, but I think it would be better to use `'` instead of `"` here.
I think this should be `public final Type type;`
This is a mock service that does nothing.
This is the version of the library. It should be updated when you release a new version.
I think this should be `d.used != 0` (no need for atomic).
I think we should add a default value here.
The flag could not be read -> The flag could not be read.
This is a change in behavior. Before, if the message was not a dict, it would be set to None. Now, it will be set to the original value.
I think this is a typo.
This is a bit confusing. I think it would be better to have a `DigraphNode<E>` class and a `DigraphNode` class. The `DigraphNode` class would be a `DigraphNode<Object>`.
I think this should be `client-id` to be consistent with the other options.
I think we should use the term "pattern" here instead of "type" because we're not talking about the type of the app, but the pattern of the app.
This should be `Exception` instead of `\Exception`
I think this is a good change, but I'm not sure if it's worth it. I'm not sure if we're going to see a lot of `application/xhtml+xml` in the wild. I'm not sure if it's worth it to change the behavior of the app for that.
nit: I think we should add a `commit` method to this interface.
I think this should be `Canceling connection initiation`
This is the function that creates the component that is used when the module is not activated.
I think this should be `uint32` as well.
This is a bit of a hack, but it's the only way I could think of to get the remote host to be set. I'm not sure if there's a better way to do this.
I think this is a bit confusing. I think it would be better to say "Loglevel overrides loglevel-driver and loglevel-on-instance and sets the same level for both on-instance and driver logging"
I'm not sure if this is the right way to do this. I'm not sure if the `exec` is necessary. I'm not sure if the `9` is necessary. I'm not sure if the `1` is necessary. I'm not sure if the `>` is necessary. I'm not sure if the `(` is necessary. I'm not sure if the `)` is necessary. I'm not sure if the `2>&
This is a breaking change. I'm not sure if it's worth it.
This is a bit weird. I'd expect the type to be `*DiskLimiter` or `DiskLimiter` (without the `*`).
I think this is the only place where we need to check for `oldVNode._hydrateDom` and `oldVNode._hydrating`
This import is unused.
This file should be in `aws_test` package.
This is not needed. The mutex is already locked in the constructor.
typo: chanel -> channel
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why `NextBlock` doesn't work here.
I think this should be a debug log.
I think this is the reason why the test failed.
I think this is the only place where we are using `err` instead of `errUpdate`
nit: I think we should use `com.google.api.tools.framework.model.Model` instead of `com.google.api.tools.framework.model.Field` here.
I think this is a breaking change. I think we should keep the old method name.
I think this is a bit confusing. The passed in Executor is used by LRUQueryCache to perform asynchronous query caching. The passed in Executor will also be used by LRUQueryCache to perform asynchronous query caching. If a task is rejected by the host Executor, the failed task will then be executed on the caller thread. This is done to ensure that a query succeeds, albeit with a higher latency. If a user wishes to modify the said behaviour, they can
I'm not sure if this is a good idea. It's not a problem for the user, but it's a problem for us. We're going to have to figure out how to get rid of this.
I think this is a bug. We should not set the backoff type to cron if the initiator is unspecified.
I think this is a duplicate of the line above.
I think we should be able to remove this file now.
This is a public API, so it should be in `ponyapi.h`.
`r.filter_ref().has_value()` is redundant, you can just use `r.filter_ref()` directly.
I think this should be `db` instead of `source`
I think we should remove these headers. They are not needed.
This class is not used.
I think this is too long. I think we should be able to get the stream info in less than 2 seconds.
This link is broken.
This is a bit of a weird name. I'd prefer `NewParserWithBuiltins` or something.
I think we should use `useDispatch` here instead of `useSelect` to avoid unnecessary re-renders.
This is a bit of a nit, but I think it would be better to say "upstream must map to a single address" instead of "upstream must map to only one address".
This is a good catch. I think we should also check for `JSONArray` here.
I think this should be `Type: ECSIPAMPluginName` (without the `ECSIPAMPluginName` string)
This is a bit of a hack, but it's the only way to get the timestamp in the block header. I'm not sure if there's a better way to do this.
I think this should be a constant.
This test is flaky. It should be skipped.
I think it would be better to have these as separate settings, so that they can be changed independently.
This is the only change that I think is necessary. The rest of the changes are just cleanup.
I think this is a bug fix. The previous code was using the wrong method list.
I think this should be `queryID` (lowercase) to match the other params.
I think this should be `NewKeeper(ByteKey("very secret secret"))`
This file is only used on .NET 4.6.1.
This test is no longer relevant.
This is not needed.
Please remove this empty line.
nit: I think we should add a TODO here to remove this TODO when we have the configmap support.
This is a bit of a nitpick, but I think it would be better to use `g_return_val_if_fail (name != NULL, FALSE);` here.
I think this is a good idea, but I'm not sure if we should do it this way. I think it's better to have a rake task that runs this code. This way we can run it whenever we want, and we can also run it in the test environment. I think it's better to have a rake task that runs this code. This way we can run it whenever we want, and we can also run it in the test environment. I think
I think this is a good idea, but I'm not sure we should be waiting for 8 seconds here. I think we should be able to get away with 1 second.
I think this should be `types.BigInt` instead of `*big.Int`
I think this is not needed anymore.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should keep the `home#me` route for now. It's a bit confusing to have two routes for the same thing.
This is a bit of a nitpick, but I think it would be better to use `entry.getValue()` instead of `m.get(entry.getKey())`.
Please add a blank line after the summary.
Style/ClassCheck: Prefer self-assignment unless assignment is the result of a method call or you need to assign the return value of a method call.
I think this should be `new ViewLibraryPepInfo(key, null, null)`?
I think this should be `replaceNode === null` instead of `replaceNode === undefined`
This is not the same as the previous code. The previous code would return `UNKNOWN` if the country code was not found in the `FLAGS_WITH_IMAGE_FILE` array. The new code will return `false` if the country code is not found in the `FLAGS_WITH_IMAGE_FILE` array.
This is a mutable object, so we should not be making a copy of it.
This is a bit confusing. I would have expected `ASTMethodDeclarator` to be a `AbstractJavaNode` and `ASTMethodDeclaratorId` to be a `AbstractJavaAccessNode`.
I think this should be `query/circuitBreaker/memoryCircuitBreakerThreshold` to be consistent with the other circuit breaker settings.
This is the only change that I'm not sure about. I'm not sure if we should be using the first IPv4 address or the first IPv6 address. I think we should use the first IPv4 address, but I'm not sure.
I think this is a bit confusing. I think it would be better to say "If there is a transient failure, this method should not retry and return an error."
I think this is a good idea, but I'm not sure if we should use `this.id` here. I think we should use `this.id` for the `uppy-Dashboard-tab` and `uppy-Dashboard-panel` elements, but not for the `input` element. I think we should use a different ID for the `input` element.
I think this should be `scrollPixels = scrollPixels - self.footerHeight - self.scrollbarWidth;`
This import is unused.
This is a dialog, not a frame.
This is a breaking change.
why not just use `a.hasFoundationBonusExtension()` here?
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why `Object.keys(prim)` doesn't work.
I think this interface is not used anywhere.
I think this should be `bass` instead of `base`
I think this is the only query that needs to be changed. The rest of the queries are fine.
This is a bit confusing. I would suggest to either: - remove the `else` and put the debug message in the `if err != nil` block - or to add a `utils.Debugf` in the `if err != nil` block, and remove the `else` block.
I think this is a leftover from the previous PR.
remove empty line
I think this should be `client_type = luigi.Parameter(default='insecure', description='Type of client to use. One of insecure, kerberos or token')`, right?
This is a 32-bit field, but the spec only defines 8 bits. Is this a bug?
I think we should use `null` here instead of `''` to avoid the `NotNull` validation.
This test is no longer relevant.
I think this is a good candidate for a switch statement.
Line is too long. [105/80]<br>Redundant `self` detected.
I think this should be `poppler_tools` or something like that.
This is not correct. It should return the hook object.
I think this should be `logger.info("Shutting down executor...");`
I think this is a bug. If you have a `buttonStyle` variant, you should not also have a `buttonStyles` variant.
I think this is not needed. The `self.base_class_path` is already absolute paths.
I think this is a typo.
I think this should be `TimeSpan.FromMilliseconds(_jsonRpcConfig.TracerTimeout)`
This is a breaking change. I think we should deprecate the old method and add a new one.
I think we should return `codes.Unimplemented` here.
I think this should be `DefaultRetryPolicy`
`default_space_sum` -> `default_space_number` `default_max_replica_factor` -> `default_max_replica_number`
I think this should be `if (feedUrl.contains("subscribeonandroid.com")) {`
I think we should use `errors` from the stdlib.
I think this is a good change. I'm not sure if it's worth it to add a new line for the `if` statement, but I'm not sure if it's worth it to remove it either.
I think this should be `false` instead of `true`
why change this?
Line is too long. [105/80]<br>Use 2 (not 3) spaces for indentation.<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `selfNS bool` instead of `selfNS string`
This is a good example of how to use the Kokkos::Tools::pushRegion and Kokkos::Tools::popRegion functions.
I think we should add a `// +k8s:openapi-gen=true` here.
I think this should be `self.assertItemsEqual(classifier.getPartitionIdPerPattern(), [433, 213, np.inf, 433, 413])`
@deads2k I'm not sure if this is the right way to do this. I'm not sure if the test is waiting for the controller to start or if it's waiting for the controller to finish. I'm not sure if this is the right way to do this. I'm not sure if the test is waiting for the controller to start or if it's waiting for the controller to finish.
Please remove the extra line.
I think this should be `block_processor_batch_max_size` and `block_processor_batch_max_time` should be `block_processor_batch_max_time` (no `batch_size` in the name).
This is not a typo, it's a feature.
Nit: Can we add a TODO here to remove the `DeleteStoragePool` function and replace it with `DeleteStoragePoolClaim` function?
This is a bit of a nit, but I think it would be better to call this `MockProvider` instead of `MockProviderImpl`.
I think this is a bug in the generated code. The `@Query` annotation should be removed from the `validationOfMethodParameters` method.
This is a bug in py2exe. It should be fixed in py2exe 0.11.1.0.
I think this should be `{debug,hooks,compat,test-utils,}/test/{browser,shared}/**.test.js` again.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit confusing. I think it would be better to use `wl_list_insert(&sibling->parent_pending_link, &subsurface->parent_pending_link);` instead.
I think this is the only place where we can return early.
I'm not sure if this is a good idea. I think it's better to have a separate test file for the table formatter.
I think this is a bug fix. If you have a column with a value in the first row, but no value in the second row, then `countCols` will be 1, but `countSourceCols` will be 0. So the `columnsMapper` will be empty.
This file demonstrates how to create an Amazon Simple Notification Services (SNS) subscription using the AWS SDK for Ruby.
I think this should be `neve-transparent-header` instead of `neve-tansparent-header`
reg_decoded_bbox: bool, whether to decode the regression bboxes.
This is the only place where we set the parent provider for the exporter.
This should be `message.error` instead of `log.error`
This is a bit confusing. I think it would be better to say "Azure ServiceBus supports at-least-once semantics in the default Peek-Lock mode; applications must call Message.Ack/Nack after processing a message, or it will be redelivered. However, it also supports a Receive-Delete mode, which essentially auto-acks a message when it is delivered, resulting in at-most-once semantics. See SubscriberOptions.Ack
I think this should be `return ""` if `hostname` is not found.
Metrics/LineLength: Line is too long. [115/120]<br>Metrics/CyclomaticComplexity: Cyclomatic complexity for num_answered_questions is too high. [7/6]<br>Metrics/PerceivedComplexity: Perceived complexity for num_answered_questions is too high. [8/7]<br>Metrics/MethodLength: Method has too
This is a bit of a hack. I'm not sure if this is the right thing to do. I'm not sure if we should be using the absolute path or the relative path. I think we should be using the relative path. I'm not sure if we should be using the absolute path or the relative path. I think we should be using the relative path. I'm not sure if we should be using the absolute path or the relative path. I think we should
I think this should be a `RuntimeWarning` instead of an `ImportWarning`
I think this should be `string(libkbfs.TLFTypeToPathType(t))`
I think this should be `return 0` if the function returns an error.
This is a boost header, so it should be included after the standard headers.
I think this is a bug fix. The first path is already added in the previous line.
I think we should keep the `v1beta1.GroupMemberPodSet` here, since it's the type we use in the API.
I think this is the fix.
`inputs` is not nullable.
This class is empty. Please remove it.
This is not needed.
This is a bit of a hack, but it's the only way I could think of to get the event hooks to be re-added after a reload.
This is not implemented for node.js.
nit: npl is too long, can we use npl for short?
I think this should be `True` by default.
I think this is the right thing to do. The sign in link is now in the header.
This is a pointer to a file handle.
This should be `return true;`
This is the version of the `quilt` package.
This file is auto-generated. Please do not modify.
This is a breaking change. I think we should have a test for the new behavior.
This is a bit of a hack, but it's the only way to get the sequence number to be set correctly. I'm not sure if there's a better way to do this.
typo: duraton -> duration
I'm not sure if this is the right way to do this. I'm not sure if `swift_type` is a `swift::Type` or a `swift::CanType`. I'm not sure if `swift_typebase` is a `swift::Type` or a `swift::TypeBase`. I'm not sure if `swift_type` and `swift_typebase` are the same thing. I'm not sure if `swift_
I think this is a good change. I'm not sure if we should have a separate queue for each worker, but I think it's a good idea to have a separate queue for each block retrieval type.
I think this should be `parsedArgs.put(argNameVal[0], "true");`
This test is failing because the `string.trim` function is not available in the row function. I think this is a bug in the test.
This is a bit of a hack. I'm not sure why the `al_comms` map is not cleared in `Finalize()`.
This is not needed anymore.
I think this should be `grpcStreamingDescriptors` instead of `grpcStreamingDescriptors` to match the other methods.
I think we should not import `affine_grid` here.
This is a bit of a weird place to put this. I'd rather have it in the `wlr_output_init` function.
I think this test is a bit too simple. It's not testing the actual stream modification, it's just testing that the script is loaded and that the script is run. I think it would be better to have a more complex script that actually modifies the stream.
This is the only place where we use `string.Format` with `CultureInfo.InvariantCulture`. I think it's better to use `string.Format(CultureInfo.InvariantCulture, ...)` instead of `string.Format(...)` to make it more obvious that we want to use invariant culture.
This is a false positive.
nit: please move this import group to the bottom of the file.
I think this should be `self.methods = []` instead of `None` to avoid `None` errors.
This parameter is required.
I think this should be `default` instead of `no-3rdparty` here.
I think this should be `SF_APP_FEATURE_CODE_USER_AUTH` (all caps) to match the other constants.
This is a bit of a hack, but it's the only way I could think of to get the autosens data from the plugin. I'm not sure if this is the best way to do it, but it works.
I think this should be `int` and not `int64` as the `max_payload` is an `int` in the spec.
This import is unused.
I'm not sure if this is the right thing to do here. I think we should probably error out if we see this field.
I think we should rename `confidences` to `scores` here.
This is a bit confusing, because the metric is called `PingTime`, but it's actually the time to connect. I'd suggest to rename it to `ConnectTime` or something like that.
This is a bit of a hack, but I don't see a better way to do this. I'm not sure how to use a generic container here.
I think this is a good change. I'm not sure if we should be doing this for all sha1s, but it seems like a good idea.
I'm not sure if this is the right thing to do here. I'm not sure if we should be waiting for the shutdown to complete before killing the process.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `oldVersion < 1070297`
I think this should be `CHAR` instead of `TEXT` as `TEXT` is not supported in MySQL.
This is a BC break.
I think we should be able to remove the `analytics` argument here.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `LogFactory.Configuration = LoadConfiguration(_originalFileName);`
I think this is not necessary.
aa: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
I think we should also check if the file exists.
I think this should be `public MetricPointsAccessor GetMetricPointsAccessor(bool includeDisposedInstruments)`
I'm not sure if this is the right way to do this. I'm not sure if we should be using `tabindex` at all.
I think this is the right thing to do, but I'm not sure why we're not doing it already.
I think we should also check for `options.directConnection` here.
I think this should be `googlesitekit.pageTitle.length > 0` instead of `googlesitekit.pageTitle && googlesitekit.pageTitle.length`
This is a bit of a hack, but it's the only way I could get the compiler to accept the code. I'm not sure if this is the best way to do this, but it works.
I think this should be `JToken` instead of `JObject`
This is the only place where we set defaults. I think it's fine to remove this.
I think we should keep the old flag name for backward compatibility.
The header lines look like:
This test is not needed anymore.
I think this is a good idea, but I'm not sure we should be using a struct for this. I think it's a bit of a code smell. I think we should just have a function that takes a `func(ServerStream) error` and returns a `func(transport.ServerStream) error`.
This is a public method, but it's not used outside of this class. Is it intended to be public?
This is a change in behavior. The old behavior was to return the first non-null value. The new behavior is to return the first non-null value, or null if all values are null.
I think this is not required.
I think we should add a validation to ensure that the prefix is not empty.
import org.apache.servicecomb.foundation.common.event.EventManager;
I think this should be called `Delay` instead of `Scale` to be consistent with the other functions.
I think this is not correct. `pser_or_pdf` is a `pd.Series` or `pd.DataFrame` and `input_groupnames` is a list of column names. So `input_groupnames` is a subset of `pser_or_pdf.index.names` and `pser_or_pdf.columns` is always empty.
Please add a space after the `if` and before the `(`
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
nit: `Objects.equal()` is a static method, so it should be called as `Objects.equal(spec, PartitionSpec.unpartitioned())`
I think this should be `include H2O::ACL::ACL` instead of `include H2O::ACL`
This is a bit of a hack, but I think it's the best we can do. I'm not sure how to get the name of the inner type without having a `ConfigType` instance.
This is a bit of a hack, but it's the only way I can think of to get the load address of a function. I'm not sure if there's a better way to do this.
This is a breaking change. I think we should keep the old behavior for now.
This is a change in behavior. The scalarBlockLayout feature is now enabled if the extension is enabled, regardless of the value of the scalarBlockLayout feature.
This is the only place where we use `sampleFuncParams`. I think it's better to move it to `InitCodeContext` and use it here.
I think this is not correct. `numeric_only` is used by `mean` and `var` to decide whether to use `sum` or `count` to calculate the result.
I think we should call this `copilot-task-group` to be consistent with the CLI.
Please add a space after the `Manage` word.
This is not a function call.
I think this should be false by default.
I think this is a bug. The comma is not ignored.
I think this should be `return 0;`
This is a bit of a hack, but I think it's the best we can do. I'm not sure how to get the `groupby` to raise an exception. I tried to catch the `KeyError` that it raises, but it seems to be swallowed by the `groupby` function.
This is a bit of a nitpick, but I think it's better to use `||` here. The reason is that `pthread_attr_setscope` is a function that returns an error code, and it's not clear from the code that it's a function that returns an error code. If you use `||`, it's clear that `pthread_attr_setscope` returns an error code.
This is a test class, so we can use a static variable to store the last created table.
I think this should be an error, not a warning.
This is a bit weird. I think it's better to put the include for `profiling.hpp` at the top of the file.
I think we should move these to the top of the file.
This is a bit of a weird pattern. I think it would be better to have a `from_input_def` method on `In` that takes an `InputDefinition` and returns an `In` object.
I think it would be better to use `app.name` and `app.version` here.
I think this interface is not needed anymore.
I'm not sure if this is a good idea. It's a bit of a leaky abstraction, but I'm not sure what else to do.
I think we should use `github.com/ethereum/go-ethereum/accounts/abi/bind` instead of `github.com/sonm-io/go-ethereum/accounts/abi/bind`
This is a BC break. The `call_user_func_array` was used to pass the array of filters to the `array_merge` function. Now it is not possible to pass an array of filters to the `array_merge` function.
I think we should keep the old keys for now, and add the new ones.
I think this is the right thing to do, but I'm not sure if we should be doing this for all ingress traffic or just for traffic that is going to a workload. I think we should only do this for traffic that is going to a workload.
I think we should use the `status` value here, and then use the `statusLabel` in the template.
I think this should be `write.location-provider.impl` (without the `location-provider.` prefix)
I think this should be `examples/cdn` again.
This is the only place where we call `onNewPasscode` on the webviewHelper. I think we should move this call to the `SPRequestHandler` class.
I think we should add a `registrationToken` parameter to this function.
This is not needed anymore.
I think we can use `self.file_client = mmcv.FileClient(**self.file_client_args)` in `__init__` directly.
I think this is the only place where we check for the existence of the startup script. I'm not sure if we should check for the existence of the startup script here. I think it's better to check for the existence of the startup script in the `createInstance` function.
I'm not sure if this is the right place to put this. I'm not sure if it's even the right place to put it at all. I'm not sure if it's even the right place to put it in the config file. I'm not sure if it's even the right place to put it in the config file at all. I'm not sure if it's even the right place to put it in the config file at all
I think this should be `args.Name != AssemblyName` instead of `args.Name != AssemblyName && args.Name.StartsWith("Datadog.Trace, Version=")`
I think this should be `func(Task) error`
typo: duraton -> duration
This line is too long.
This import is unused.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
nit: I think we should use `from typing import List` instead of `Collection` here.
I think we should use `github.com/libp2p/go-libp2p-peerstore` instead of `github.com/iotexproject/iotex-core/p2p/peerstore`
This is a breaking change. I'm not sure if we should have a new function for this.
I think this should be `safeDateFormat (date, { dateFormat, locale }) {`
I think it would be better to use `sprintf` here as well.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
why remove this?
I think this is a good change. I'm not sure if we should have a `Comparators.naturalComparator()` method, but I think it's a good idea.
This is a bit of a nitpick, but I think it's better to have the `return null` on its own line.
This is a bit of a hack, but it's the only way I could get the button to fill the entire width of the table. I'm not sure why it's necessary, but it works.
This is the only change that is needed to run the test on btc.
I think this should be in the openssl directory.
I think this should be `log.info` as it's a useful message for users.
I think we should remove this TODO.
I think we should keep the old field name for backward compatibility.
I think this should be `return nil, nil`
This is the only place where we append the ENI trunking capabilities. I think it's safe to remove this line.
I think this is a good change. I'm not sure if we should rename the field in the struct, though.
This is a bit confusing. It's not a boolean, it's an array of focusable elements.
I think we should add a scope for this.
I think this should be `if not self._predictedFieldName in self._input.keys()`
This is a bit of a hack, but it's the only way I could think of to avoid the race condition. I'm not sure if there's a better way to do this.
I think this should be `hPreferredName string` instead of `hPreferredName *string`.
I think this should be `Voucher *paych.SignedVoucher` (not `*VoucherInfo`)
I think this should be `public int FastSyncLag => (Current & SyncMode.Beam) == SyncMode.Beam ? SyncModeSelectorConstants.BeamSyncFastSyncLag : SyncModeSelectorConstants.NotBeamSyncFastSyncLag;`
I think we should use `getSQLDialect().getQuotedStringLiteral` here.
I think this should be `type=int` and `default=None` (or `default=init_default('bug_path_length')`)
This is a bit of a hack, but it's the only way I could think of to close the client. I'm not sure if there's a better way to do this.
I think we should return the environment that is specified in the request.
I think this should be `const` instead of `readonly static`
I think this is a bug. The `NormalizerConfigPass` should not depend on the `ControllerResolver` service. The `ControllerResolver` is only used by the `EasyAdminController` class, which is not used by the `NormalizerConfigPass`.
I think we should keep the `sprintf` call here, as it's more readable than the concatenation.
This is the only place where we call `updateContext` in the codebase. I think it's fine to rename it to `updateEthContext` here, but I'm not sure if we should rename it in the other places where it's called.
I think we should keep the default value here.
Use 2 (not 3) spaces for indentation.
This hook is used to detect when the component is in the viewport. It is used to lazy load the component.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit confusing. I think it would be better to explain what this is used for.
This is a bit of a hack. I'm not sure why we need to do this. I think it's because the FirstN node is not a Scan node. I think we should be able to get the scan node from the FirstN node. I'm not sure why we need to do this. I think it's because the FirstN node is not a Scan node. I think we should be able to get the scan node from the FirstN node.
This is the only change that is needed to make the blacklist work.
I'm not sure if this is the right place for this. It's not really a query, and it's not really a command. It's more like a helper function. I'd suggest moving it to `internal/util/changes.go` and making it a function there.
This is the only change that I'm not sure about. I'm not sure if we should kill the process here. I think it's better to let the user decide when to kill the process.
This is a bit of a hack, but I think it's the best we can do. I'm not sure how to get the `wheel` tool to be available to the `wheel_resolver` target. I'm not sure if it's possible to have a target depend on a target in a different package.
Please remove empty lines.
I think this should be `rtol` instead of `tolerance` to be consistent with the other `tolerance` parameters.
This is a marker interface. It is used to identify the methods in the view model.
This is the only change in the `db/seeds.rb` file.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this import is not needed anymore.
why change the method name?
This is a bit confusing. I think it would be better to just say "Hidepid is disabled" or "Hidepid is enabled".
This method is not used.
This is not needed anymore.
I think this should be `H2O_USE_EVENTFD` instead of `H2O_ASYNC_NOTIFY_USING_EVENTFD`
I'm not sure if this is the right fix. I think it's better to fix the issue in the progress element.
This is not needed anymore, since we always set the type in the file object.
I'm not sure if this is a good idea. I'm not sure if we should be exposing this to the view model. I think it's better to keep it internal.
This file is autogenerated via the builtin command.
This is a bit confusing. I think it would be better to say "Determines if an element is in the focus order, but would not be if its tabindex were unspecified."
I think this is a breaking change. I think we should keep the `operation` field and just remove the `handler` field.
I think this should be `KestrelMemoryPool.MinimumSegmentSize / 2` instead of `KestrelMemoryPool.MinimumSegmentSize / 4`
This is a temporary constant. It should be removed once the actors are updated to use the correct value.
I think this should be `getComputedStyle(actualNode, null).getPropertyValue('display')` (without the `window` prefix)
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this is a bug fix. I think the original query was incorrect.
I think this should be 2000 blocks.
I think this should be `t.Fee.IsZero()` instead of `t.Fee.IsZero() && t.Fee.IsZero()`
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
I'm not sure if this is the right thing to do. I'm not sure if we should be forcing release mode. I think we should be using the build style that was passed in.
Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
This is no longer needed since we're using the `ssh_nodes` variable.
I think this should be `UpdateMetadataWithLRU` or something like that.
This is a change in the number of arguments to the macro. I think this is a bug.
This is a bit confusing. I think it would be better to say "If the condition returns a promise, the polling loop will wait for it to be resolved and use the resolved value for evaluating whether the condition has been satisfied."
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why the `CLIENT_RANDOM` is not being logged.
I think it would be better to use `h2o_strtosize_fuzzy` here.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should keep the old `security_groups` argument for backwards compatibility.
This is a bit of a weird check. I'm not sure if it's correct or not. I'm not sure what the implications are of having a frontier of 0. I'm not sure if it's possible to have a frontier of 0. I'm not sure if it's possible to have a frontier of 0 with a non-zero end. I'm not sure if it's possible to have a frontier
I think this should be 11, right?
I think we should also mention that this port is used only when the Egress feature is enabled.
I think this is the only place where we can return an error.
Metrics/LineLength: Line is too long. [101/100]
Can you add a `min: 0` to these?
relative import should be used here
This is a breaking change. I think we should deprecate this enum and add a new one.
I think it would be better to use `h2o_buffer_reserve` here.
I think we should keep these pointers, so that we can distinguish between unset and empty.
This is a bit of a nit, but I think it's better to remove this line. It's not really useful information, and it's not really an error.
I think this should be `app.String("node-name", "localhost")` to avoid the `if` check.
I think this is not needed, as the media context is always set.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
nit: I think we should use `h2o_memis` instead of `strncasecmp` here.
I think this is a bug. The `addr_` should be included in the prompt.
I think this should be `OwnerUID *uint32` to match the `OwnerGID` below.
I think this should be `true` here.
I think this flag should be removed.
I think this is a bug. The default value should be false.
Nit: Please remove empty line.
This should be `RegisterGlobalOption` (singular).
I think this should be `h2o_linklist_t link;` instead.
I think this is not needed.
nit: move this line to the bottom of the list.
I think this is a bit confusing. I think it would be better to say "so they can be collected for lifecycle management, typically by a Dispatcher."
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is a bug in the test. The first NewRangeReader should be gcerrors.OK.
I think we should also set the proposalID in the `manager.currentProposal` here.
I think this is a bug. We should be using the max_ts here.
This is a bit of a nitpick, but I think it would be better to use `Objects.requireNonNullElseGet` here.
This is the only change I'm making to this file. I'm not sure if this is the right thing to do, but it seems to work.
I think this is not needed anymore.
I think this should be `r.HTTPResponse.StatusCode, r.RequestID`
This test case is no longer valid.
I think this is the only place where we need to pass the fd.
I think this is the default, but I'm not sure.
This is a good idea. I'll add it.
why not use "context" directly?
I think we should use `read.split.by-partition` instead of `read.split.by-partition` to avoid confusion.
This is the only place where we call `initPWMClocks`. I think it's fine to call it here, but I'm not sure if it's the best place. I'm not sure if we should call it in `initRTC` or `initI2C` or `initUART`. I'm not sure if we should call it in `main` or `init`. I'm not sure if we should call it in `
I think this is the mainnet endpoint.
I'm not sure if this is the best way to do this. I'm not sure if it's possible to use a variable in a stylesheet. I'm not sure if it's possible to use a variable in a stylesheet. I'm not sure if it's possible to use a variable in a stylesheet. I'm not sure if it's possible to use a variable in a stylesheet. I'm not sure if it's
I think this is not correct. If the pool spec is not stripe pool, it will return false.
This is a bug in the driver. We should fix it.
I think this should be `options.ignoreUndefined = this.s.options.ignoreUndefined || options.ignoreUndefined;` so that the user can override the default.
I'm not sure if this is the right way to do this. I'm not sure if we should be using the `Tracer.Instance` here. I think we should be using the `IScopeManager` instead.
This line is too long. [81/80]
I think this should be `ulong.MaxValue` instead of `ulong.MaxValue - 1` to match the `PowerOfTwoToHighByte` method.
Line is too long. [105/80]<br>Use the new Ruby 1.9 hash syntax.<br>Redundant `return` detected.
I think this is a good change, but I'm not sure if we should be more restrictive than this. I think we should be more restrictive than this, but I'm not sure if we should be more restrictive than this.
This test is failing because the `getStatusCode` method is not available on the `View` object. I think this is because the `View` object is not a `Response` object. I'm not sure how to fix this.
This file is part of the Google Cloud Client Libraries. See the COPYING file at the top-level directory of this distribution and at https://github.com/googleapis/google-cloud-java/blob/master/COPYING for licensing information.
I think it would be better to use `te::abs_error` here.
This is a bit of a hack, but it's the only way I could think of to get the classpath from the environment. I'm not sure if there's a better way to do this.
nit: space after `=`
I think we should add a TODO here to remove this once we have a better story for how to handle debug fields.
I think we should keep this as a config struct. It's not just a bool.
I think we should keep the dev0 version here. It's the one that will be used by pip.
I think this should be `upfront_shutdown_script_enabled` (without the `s`)
This is a bit of a nit, but I think it's better to use `inputPlan.Roots.Iter(func(root PlanNode) error {` here.
This is the only change that I'm not sure about. I think we should keep this, but maybe add a `className` to the `Grid` so we can style it differently when there is no footer text.
This check is not needed anymore.
@sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @s
This is a bit of a hack, but it seems to work. I'm not sure if there is a better way to do this.
This is a bit of a hack, but it's the only way I can think of to get the job id into the filename. I'm not sure if there's a better way to do this.
I think this should be `newContextWithTimeout` instead of `newContextForBackground`
I think this is a bug in the linter. It should be `import { Component, options } from 'preact';`
I think this should be a `DisplayMode` enum.
I think this is a bit too low. I think we should have a priority that is lower than the priority of the prefetch worker, but higher than the priority of the on-demand worker.
I think this should be `self._expands_user = question.expands_user` instead.
I think this line is not necessary.
I think this should be `assert.Equal(t, getClusterRegion(cd), cd.Labels[hivev1.HiveClusterRegionLabel], "incorrect cluster region label")`.
I'm not sure if this is a good idea. I'm not sure if we should be using namedtuple for this.
I think we should keep this as `true` for now. We can change it to `false` if we find a use case for it.
I think we should also check that the region is valid.
This should be `static exists(config) { }`
I'm not sure if this is the best way to do this. I'm not sure if we should be testing the shadow DOM at all. I'm not sure if we should be testing the shadow DOM at all. I'm not sure if we should be testing the shadow DOM at all. I'm not sure if we should be testing the shadow DOM at all. I'm not sure if we should be testing the shadow DOM at all. I'm not sure
I think we should use `imageBlurhashes` instead of `ImageBlurHashes` here.
This is a bit of a hack, but it's the only way I could get the tests to pass. I'm not sure why the mockBatchResponse isn't being returned for the `google-site-kit/v1/data/` request.
I think this should be `BuildRequired(svc interface{}) (bool, error)` and then you can call it with `BuildRequired(svc)`
This is a bit of a hack, but it's the only way I can think of to get the script to be able to observe the other scripts. I'm not sure if there's a better way to do this.
I think this should be `opmask_with_dsts(void)` (no `static`) and used in `internal_instr_disassemble` (and `internal_instr_disassemble_raw`).
I think this should be `const { CleanWebpackPlugin } = require("clean-webpack-plugin");`
This should be a boolean.
Metrics/BlockLength: Block has too many lines. [31/25]<br>Metrics/LineLength: Line is too long. [105/100]<br>Metrics/CyclomaticComplexity: Cyclomatic complexity for process is too high. [10/6]<br>Metrics/PerceivedComplexity: Perceived complexity for process is too high. [10/
I think this should be `http.SetCookie(w, cookie)` instead of `http.SetCookie(w, cookies[0])`
I think this is a bug. I think we should be able to get the same number of fields back as we requested.
nit: remove empty line
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be false by default.
I think we should use `notifyStop` here.
This is the only place where we start the server and then stop it. I think we should keep it here.
`make sure the key is in ordered` -> `make sure the key is ordered`
Nit: I think this should be `forseti-server-allow-grpc-internal-network` to be consistent with the other firewall rule names.
This is a bit of a hack, but it's the only way I could get the transaction to work. I'm not sure why it's not working, but I'm not sure what else to do.
This is the only place where `orphanBlock` is used. It's not necessary to set it to `null` here.
`folly::to<std::string>` is not needed.
I think this is the only place where we need to check if logrus was initialized.
This is the patch for the latest version of stepfunctions-local. Is this the right patch?
I think this should be `return nil` and not `return nil, nil`
This is a bit confusing. It's not an action, it's a predicate.
I think this should be `False` by default.
I think this is a good question. I think it will be an instance of Dataverse, but I'm not sure. I'll have to think about it.
I think we should use `protoRWEncode` here as well.
I think this should be `select-follow -t` (with a space) to avoid conflicts with the `select-follow` command.
This is a bit of a hack, but it's the only way to get the score for the current document.
I think this is the only place where we need to check for `Paused` status.
This is wrong. The correct expression is `0.5 * h_rate[3]/domain->xprd`.
This is a fatal error, so we can't continue.
I think this should be `EXECUTOR_STOPPED` or `EXECUTOR_FAILED` or something like that. `EXECUTION_STOPPED` sounds like it's a flow status.
why not use the blockInterval in the roundCtx?
I think we can use `time.Second` instead of `1 * time.Second`
I think this is the only place where we set the url. I think we should remove the url parameter from this method and set it here.
I'm not sure if this is the best way to do this. I'm not sure if we should be using the `FORCE_USER_ID` env var in production. I'm not sure if we should be using the `FORCE_USER_ID` env var in development. I'm not sure if we should be using the `FORCE_USER_ID` env var in staging. I'm not sure if we should be using the `
This is the number of entries in the measstats table. It is used to allocate the measstats table. The number of entries in the measstats table is the number of measstats that can be stored in the measstats table. The number of measstats that can be stored in the measstats table is the number of measstats that can be stored in the measstats table.
I think this is a bug. The default profile should have an empty selector.
Style/RedundantSelfAssignment: Redundant self-assignment detected.
This is the only change I made to the test. I'm not sure why this was here in the first place.
I think this is the only place where we need to check for closed.
(style) line over 80 characters
This is a bit of a hack. I'm not sure if there's a better way to do this.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why the `between` method returns a `long` instead of an `int`.
I'm not sure about this. I'm not sure we should instrument the listener itself. I think it's better to instrument the `on_resource_changed` function, and then we can have a metric for the listener itself.
I'm not sure if this is the best name for this disk. I'm not sure if it's a good idea to have a disk with the same name as the importer disk. I'm not sure if it's a good idea to have a disk with the same name as the importer scratch disk. I'm not sure if it's a good idea to have a disk with the same name as the importer disk and the importer scratch disk.
I think this should be `CreateCounter<Int64>` instead of `CreateCounter<long>`
I think this is a bug. `s.s` is not defined.
I think this should be `fetch_partial_page_threshold` to be consistent with the other options.
I think we should also check if `feval` is a list.
why move this line?
I think this is a no-op, but it forces the migration mechanism to apply it and thus write the DB schema version info
I'm not sure if this is the best way to do this, but it seems to work. I'm not sure if we'll need to do this for other external dependencies, but I'm not sure how to do that either.
I think this should be `fetch_email_responses.select { |hsh| !hsh['primary'] && hsh['verified'] }.map { |response| response['email'] }.compact` to avoid the `return` statement.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit of a nitpick, but I think it would be better to use `from.getAbsolutePath()` here. `toPath()` returns a `Path` object, which is not necessarily a file path.
I think this is not needed.
I'm not sure if this is the best priority for this. I'm not sure if it's better to have it at 90 or 100.
This is a bit of a hack, but it's the only way I could get the hash to match the old code. I'm not sure why the old code worked, but this is the only way I could get it to work.
This is a breaking change.
nit: I think it would be better to use the `forseti_home` variable here.
I think this should be `Environment.NewLine` instead.
I think we should not use global variable.
I think this should be `*darwin* | *freebsd* | *openbsd*` to be consistent with the other platforms.
This is a bit of a weird pattern. I'd prefer to see the `if err != nil` check first, and then the `if os.IsNotExist(err)` check.
I think this is a bug fix.
This should be `self.addButton = None` instead of `self.addButton = generalActions.addButton(self, label=_("&Install..."))` so that the button is not created when secure mode is enabled.
Style/MutableConstant: Freeze mutable objects assigned to constants.
remove this line
I think this is the only change that is needed.
This is a stub, not implemented.
I think we should also check for `e instanceof Error` here.
I think this should be `ImageDigest` instead of `ImageDigest`
This is a circular include.
why not return ErrNotExist directly?
Layout/ExpandPathArguments: Use expand_path instead of concatenation.
I'm not sure if this is the right thing to do. I'm not sure if we should be clipping the recordings at all. I think we should be able to handle the case where there are more than 1000 recordings. I think we should be able to handle the case where there are more than 1000 recordings. I think we should be able to handle the case where there are more than 1000 recordings.
I think this is a bug. We should be passing the prune mode here.
I think this should be `wherewasi == DR_WHERE_DISPATCH || wherewasi == DR_WHERE_APP` (or maybe `wherewasi == DR_WHERE_APP` is sufficient).
I think this should be `ApplyCors`
I think we should use `babel-loader` instead of `babel-jest` here.
I think this should be `addtransaction=False` by default.
I think this is not needed. The `setProperty` will set the value to the dom.
I think this should be `Done` as well.
This is a breaking change. I think we should keep the old value for now.
I think we should use the same precision and scale for both Hive and Impala.
I think this should be `playerTradeItem` and `tradePartnerItem` instead of `tradeItem1` and `tradeItem2`
I think this should be `Debug` level.
This is a change in behavior. The feed URL is now a constant.
I think this is a bug. The `varReference` method is used to generate the name of a variable that is used to store the value of the entity. In this case, the value of the entity is the name of the variable. So, I think we should use the `localVarName` method here.
I think this is a bug. If the flag is disabled, then the address should be checked for the limit.
This test is now testing that we can't write to the ApplicationData folder. I think that's a good thing. But I'm not sure that this test is testing the right thing. I think it's testing that we can't write to the ApplicationData folder, but I think we should be testing that we can't write to the ApplicationData folder when we're running as a service. I think we should be testing that we can't write to the
I think this is a bit confusing. It's not doing nothing, it's just tracking how many times it's called.
I think this is a bug. The `strncpy` call is not needed.
This is an incomplete classpath, report the missing class
I think we should use `chain-id` instead of `chainID` for consistency with other commands.
I think we should not add YolactHead to __all__, since it is not a head.
This class is not final anymore. Is it still immutable?
This method should be removed.
I'm not sure if this is a good name. It's a single pointer, but it's not a single value.
This is not needed anymore, since the heap is always initialized with the source node.
why move this line?
Prefer Date or Time over Time.now.<br>Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should keep the version check here.
I think this should be `//go:generate wire` instead of `//go:generate wiregen`
I think this should be `mayactl snapshot list` instead of `mayactl snapshot list [options]`
I think this should be `PATH_TO_FILE` instead of `PATH_TO_FOLDER`
I think this should be `AddPeerErr` as well.
This is an internal parameter.
I think this is the only place where we need to use `$(hostname)` instead of `%s` because the `hostname` is not a variable.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a typo.
I think this should be `OpenVPNPort` (capital V)
I'm not sure if this is the right way to do this. I'm not sure if we should be logging the entire violation_data object.
I think this should be `base64.b64encode('%s:%s' % (parsed_url.username, parsed_url.password)).decode('utf-8')` to get a string.
Metrics/LineLength: Line is too long. [105/120]
This is a bit weird. I think it's better to keep the `&&` and just remove the `return` statement.
I think this should be `R_AS_INT(data_idx)` instead of `R_GET_PTR(data_idx)`?
Please add a space after the `=`
I think this is the only place where we're using `GinkgoWriter` directly. I'm not sure if we should be using `GinkgoWriter` directly or if we should be using `utils.Infof` instead. I'm not sure if we should be using `GinkgoWriter` directly or if we should be using `utils.Infof` instead.
I think this should be `fmt.Errorf("%v:%s", err, stderr.String())`
I think this is the right fix. I'm not sure why we were checking for rootless in the first place.
I think we should be using `wp.element` instead of `@wordpress/element` here.
I think this is a bit of a hack, but it works. I'm not sure if there's a better way to do this.
I think this should be `work_dir = './work_dirs/yolact_r101'`
I think we should not count the system log here.
I think this is the only place where we need to set hours to 0.
This is a shallow copy. We need to make a deep copy.
I think this should be `eth_coinbase` instead of `eth_coinbase`
I think we should use `getVendorPropertyName` here.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit of a hack, but it's the only way I could get it to work. I'm not sure if there's a better way to do this.
I think this is a bit of a misnomer. I think we should call this `ReferenceLoader` and `ReferenceSaver` instead.
I think this is a bug. We should always create a formatted init value view for repeated fields.
This is a bug fix.
I think this should be `VUID-vkCmdPipelineBarrier-srcStageMask-01173` instead.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why the `get_count()` method returns a `size_t` instead of a `std::int64_t`.
I think we should use the same URL for both location detectors.
I think this should be `end='\n'` to match the behavior of `logging.info` and `logging.warning`.
This is a bit of a hack, but I couldn't find a better way to do this.
This should be `Create a new message...`
I think we should use `context.Context` for the `closed` channel.
This is a non-blocking call. So, we don't need to wait for it to complete.
I'm not sure if this is a good idea. I think it's better to keep the explicit type here.
I think this is the only place where we use `zfs` directly. I'm not sure if we should change it to `bash` here.
This is a bit of a hack, but it's the only way I could find to click the save search button.
I think we should use the constant here.
I think we should use `azkaban.enable.quartz` instead of `enable.quartz` to be consistent with other azkaban properties.
I think we should be able to remove this.
I think this is the only place where we actually update the zip file. I'm not sure if we should do this here or in the `update_function_code` method. I think it's better to do it in the `update_function_code` method, because it's the only place where we actually update the zip file.
I think this should be `wp_enqueue_script('roots_plugins');`
I think we should use `getReference` here.
This should be a property.
nit: space after `if`
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be true.
I think we should use the default config here.
I think this should be `String` instead of `handleSingle`
This is a bit of a hack. I'm not sure how to get the writers from the writer. I'm not sure if this is the right way to do this.
why remove the check of executorAddress?
I think this is a bug. The stream is not nullptr, it is the default stream. So the second condition will always be true.
This is a bit of a hack, but it's the only way I could think of to handle this. I'm not sure if there's a better way to do this.
This is a bit of a hack, but it's the only way I can think of to make this work. I'm not sure if there's a better way to do this.
I think this is a bug. We should not count the use lane as an intersection.
I think we can use `kubeedge/edge/constants` instead of `kubeedge/cloud/constants`
This is a style nit, but I think it's better to use `if (1)` than `if (true)`.
I think this should be `return true` instead of `return false`
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think this is a bug fix. The previous code was not allowing underscores in the type name.
I think this should be a `debug` level log.
This is a breaking change. We should not be using `h` in this file.
I think this is a good idea, but I'm not sure if we should use `sleep` here. I think we should use `wait_until` instead.
I think we should also validate the namespace here.
Nit: I think we should use `test` as the env name for all tests.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `IOException` instead of `Exception`
Line is too long. [105/80]<br>Space inside { missing.<br>Space inside } missing.
Why remove this?
I think this is the only change that is needed to make this test pass.
I think it is better to use `DAL_CHECK_DOMAIN` macro instead of `DAL_CHECK_DOMAIN_COND`
This is a bit of a hack, but it's the only way I could get the roleText to be read out. I'm not sure why it's not being read out in the first place.
I think this should be `dots-vert` and `dots-horiz` respectively.
`CHECK(client);` -> `CHECK_NOTNULL(client);`
I think this is a bit too low. I'd say 1000 is a good value.
I think this should be "Note: A configured RequestLogger will not log HealthChecks."
This is a bit of a hack, but it's the only way I can think of to pass the target to the compiler.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is the only place where we use `logentry` struct. I think we can just use `string` type for `Msg` and `Level` fields.
This is a bit weird. I'd expect the lock to be unlocked in the `else` branch, but it's not. Is this intentional?
Unnecessary empty line detected.
I think this should be `NumSectors` or `Sectors` to be consistent with the rest of the codebase.
nit: can you remove this empty line?
I think this condition is not enough. You should also check that the property is a boolean.
This is a breaking change.
I think this should be `FLB_FILTER_ERROR` instead of `FLB_FILTER_NOTOUCH`
I'm not sure if this is the best way to do this, but it seems to work.
outputs[0].shape = torch.Size([1, 11, 340, 340]) outputs[1].shape = torch.Size([1, 11, 170, 170]) outputs[2].shape = torch.Size([1, 11, 84, 84])
I think this should be 8080.
`wal_->lastLogId()` may be less than `lastLogId`
Line is too long. [105/80]<br>Space inside { missing.<br>Space inside } missing.
remove this line?
This is not needed.
I think this is the only place where we set the liveliness. I think we should set it to the default value of the QoS.
I think we should keep the `sign_in` route here, since it's the default route for the devise gem.
I think this should be `batch_queue_mpi_batch` and `batch_queue_mpi_single` instead of `batch_queue_mpi` to avoid confusion with the `batch_queue_mpi` module.
I think this is the only place where we need this.
I think this is the only place where we use `w.Vars["instance_name"].Value` instead of `w.ID()`. I think we should use `w.ID()` everywhere.
I think this is a bug. We should not be setting `_component` on the vnode here.
Please add a license header to this file.
This is a bit ugly, but I don't know how to do it better.
I think this should be `ClusterInstallRef specified, skipping creation of ClusterInstall`
This test is now failing because the `Scorer` is now a `ConstantScoreScorer` and the `iterator` is now a `ConstantScoreDocIdSetIterator`.
I think this should be `hivev1.RunningClusterPowerState`
I think this is the only place where we need to check if we're rootless.
This is a bit of a hack, but it's the only way I can think of to get the replacer into the context. I'm not sure if there's a better way to do this.
I think this should be `positional=True` and the default should be `''` (empty string) so that it can be used as a positional parameter.
I'm not sure what this is for. I'm not sure if it's needed.
This is a breaking change. I think we should have a new method for this.
This is a breaking change.
I think this is not needed anymore.
why remove these?
This is a bit of a hack. We should be able to get the block tree to flush itself when it's ready.
This class is not used outside of this file. Can we make it internal?
This is a bit of a hack, but it's the only way I could get the tests to pass. I'm not sure why the pool isn't stopping on its own.
This is a Windows-specific header. Please remove it.
I think we should not expose this method.
This is a bit of a weird log message. I'm not sure what it's trying to say.
I think this should be `0x00000100` instead of `0x0000100` to be consistent with the other permissions.
Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
This is not needed anymore.
This class is not used outside of this file, so it should be `private`.
I think this should be `BuildRequired` as well.
This is a bit of a hack. I'm not sure if there is a better way to do this.
This is a bit of a hack, but it's the only way to avoid serializing the site object.
I think this should be called before the `new RestClientSender(invocation)` line.
I think this is a good change. I'm not sure why we were using a buffered channel here.
This is a test block, so the work is not correct.
I think this is a breaking change. I think we should keep the old syntax.
I'm not sure about this one. I'd rather have a default value for the `log_format` option in the config file.
This is a bit of a hack, but it's the only way I could find to get the systemdsystemgeneratordir variable into the Makefile.am. I'm not sure if there's a better way to do this.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
This is the correct way to determine the size of a signed message on chain.
This file is only used on Linux.
I think this is a good idea. I'm not sure if we should do this in the `get_package_registry` function, or if we should do it in the `PackageRegistry` class. I think it's better to do it in the `PackageRegistry` class, because it's the only place where we know what the registry is.
I think this debug message should be removed.
Layout/SpaceInsideHashLiteralBraces: Space inside { missing.<br>Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
I think this is the only place where we use `workingDir` variable. It's not used anywhere else. So, I think we can just use `workspaceRootDirectory` here.
This is a no-op, right?
This is a bitmask, so it should be an int.
I think this is not necessary. The `exflow` is already a unique object.
I think this should be `The merged cell declared at [${newMergedCell.row}, ${newMergedCell.col}] overlaps with the other declared merged cell. The overlapping merged cell was not added to the table, please fix your setup.`
I think this should be `--java-primitive-has-method` (with dashes) to be consistent with the other options.
I think we should make this configurable.
This import is unused.
I think this should be `MaxIPSetSize int` (not `MaxIPSetSize int32`)
This is a change in behavior. The previous version would return a pointer to the original string if the new string couldn't be allocated. This version will return NULL.
why remove these checks?
This method should be called `getEditedProducts`
I think this is the only place where we need to check for `ContentLength == -1` (and not `ContentLength == 0`).
I think this is a bug fix.
This function is not used anywhere.
I think this should be `readonly`
This method should be called before any invocation of Write().
Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
I think this should be 41.
I think we should keep `sql` in `__all__` as well.
This function can return null, but it's not annotated as such.
This is a bit weird, but I think it's the only way to get the unlink checkbox to work.
I think this is a bug. If the value is not an integer, it should be None.
I'm not sure if this is a good idea. I'm not sure if we should be using strings for this.
I think this should be `awsPath` instead of `computePath`
I think this is the only place where we need to use the primaryPivotFacet. I think we can remove the primaryPivotFacet and just use the masterPivotFacet.
Please add a comma after the last item in the list.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Block has too many lines. [30/25]<br>Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `protected MvxIosSetup(IMvxApplicationDelegate applicationDelegate, UIWindow window, IMvxIosViewPresenter presenter) : base(applicationDelegate, window)`
I think this is a bug in the test. The test is comparing the output of a pandas plot with the output of a kdf plot. The test should be comparing the output of a pandas plot with the output of a kdf plot.
Line is too long. [105/80]<br>Use the new Ruby 1.9 hash syntax.
I think this is a breaking change. I think we should add a new method `build_rule_book_with_global_configs` and deprecate the old one.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should add a validation here to ensure that the value is one of the three options.
I think this should be `listen['track_metadata']['additional_info']['duration_ms'] / 1000` instead of `listen['track_metadata']['additional_info']['duration_ms'] // 1000`
I think this is a bug. If `startAfter` is set, we should always use `startAfter` as the resume key.
I'm not sure if this is the right way to calculate the size of a `bool[]` array. I'm not sure if the `sizeof(long)` is the right value. I'm not sure if the `arrayOverhead` is the right value. I'm not sure if the `4` is the right value. I'm not sure if the `refSize` is the right value. I'm not sure if the `Path.Length`
I think this is a good change, but I'm not sure if we should be removing all whitespace from the API key. I think we should only be removing whitespace from the beginning and end of the string.
This is a bit of a hack, but it's the only way I can think of to get the pattern to match both `java.exe` and `java`. I'm not sure if there's a better way to do this.
This is a bit of a hack. We should be able to get the hiveConf from the metastore.
I think this should be `cudaStream_t s = cuda_get_deep_copy_stream(instance);`
I think this is a typo.
I'm not sure if this is the best way to do this. I'm not sure if we should be using media queries for this. I'm not sure if we should be using `googlesitekit-button-icon--phone` as a class name. I'm not sure if we should be using `googlesitekit-border-radius-round--phone` as a class name. I'm not sure if we should be using `go
I think we should use the nonce from the blockchain bridge here.
I think this should be `[]string` instead of `string`
This is a bit of a weird test. I think it's testing that the session ID is passed to the sender, but it's not testing that the session ID is used to destroy the session. I think it's better to test that the session ID is used to destroy the session.
This is the only change I made to the code. I think it's a good change, but I'm not sure if it's a good idea to change the default config path. I think it's better to leave it as is and just make sure that the config path is set correctly.
I think this should be `if (K9.isQuietTime() && !K9.getQuietTimeNotificationEnabled()) {`
This is a good example of how `filter` can be used to remove elements from a `Queue`.
I think this is a good example of a lambda that does nothing. I'm not sure if we should have a "hello world" lambda in the repo.
This is the only change that I made to the test. I'm not sure why it was logging to the console before, but it wasn't doing anything with the result.
This is a bit of a hack, but it's the only way I could think of to get the query string out of the `Query` object.
why not use `RunActions` here?
I think this error message is a bit misleading. It's not that we can't unmarshal the count field, it's that we can't unmarshal it into a task count or an auto scaling config.
This is a bit of a hack. I'm not sure how to do this properly.
This is a test case, so it's fine to use the double quotes.
I think this is the only place where we need to wait for the cache to sync.
This file is covered by the GNU General Public License. See the file COPYING for more details.
This is a breaking change. We should probably have a flag to enable this.
This class assumes the id field for your documents is called 'id' - if this is not the case, you must set the right name with {@link #setIdField(String)}.
I think this should be `PingTarget(params Params) (*net.UDPConn, error)`
This is a bit of a hack, but it's the only way I could think of to get the method name for the streaming method. I'm not sure if there's a better way to do this.
I think this should be `processHelper.GetCurrentProcessId()` instead of `processHelper.GetCurrentProcessId()`?
Please don't use wildcard imports.
I think this is a breaking change.
I think this should be `While resolving function '{0}'` (no `follwing`)
I think this should be "Account to be used by the node for network communication (enode), to be loaded from keystore or provided as a password."
I'm not sure if this is the right place to put this. I'm not sure if we should be adding new values to the enum in the middle of the list.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit of a weird one. I think it's fine to change it, but I'm not sure why it was changed.
These includes are not needed.
Please move this file to the `internal` directory.
Nit: I think we should be able to remove this file.
I think this should be 1/4.
I think this should be `LOG(THREAD, LOG_INTERP, 3, "Detected AVX-512 code in use\n");`
I think we should keep these tests. They are useful to ensure that the SDK is able to handle the different types of histograms.
I think this should be `IDistributedTracer` instead of `IAutomaticTracer`
I think this is the only place where we need to add the domain filter.
typo: "Filed" -> "Failed"
This is the command buffer that was submitted with the barrier.
I think this is a bit of a hack. I'm not sure if there's a better way to do this.
I think we should keep the `BatchSize` field here.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is no longer needed, since we now use the `spark-submit` command to run the pyspark program.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should use `CorrelationIdentifier.TraceIdKey` and `CorrelationIdentifier.SpanIdKey` here.
I think this should be `L1StandardBridgeAddress` as well.
I'm not sure if this is the best way to do this. I'm not sure if there's a better way to do this.
This class is not used anywhere.
This is not implemented yet.
I'm not sure if this is the best way to do this. I'm not sure if we should have a single proxy preference and then have a proxy type preference that determines which proxy settings are used. I'm not sure if this is the best way to do this. I'm not sure if we should have a single proxy preference and then have a proxy type preference that determines which proxy settings are used.
I think this should be `v([a-z0-9]+);`.
I think this should be `PercpuUsageInKernelMode` and `PercpuUsageInUserMode` to match the other fields.
I think this import is unused.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `system_suspended=? AND principal_id=?`
Line is too long. [111/80]<br>Space missing after comma.
I think this is a good place to add the account scoping.
This is a bug fix. The HiveClient_JNI::deleteInstance() should be called here.
This is not used anymore.
I think we can remove this TODO.
I think this should be done after the `setupTunnelAndRunAgent` call, otherwise the agent will be ready before the tunnel is ready.
I think this is the only change that is not backward compatible.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `blob.Open("s3://mybucket?region=us-east-1")`
I think this is the only change that is needed. The rest is just to make the test pass.
please remove empty line
I think this should be "Lade hoch" (with a "d").
This is a formatting change, not a functional change.
This is a bit weird, but I think it's the only way to make sure that the API is always available.
I think this is a bit confusing. I'd rather have `/communities/en` and `/communities/fr` and so on.
This method is not used anywhere.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should use `pattern` and `replacement` as the names of the flags.
I'm not sure if this is the right place to put this. I'm not sure if it's even necessary.
I think this is the only place where we need to check for `ShareExtension` module.
I think this should be `self.dataset.dataset_id` instead of `self.dataset_id`
I think this is not the right way to do it. The join should be added only once. If you have a join in the `where` clause, you should add it in the `leftJoin` as well.
please use `github.com/iotexproject/iotex-core/address` instead of `github.com/iotexproject/iotex-address/address`
I think this is a good idea, but I'm not sure if it's the best way to do it. I think it would be better to have a function that takes the number of blocks and returns the fee threshold. That way, we can change the algorithm later if we want to.
I think this should be `zk-read` instead of `zk-admin-read`
I think this is a bit too much logic in the controller. I would suggest to move this logic to the `findBy` method of the `EntityManager` class.
I think this is a good change, but I'm not sure if we should rename the package to `openvpn` or `openvpn3` or something else. I think we should probably rename it to `openvpn3` to be consistent with the package name.
I think this should be `DEPLOYMENT_BLOCK_STARTED` instead of `DEPLOYMENT_BLOCK_RUNNING`
I think this should be `hivev1.RequirementsMetCondition` instead of `hivev1.RequirementsMetCondition` to match the other conditions.
This is a bit confusing. I think it would be better to say "Please make sure that the element exists on the page, or that the plugin you are targeting has been installed."
Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
I think we should use `read.locality.task.initialize.threads` as the config name.
This is a bit of a nitpick, but I think it's better to use `ORDER BY eventname, count(eventname) DESC` instead of `ORDER BY count(eventname) DESC, eventname`
Use 2 (not 1) spaces for indentation.
I think this is a bit of a hack. I'm not sure if it's worth it. I'm not sure if we should be doing this at all. I think it's better to just not mark ring bonds as stereogenic.
I think this is the only place where we use `Int.Uint64()` instead of `AsBigInt().Uint64()`?
why not use `input_buffer_.resize(splitInfoSize * 2)` directly?
This import is unused.
I think this is the right fix. The `ClusterState` class should be able to handle the `CLUSTER_STATE` format.
I think this is a race condition. If the client thread is created before dynamo_initialized is set, it will not be able to copy the TLS blocks.
I think this should be `glog.Errorf("Fake pod object could not be created: %s", err)`
I think we should use `jsonpatch.exceptions` instead of `jsonpatch.JsonPatchException` to be consistent with the rest of the code.
This file is not used anymore.
I think this should be `catchpointWriting bool` (without the `s`)
Please remove empty line.
@sureshanaparti this is the only place where we are not reconciling the spc.
nit: this should be in the `before` method, not the `after` method.
I think this is the only place where we need to use `AccountStateByHash160` instead of `AccountState`.
This is a bit confusing. I think it would be better to say "Presence of this file indicates the block has been successfully flushed to the server."
This is the only place where we set the caller. I think we should remove this and set it in the `Request` struct.
I think this should be `retry < 10` (or `retry <= 10`)?
trailing whitespace.
Line is too long. [105/80]<br>Use 2 (not 3) spaces for indentation.
I think this should be `ServiceAccountSelector` to be consistent with the other selectors.
This method is not used anymore.
Style/CollectionMethods: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit of a hack, but it's the only way I can think of to get rid of the text. I'm not sure if there's a better way to do this.
I think this should be `> 0.5` to be consistent with the other places.
Please, use relative import path.
Unused import statement.
I think this should be `greg Landrum` (no space)
nit: I think we should use `sh.Run` here.
I think this is the only place where we're using the `maxResults` parameter. I'm not sure if we should be using it everywhere. I think it's a good idea to use it everywhere, but I'm not sure if we should be using it everywhere.
I think this should be `PatternProperty` instead of `StringProperty`
Election erased for root 00000000000000000000000000000000000000000000000000000000000000000, confirmed: false
I'm not sure if we should be exposing the transport here. I think we should be able to get the transport from the connection features.
why do we need to pass a pointer here?
This is a bit of a hack, but it's the only way I could figure out how to store the metadata into the cache.
I think this is a bit too much. I think we should be able to get away with 10.
This is the only change that is needed to make this work on .NET Core.
import io.servicecomb.transport.rest.vertx.accesslog.impl.AccessLogHandlerImpl; import io.servicecomb.transport.rest.vertx.accesslog.parser.impl.DefaultAccessLogPatternParser; import io.servicecomb.transport.rest.vertx.accesslog.AccessLogConfiguration;
I think this is a bit of a hack. I'm not sure why we need to check for this attribute. I think we should be able to just check if the node is hidden or not.
I think this is a bug. The `crypter` struct is not exported, so this should be `crypter{}`
This is a bit of a weird case. The YCbCr extension is core in 1.1, but the `VK_IMAGE_ASPECT_PLANE_*` flags are not. So we need to check for the extension, but then also check for the flags.
This is the only change that I'm not sure about. I'm not sure if we should be using internal APIs. I'm not sure if we should be using internal APIs.
I'm not sure if this is the right place for this. I'm not sure if it's even used anywhere.
This is only possible for users with no associated resources.
This is a bit of a hack, but it works. I'm not sure how to do this better.
I'm not sure about this. I'm not sure we should mix the migrator and the permission backend. I think it's better to have a separate command for migrations.
I think this is a good change, but I'm not sure if we should be using the `HELLO` message here. I think we should be using the `LEGACY_HELLO` message, which is the same as the `HELLO` message, except that it has a `maxWireVersion` of 0. I think we should be using the `LEGACY_HELLO` message here, because we want to test
I think we should be able to remove this mock call.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Style/MutableConstant: Freeze mutable objects assigned to constants.
This is a bit of a hack, but it's the only way I could think of to get the class name into the message.
This is a bit of a hack, but it's the only way I could get the event listener to fire. I'm not sure why it's necessary, but it works.
I think this should be `if (body.getEncoding() == null || "8bit".equals(body.getEncoding())) {`
I think this should be a `CoreMessages.dialog_connection_edit_wizard_conn_conf_network_link` constant.
I think this should be `g.auth_header` instead of `g.auth_header`
I think this is a bug fix. The original code would have thrown an exception if the prefix length was longer than the string length.
This is a bit of a hack, but it's the only way I could think of to make the creature move at all when the step speed is 0.
Style/RedundantReturn: Redundant return detected.
I think this is a bug. If `attr_value['string']` is `None`, then `attr_value['string'] == value` will be `False` and the `if` will not be entered.
remove unused import.
I think we should not change this. It's not a typo.
This is a bit of a hack, but it's the only way I can think of to get the sparse representation to work. I'm not sure if there's a better way to do this.
I think this should be `if len(m.Bucketlist) > 0` instead.
I think this should be `\"` instead of `\'`
I think this should be `LowestInsertedHeader?.Number ?? 0` instead of `headNumber`
I think this should be `HIGH` as we want to be notified of any changes to the directory.
This is a bit of a nitpick, but I think we should use `Array.isArray` here.
I think this is the right thing to do. We should be able to get the ack floor from the state. If we can't, we should fall back to what we track internally.
Layout/SpaceInsideHashLiteralBraces: Space inside { missing.<br>Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
This is a bit of a hack, but it's the only way I can think of to get the replace-partitions flag into the snapshot.
I think this should be `EvaluateRange` to match the method name in the `metrics` package.
This is the wrong VUID. No VUIDs currently exist to require memory is bound (spec bug).
`reg_decoded_bbox` is deprecated and will be removed in a future release. Please use `reg_class_agnostic` instead.
I think this is a bug. I think we should be sending 2 messages.
I think this is the only place where we need to check for `self.wfile` being `None` before calling `self.wfile.flush()` and `self.wfile.close()`.
I think this is a good change, but I'm not sure if we should change all the tests to use `const` instead of `var`. I think it's a good practice, but I'm not sure if we should enforce it in all the tests.
nit: I think this should be `return RequestLineStatus.Done;`
please remove this line
Nit: please remove empty line
This method is not used anywhere.
This is a bit weird, but it's the only way to pass the `padded` argument to `StrLenField.__init__` without changing the signature of `StrLenField.__init__`.
This is a bit of a hack, but it's the only way I could think of to get the task arn and reason for each failure.
This is a bit of a hack, but it's the only way I can think of to get the UIAHandler to deregister the old events and register the new ones.
This is a bit of a hack, but it's the only way I could get it to work. I'm not sure why the original code didn't work.
This is a bit of a hack, but it's the only way I can think of to get the function to be parsed as a function and not as a function call. I'm not sure if there's a better way to do this.
I think this should be `double?` instead of `double` since it can be null.
This file is not needed on Windows.
I think this should be `matcher=None` by default.
I think this is a bug in the test. The test should be changed to `del vardel  # [undefined-variable]`
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `GroupMembers []GroupMember` (notice the `s`)
I think this should be `github.com/cihub/seelog/logger`
I'm not sure if this is the right fix. I think it's better to fix the issue in the axe-core package.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This import is unused.
I think this should be `yamllint: ('http://yamllint.readthedocs.io/en/stable/', None)`
remove empty line
Nit: I think this should be "No escaping required for metadata values."
I think we should use `ContentType` instead of `Content-Type` here.
This is a constant, so it should be `static final`.
I think this is wrong. The expires time is the time when the message should be removed from the queue. So if we add the current time to it, we will get a time in the future.
nit: I think we should use `k8serrors` in the rest of the file.
I think this should be `PUB <subject> <reply> <size>`
I think we should use `SecretTargetLogDriver` as the default value for `SecretTarget` in `Secret` struct.
I think this should be `if (authenticationPlugin != null && authenticationPlugin.plugin.getMetricRegistry() == null) {`
This is not a filter, so you should remove the `show_filter` option.
I'm not sure if this is the right name for this. It's not the target db for saves, it's the target db for writes. I'm not sure if we should rename it.
I think this should be `Tag string` instead of `Tag int`
I think this is the only place where we need to pass in the dependencies.
Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
I think this should be `bool IsEip3238Enabled { get; }`
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I'm not sure if this is the right way to do this. I'm not sure if we should be using rems or ems. I'm not sure if we should be using rems or ems. I'm not sure if we should be using rems or ems. I'm not sure if we should be using rems or ems. I'm not sure if we should be using rems or ems. I'm not sure
Unnecessary whitespace change.
I think this is a bit confusing. I think it would be better to say "Allows expiration of snapshots without cleanup of underlying manifest and data files."
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is the only place where we can use `Object.is` instead of `===` because we know that `hookState._value[0]` is always an object.
I think this should be `tuple` instead of `list`
I think you mean `@link` here.
I think this is a good idea, but I'm not sure if it's necessary. I think the `values` collection is immutable, so it should be safe to iterate over it without synchronization.
why not just return the error?
Nit: I think we should use `getOutpostARN` here.
This is a bit of a hack, but it's the only way I could get it to work.
I think this should be `getEpochLengthActivationBlock` (without the `a`)
This is not needed, `pushUserdata` will push nil if the id is invalid.
I think this is a bit confusing. The client is the daemon.
I think this should be moved to the top of the method.
This is a bit of a hack, but it's the only way I could think of to get the load status to update when the page is loaded. I'm not sure if there's a better way to do this.
I think this is a leftover from the previous PR.
I think this should be `de.danoeh.antennapod.core.glide.FastBlurTransformation` (without the space)
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should keep this as a constant, and not make it a variable.
I think this is a breaking change. I think we should just add a new field to the config struct.
This test is disabled because it requires a Thermo raw file.
I think this is the only place where we're using `h.Kubectl(certificate.Namespace).DescribeResource("certificate", name)` - can we remove it?
Line is too long. [81/80]<br>Use 2 (not 3) spaces for indentation.
This is a bit of a weird test. It's testing that the response is the same as the request. I think it's fine, but I'm not sure why we're doing this.
I think this is not necessary.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why the path needs to be formatted, but it does. I'm not sure if this is a bug in docker or something else.
This is a bit of a hack, but it's the only way I could think of to get the default param_visibilities to be set. I'm not sure if there's a better way to do this.
I think we should add a validation to ensure that if `ServiceAccount` is specified, `Secret` is not.
This import is unused.
I think we should use `sync.Map` to replace `map` here.
I think this should be a string.
I think we should use `http2.AuthorityHeader` here.
This is a bit of a hack, but it works. I'm not sure how to get the parent window of the dialog.
I think this is a good change. I'm not sure if we should have a `func() string` or a `func() interface{}` though. I'm not sure if we should have a `func() string` or a `func() interface{}` though.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Layout/SpaceInsideParens: Space inside parentheses detected.
I think we should also remove the tls_idx here.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `AzureUserAgentPrefix`
This is a no-op.
why remove this?
I think this is a bug. We should not be changing the number of nodes in the cluster.
I think this is a good change. I'm not sure if we should have a separate `index.js` file for the `src` folder, but I think it's a good idea to have a single entry point for the library.
This is a breaking change.
I think this is a TODO for the PR.
I think this should be `github.com/keybase/kbfs/libkbfs/ioutil`
I think we should keep the old namespace for now, and then we can change it in a follow up PR.
Layout/ExtraSpacing: Unnecessary spacing detected.<br>Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
I think this should be `system.guest` (with an `s`)?
I think we should remove this method.
This is a breaking change. We should probably add a deprecation warning.
This test is failing because of the change in the implementation of OpDocExtra.
I think this is the only place where we use `thirty_day_activity_id` as a column name. I'm not sure if we should be using a column name or a constant. I'm not sure if we should be using a constant or a column name. I'm not sure if we should be using a constant or a column name. I'm not sure if we should be using a constant or a column name. I'm not sure if we
This constant is not used anymore.
I think this should be `File.expand_path(moduledir, Dir.pwd)` to be consistent with the other options.
I think we should use `limit()` here.
This test is not testing anything.
nit: can we move this to `persistence/sql/sqlplugin/sqlite/init.go` and remove the `init()` function?
This is a bit of a hack, but it's the only way I could get the tests to pass. I'm not sure why the tests fail if I don't do this.
This is a bit of a hack, but it's the only way to get the right parameter name. I'm not sure if there's a better way to do this.
I think this should be `CLIENT_ASSERT(drstats->size >= sizeof(dr_stats_t), "Invalid drstats->size value.");`.
I think this should be `DeviceID string` and not `DeviceID *string` as it is not a pointer.
I'm not sure if this is a good name for this thread. I'm not sure what it does.
I think this should be `yaml:"name"`
I think this should be `K_CONSTANT = 0` (no space after `=`)
I think this is the only place where we're using the `currentTime` method. I'm not sure if we should be using the `currentTime` method or the `currentTimeMillis` method. I think we should use the `currentTimeMillis` method.
I think this is the only place where we use `strings.Join` to concatenate the anonymized errors. I think it would be better to use `strings.Builder` here.
I think this should be `<h1>` instead of `<hgroup>`. `<hgroup>` is used for grouping `<h1>` and `<h2>` together.
I think we should catch a specific exception here.
This method is not used anywhere.
nit: I think this should be `literalSet.stream().anyMatch(v -> eq(ref, toLiteral(v)))`
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why the `view.flows.resolve` command doesn't work with a single argument.
I think this is a typo.
I think we should add a TODO here to remove this.
This is a bit of a hack, but it's the only way I can think of to get the auto-fire to stop. I'm not sure if there's a better way to do this.
This is a public static field. It should be accessed via the getter method.
I think this test is still valid, but the error code should be 403.
`kvKeys` is not used anymore.
nit: I think we should use `String#IsNullOrEmpty` here.
Line is too long. [105/80]
This is a bit of a weird VUID. I'm not sure if it's better to have a VUID that's more specific to the error, or to have a generic VUID that's more specific to the error type. I'm not sure what the best practice is here.
I think this should be `debug-log-capacity` instead of `log-capacity` (and the same for the help text below).
Nit: Please remove empty line.
This should be `throw new Error("Sync is not enabled. Note that the developer edition of the Node.JS SDK for Realm does not include sync on Linux.")`
I'm not sure if we want to add this here. I think it's better to add it in the `next.config.js` file.
This file is not used anymore.
This is a breaking change.
I think this is a bit of a hack. I'm not sure if there is a better way to do this.
Style/RedundantSelf: Redundant self detected.
I think this should be `max_retrials_to_get_pods` (without the `s`)
I think this should be `parameters.options?.pingWaitTime ?? 500` instead of `parameters.options?.pingWaitTime ?? 500`
I think this is a good change. I'm not sure if we should have a `clientv1` alias for `corev1` or not. I'm not sure if we should have a `clientv1` alias for `corev1` or not.
Use if/unless instead of if/end.
Line is too long. [105/80]<br>Use 2 (not 3) spaces for indentation.
This is a bit of a hack, but it's the only way to get the handshake data.
I think this is a bit of a hack, but it works. I'm not sure how to get the `print` function to print a newline without actually printing anything.
This is a no-op.
This is a BC break. The method signature is changed.
This is a bit of a hack, but I don't see a better way to do it. I'm not sure if there's a way to get the local file directory from the reader, so I just use the reader to get the local file directory. I'm not sure if this is the right thing to do, but it seems to work.
I think this should be `Any` instead of `null`
This is a bit of a nit, but I think we should be consistent with the other places where we use `shutdownNow` and `shutdown`.
I think this is the wrong way around. If the stream has a limit of 0, then we should use the account limit. If the stream has a limit of 10, then we should use the stream limit.
@juliemr @soralee @choumx @mraible @julianrodriguez I'm not sure if this is the right way to do this. I'm not sure if we should be copying these files to the dist folder. I'm not sure if we should be copying these files to the dist folder. I'm not sure if we should be copying these files to the dist folder. I'm not sure if we should be
This file is empty.
I think it would be better to use `Shopsys\FrameworkBundle\Component\Environment\EnvironmentType` instead of `Shopsys\Environment` in this file.
I think this should be `grpcStubType` instead of `grpcStubTypeName`
I'm not sure if we should disable this rule for this plugin. I think it's a good rule to have, but I'm not sure if it's worth it to have a complete sentence in the description of the plugin. What do you think?
I think this is a change in behavior. I think it's better to keep the old behavior.
I think this should be `messages.delete_plural` since we're deleting multiple forms.
nit: I think this should be `NONE` or `NO_ACCOUNTABLE` or something like that.
This is a bit of a hack, but it's the only way I could think of to get rid of the ref function without having to do a deep clone of the VNode.
please add HRNet to __all__
I think this should be `Blockly.Events.VarCreate` instead.
Nit: I think we should add a license header here.
I think this should be `info` instead of `finest`.
This is a global variable, which is not a good thing. It should be a member of the class.
This is a breaking change.
nit: I think we should be consistent with the naming of the package. I think we should use `org.hyperledger.besu.evm.precompiled` instead of `org.hyperledger.besu.evm.precompile`
I think this should be false.
I think this should be done after `config.MakeDiskBlockCacheIfNotExists()` so that the FBOs are created with the right block cache.
Style/WidthAsNumber: Use percentages instead of pixels for width.
This is a bit weird. If you pass an empty array and no source, you'll get a null value. If you pass an empty array and a source, you'll get the source. If you pass a non-empty array and no source, you'll get the source. If you pass a non-empty array and a source, you'll get the source. I'm not sure what the best way to handle this is. I'm not sure if it
I think this is the only place where we use `HardKiller` so I think we can just remove the `SoftKiller` function and use `HardKiller` everywhere.
Nit: Please remove empty line
I think this should be called `AuthRequired` and the default should be `true`.
I don't think this should be removed.
Style/TrailingWhitespace: Trailing whitespace detected.
I think this is the only place where we use the `GlobalHitsThresholdChecker` directly. I think we should move it to the `SearchContext` and use it there.
nit: I think it would be better to return `Expressions.alwaysNull(sourceName)` here.
I think this should be `jsonschema>=3.0.0` to be more specific.
This is not a valid error for this method.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `Decoder is a helper for decoding bytes into a particular Go type object.`
I think this test is not needed. The test `oauth2LoginWithOneClientConfiguredAndRequestFaviconNotAuthenticatedThenRedirectDefaultLoginPage` already covers this case.
This is a bit of a weird pattern. I'm not sure if it's worth it to make this a lambda. I'd rather just have a function that takes a `ValidationStateTracker *` and a `QUEUE_STATE *` and returns a function that takes a `VkQueue` and returns a `bool`.
This is a getter, so it should be `GetPorts`
I think this should be `selection_specs=[[DynamicMap], ...]`
This is a breaking change. I think we should deprecate the old method and add a new one.
I think this is not needed. The caller is responsible for calling `h2o_mem_release_shared` if the function returns NULL.
This class is not serializable.
I think this is a bug. We should not ignore empty lines.
I think we should be able to remove this case now.
I think we can use `cfg.model.neck.rfp_backbone.pretrained = None` directly.
Please don't use wildcard imports.
I think we should keep this as `get; private set;` and add a new property `JsonSerializerSettings SerializationSettings { get; }` that returns a copy of the private field. This way we can keep the serialization settings private and still expose a read-only property.
Nit: Please move this import to the top of the file.
I think this method is unused.
This is a bit of a hack, but it's the only way I can think of to get the previously connected peers into the peer set. I'm not sure if there's a better way to do this.
This should be `public`
I think this is a bit too much. I'd say 1_000_000 is enough.
I think we can use `self.check_eq` here.
This is a change in behavior. I think it's better to keep the old error message.
I think this is a bug. We should be using the namespace of the first interface in the model.
This is the new implementation.
I'm not sure if this is the right way to do this. I'm not sure if we should be using `__pkginfo__` at all. I'm not sure if we should be using `__pkginfo__` at all. I'm not sure if we should be using `__pkginfo__` at all. I'm not sure if we should be using `__pkginfo__` at all. I'm not sure if we should be using `__pkginfo
This is a bit of a hack, but it's the only way I could get the index to be included in the `sdf` after the `filter` operation.
I think we should use `[]metav1.LabelSelectorRequirement` here.
This is a bit confusing. I think it would be better to have a separate error for the case where the object already exists.
Please remove this line.
I think this is a bug. The second argument should be `etcdsnapshotCommand.Subcommands`
1. 一句话功能简述 2. 功能详细描述 3. 4. 5. 6. 7. 8. 9. 10. 11. 12. 13. 14. 15. 16. 17. 18. 19. 20.
This is the only change that I'm not sure about. I'm not sure if we should be setting the default to `ecs` or `ecs-2014-11-13`. I'm not sure if we should be setting the default to `ecs` or `ecs-2014-11-13`.
I'm not sure if this is the best way to do this, but it seems to work. I'm not sure if there's a better way to do this.
I think this is a good idea, but I'd like to see it in a separate PR. I'm not sure if we want to make this change in the current release.
This import is unused.
I think this is not necessary.
nit: I think this should be `getTargetSplitSize` to be consistent with the other getters.
I think this is a good idea, but I'm not sure if it's necessary. I think the `s.sys` field is always initialized, so the `s.sys.replies` field should always be non-nil.
This is a bit of a hack, but it's the only way I could think of to avoid the error.
This is a change in behavior. The `log` package is now used instead of the `helpers` package.
I think this is a bug in the translator. Can you please check if it's still there?
I think we should use a different port for each server.
I think this should be false by default.
I think this is a good change. I'm not sure if it's worth it to check for `child===true` though.
I think you should use `use Thelia\Model\ModuleQuery;` instead of `use Thelia\Model\Base\ModuleQuery;`
I think we should not delete the cart here. We should just return null. The caller should decide what to do with the null value.
I think this is a test case that is failing. I'm not sure why it's failing, but it's failing on the server side. I'm not sure if we should skip it or not.
I think this should be `applicationName` (lowercase) to match the other constants.
This is a bit of a hack, but it's the only way I could get the color to show up on Firefox. I'm not sure why it's not working, but it's not a big deal.
I think this should be moved to the constructor of MvxSimpleTableViewSource.
This is a test of the NameError check.
I'm not sure if this is a valid IP address.
I think we should keep this property. It's not used in the task, but it's used in the generated task.cs file.
I think we should requeue here.
nit: I think we should call this `NoOpSlasher` or something similar.
I think this should be a warning, not an error.
Line is too long. [105/80]<br>Space missing after comma.
I'm not sure if this is the right way to test this. I'm not sure if the response is supposed to be a list of dicts.
I think we should call this `NoInstanceIdentity` or `DisableInstanceIdentity` or something like that. `NoIID` is a bit confusing.
I think this should be `isOwner` instead of `isFirstAdmin`
This is a bit of a hack, but it's the only way to support the legacy `readPreference` option.
I think this is a bug. The name of the network should be the name of the network.
I think this is a leftover from the previous version of the code.
nit: I think we should use `Instant.now()` here.
This is a bit of a hack, but it's the only way I can think of to get the device id from the device_selector. I'm not sure if there's a better way to do this.
I think this should be `INTEGER DEFAULT 0` to be consistent with the other filters.
This is a placeholder for a future recurrent model.
This is a bit ugly, but it's the only way to do it without changing the interface of `getInstantSpellById`.
This is a bit confusing. The VUID is about the subpass, but the error message is about the pipeline. I think it would be clearer to say something like "vkCreateGraphicsPipelines(): pCreateInfo[%" PRIu32 "]: subpass uses read-only depth aspect layout, but pDepthStencilState->depthWriteEnable is VK_TRUE."
@sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @s
I think this is the only place where we use `currentUID` as a parameter. I think we should just pass `currentUID` to `checkMDPerms` and remove the `currentUID` field from `Contextified`.
I think we should use `serviceName == common.FrontendServiceName || serviceName == common.MatchingServiceName` here.
This is a bit confusing. I think it should be `newVNode._dom = oldDom || oldVNode._dom`
I think this should be `api.TaskStopped` instead of `api.TaskStopping`
This is a breaking change. I think we should have a separate PR for this.
This is a breaking change.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit of a hack, but it's the only way I could get the test to pass. I'm not sure why the `th` and `td` elements are reversed in the table.
This is a bit of a hack, but it's the only way I could get the code to compile. I'm not sure why the compiler doesn't like the original code.
nit: remove empty line
I think this should be `["db", "dba", "ddev-ssh-agent"]` (missing the quotes around "dba")
I think we should not ignore this error.
I think this is the only place where we need to pass a context.
I think this should be `return callback(err)` instead of `return this.s.promiseLibrary.reject(err)`
I think this should be `manifest['name']` instead of `manifest['version']`
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This does not support TLS. See TLS example in doc.go.
This is a bit confusing. I think it would be better to rename this method to `getInputFile(String location)` and then call `getInputFile(task.file().path().toString())` from here.
I think this should be moved to the NCR template.
I think this is a bug. I think we should only return watches with nonce less than the specified nonce.
I think we should not use this alias.
This is a change in whitespace.
This is the only change that is needed to fix the issue.
This test is not needed anymore.
Metrics/LineLength: Line is too long. [111/120]
I think this should be `const CommitmentLength = 32` (not `32 bytes`)
I think this is a bug. If the value is not a `cli.StringSlice`, it should return an error.
I'm not sure if this is the right place to set the stolen register. I think it should be set in `arch_mcontext_init_from_dcontext` (or `arch_mcontext_init_from_mc` if we ever use that).
I think this is wrong. If the name is empty, we should not do this.
I think this is a typo.
I think this is not needed. The serializer is created in the `Serialize` method.
I think this should be `+optional`
Use before_action instead of before_filter.
I think this should be `ClientPromiseDTO` to be consistent with the other DTOs.
I'm not sure if this is needed. I've removed it for now.
This is a list, so the quotes are not needed.
nit: I think this should be `originTableIdentifier.namespace().level(0)` instead of `originTableIdentifier.namespace().level(1)`
I think this is the right thing to do.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `coupon_code` instead of `coupon_id` since it's the code that's being used.
This is a bit of a hack, but it's the only way I could think of to make sure the database is ready before we start the server. I'm not sure if there's a better way to do this.
why remove this?
I think this is a bug fix. I'm not sure why this was here in the first place.
This test is failing because of the new serialization format. I'm not sure how to fix it.
I think this should be `ctx.Handle(404, "MustEnablePulls", nil)`
This is a bit weird, but I guess it's ok.
I'm not sure if this is the best name for this. I'm not sure what the "sorted" part means.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should use `strings.ToUpper` here.
I think this should be `ThreadAgnostic = ThreadSafe | ThreadSafe` (or `ThreadAgnostic = ThreadSafe + ThreadSafe`)
I think we should use the same icon for both `Playlist` and `BoxSet` here.
I think this is a bug. If the config key is empty, we should not be replacing anything.
I'm not sure if this is the right place to call `Send` here. I think it's better to call it in the `Flush` method, but I'm not sure if it's the right place to call `Flush` either.
Line is too long. [105/80]<br>Redundant `if` condition. [IrresponsibleCondition]<br>Redundant `if` condition. [IrresponsibleCondition]<br>Redundant `if` condition. [IrresponsibleCondition]<br>Redundant `if` condition. [IrresponsibleCondition]<br>Redundant `if` condition. [Irrespons
I think we can use `center_sample_ratio` instead of `center_sample_radius` to be consistent with the other models.
I think this is a typo.
Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
I think this is the wrong logic. If we're forcing a rebuild, we should always rebuild. If we're forcing a rerun, we should only rerun if it's a test.
This column is not nullable, so it should be dropped instead of changing it.
I think this should be `URI` instead of `String`
I think this should be `int` instead of `uint`.
why remove these?
This is a bit confusing. I think it would be better to have a separate variable for the result of the path_split() call. Then you can check for PFS_RESOLVE_LOCAL and set pname->service to NULL.
I think this is the same as the `else` case below.
I think we should keep the type as `TierPriority` here.
I think this should be `Bibliographic` by default.
I think this is a bug. The function is supposed to be used for AVX-512 as well.
This is a bit of a nit, but I think it would be better to return a `v1.Transaction` with an empty `Type` field.
I think this test is not needed anymore.
I think this should be `curTagCount + newTagCount > domainTagsLimit`
This method is not used anywhere. Can we remove it?
I think we should use `SpecCSIRawBlock` and `SpecCSIFsType` instead of `SpecCSIRawBlock` and `SpecCSIFsType` to be consistent with the other specs.
Please remove unnecessary usings.
This is a copy of the subject, so we can't modify it.
This is a bit of a hack. I'm not sure if there's a better way to do this.
This is a breaking change. We should not return null here.
nit: "Specify the bottommost level compression algorithm" -> "Specify the bottommost level compression algorithm. Options: no,snappy,lz4,lz4hc,zstd,zlib,bzip2,xpress,disable"
@sureshanaparti @sureshanaparti-cstor-volume-create-getpvc-default @sureshanaparti-cstor-volume-create-getpvc-default @sureshanaparti-cstor-volume-create-getpvc-default @sureshanaparti-cstor-volume-create-getpvc-default @sureshanaparti-cstor-volume-
This is a bit hard to read. I'd suggest splitting it into two lines.
This is a bit confusing. I think it should be False if the suppress_file is None.
This is a bit of a hack, but it's the only way I could think of to get the init code for the method. I'm not sure if there's a better way to do this.
This import is unused.
This is a bit of a weird test. It's testing that the rule book has at least one rule, but it's not testing that the rule book has exactly one rule. I think it's better to test that the rule book has exactly one rule.
This is a good idea, but I think we should do it in the background, so that we don't block the user's UI.
I think this should be `CosineWindowFunction` (lowercase)
I think this should be `gdpr_agreed_at` instead of `gdpr_agreed`
I think we can remove this logic.
This is the only place where we use `unsafe.Pointer` so we can remove the import.
This is a bit weird. The mutex is locked here, but unlocked in the destructor. I think it would be better to lock the mutex in the constructor and unlock it in the destructor.
This is a debug message. It should be removed.
This method is used to check if the row is hidden. It is used in `Selection` class.
I think this should be `Keccak.Zero` instead of `null`
nit: can we use a different name?
This is a bit of a nit, but I think it would be better to use `strings.HasPrefix(a.Region, "fips-")` and `strings.HasSuffix(a.Region, "-fips")` instead of `strings.Contains(a.Region, "fips-")` and `strings.Contains(a.Region, "-fips")`.
This is a bit of a hack, but I don't see a better way to do this. I'm not sure if there is a way to get the class name from the node.
I think this should be `contract.Visibility != TypeMemberVisibility.Family && contract.Visibility != TypeMemberVisibility.FamilyOrAssembly && contract.Visibility != TypeMemberVisibility.Public`
I think we can use `protocol.StateManager` directly here.
This is not used.
This is a bit weird. Why do we need to check for `backend->impl` here?
I think we can remove this file now.
I think this is the only place where we set the background flush period.
The width of truncate must larger than zero, but is %s
I think it is better to use the same kernel name for both kernels.
nit: this is a bit of a weird name. `convert` suggests that we are converting from one type to another. I think `toIceberg` would be more clear.
This is a bit of a hack. I'm not sure if there is a better way to do this.
I think this is a bug. The `distance` function is not guaranteed to be constant time. It is possible that `first + 9` is not in the range `[first, last)`. In that case, the `distance` function will be O(n) and this will be O(n^2).
Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
I think this should be `c.Debugf` as well.
This is a bit of a hack, but it's the only way I could get the script to load. I'm not sure if there's a better way to do this.
why not use blk.Actions here?
I think this is wrong. The LPI2C clock is not the same as the OSC clock. The LPI2C clock is the PLL3_60M_CLK. The OSC clock is the OSC_CLK. The LPI2C clock is divided by the LPI2C_CLK_PODF. So the LPI2C clock should be set to 0.
This is a bit confusing. I would have expected the default to be `sys.maxsize` and the `capacity` to be `1` if `sequential` is `True`.
I think we should not change the copyright year.
Nit: Please remove empty line.
I think this is not needed anymore.
This is a bit of a hack, but it's the only way I could get the offline mode setting to work. I'm not sure if this is the best way to do it, but it works.
I think this is a bug fix. The `split` function returns a list, so `paths_` will always be a list. The `if` statement is not needed.
I think this should be a counter, not a gauge.
This is a bit of a nitpick, but I think it would be better to return `SET_PARAM_CMD_FAIL_RSP` here. The reason is that the `param_name` variable is used in the `if` statement below, and if `param_name` is `NULL`, then the `if` statement will never be entered.
I think we should not return here, but instead return the error and let the caller handle it.
This is a bit of a hack, but it's the only way to get the frontier confirmation to work. I'm not sure if there's a better way to do this.
I think this should be `Scapy_Exception` (not `Scapy_Exceptions`)
nit: I think we should use `List<string>.Empty` here.
I think this is a dependency that should be removed.
I think this should be `ddev-web` or something like that.
I think this is a good example of how to use the `Name` field.
nit: I think this should be `Cannot read a delete manifest with a ManifestReader: %s`
I'm not sure if this is the best way to do this. I'm not sure if we should be passing the user object around everywhere. I'm not sure if we should be passing the authenticated flag around everywhere. I'm not sure if we should be passing the user object around everywhere. I'm not sure if we should be passing the authenticated flag around everywhere. I'm not sure if we should be passing the user object around everywhere. I'm
I'm not sure if this is the best way to do this, but it's the only way I could think of to get the error message to show up in the console.
I think this should be `NextAlreadyDefined` instead of `NextAlreadyDefined`
I think we should keep the old names for backward compatibility.
This is a bit of a hack, but I don't see a better way to do this. I'm not sure if there is a better way to check if the CastImageFilter exists.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should use the constant here.
I'm not sure if this is the best way to do this. I'm not sure if we should be using a list of delegates here. I'm not sure if we should be using a list of delegates here. I'm not sure if we should be using a list of delegates here. I'm not sure if we should be using a list of delegates here. I'm not sure if we should be using a list of delegates here.
I think this should be `if (ConfigQuery::checkAvailableStock()) {`
I think this should be `WithInstalledTimestamp(timestamp metav1.Time)`
This is not needed anymore.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit of a hack, but it's the only way I could think of to get the iterator to stop when it reaches the end of the list.
This is a breaking change. We should probably add a deprecation warning.
missing space after ','
I think this should be before `ignoreAfterMaxFailures` so that it can be used to ignore tests that don't follow the naming convention.
This is a bug fix, not a feature.
I think this is a bug. The batch should be cleared after each export.
Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
Unused import.
I think we can use `cloneIP` as the name of this constant.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `noDataString` (without the `txt`)
I'm not sure why this was changed. It's not a closure, so it doesn't need to be a function.
I think this should be `connectionLimitEnabled && remoteHostIsNonLocal`
I think this should be `return Void.class;`
I think this is a bit more readable.
I think we should use `context.Background()` here.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if this is the right way to do this, but it works.
This is a bit of a nit, but I think it would be better to call this `state_tracker_` to match the name of the class.
This is not needed anymore, as the origin is always unlocked.
This is a breaking change. The validation rules for `vkGetQueryPoolResults` have changed. The new rules are: - If `flags` contains `VK_QUERY_RESULT_64_BIT`, then `stride` must be a multiple of 8. - If `flags` does not contain `VK_QUERY_RESULT_64_BIT`, then `stride` must be a multiple of 4.
I think this should be `RA.stubString` instead of `RA.always`
typo: usie
I think we should keep the same value as before.
I think we should remove this line.
@smarterclayton I think this is the only place where we set the state to `ReconcilePending`. Is this correct?
This is the only change I made to the code. I think it's a good change.
A Partition represents a single slice of the entire set of a job's possible work.
I'm not sure if this is the right way to do this. I'm not sure if we should be using `config[:configuration]` and `config[:platform]` or if we should be using `config[:xbuild_configuration]` and `config[:xbuild_platform]` instead. I'm not sure if we should be using `config[:solution]` or `config[:xbuild_solution]` instead. I'm not sure if we should be using `
This is a bit of a hack, but it's the only way I can think of to get the error message to be the full path on Windows. I'm not sure if there's a better way to do this.
I think this should be `apiTermsOfUse` (lowercase) to match the other endpoints.
nit: I think we should move this import to the top of the file.
I think this is the fix. The initialBase is always replaced by the base.
I think we should add this to the `ContentExtension` class.
This will not include `java.lang.Object` unless it is explicitly added (e.g. `class X extends Object {}`)
I think this is the only place where we need to unlock the mutex.
Please avoid wildcard imports.
I'm not sure if this is the right place for this. I'm not sure if it's even the right name. I'm not sure if it's the right default. I'm not sure if it's the right default for the default. I'm not sure if it's the right default for the default default. I'm not sure if it's the right default for the default default default. I'm not sure if it'
This is a bit confusing. I think it would be better to say "browse mode" or "browse mode" or "browse mode".
I think this should be `setupDev := false` and then `return !setupDev, nil`
This is a bit of a hack. I'm not sure if there is a better way to do this.
I think this should be `subprocess.run` instead of `subprocess.check_call` so we don't fail when trying to disconnect a container from a network that it's not connected to.
I think this is a bit of a misnomer, as it's not really a field, but a function that returns a field. I'd call it `fieldProviderIDFunc` or something like that.
This file is covered by the GNU General Public License. See the file COPYING for more details.
I think we can remove this TODO now.
nit: remove empty line
I think we should use a random key here.
I'm not sure if this is the right place for this flag. It seems like it should be a parameter to `checkCaches` rather than a return value.
I think this should be `write.metadata.metrics.column.` instead of `write.metadata.metrics.column-conf.`
I think this is the only place where we need to set the state.
I think this should be `export const NO_RENDER = 0;`
I think this should be `TelemetryDataDto` instead of `Object`
I think this is a bit more readable as `suffixStart := len(name) - suffixLength`
I think this should be `this.isSorted()` instead of `this.isSorted(true)`?
I think this should be `loopdevs` instead of `loopdev`
nit: remove empty line
This is a bit confusing. I think it would be better to call this `context_cls` and then have `context_cls_inst` return `context_cls.inst()`.
This class is deprecated.
This error is not supported in HIP.
I'm not sure if this is the best way to do this. I'm not sure if it's possible to do this in a more generic way.
This is a no-op, so we can just return nil.
This is the default, so you can remove this line.
I think this should be `Options` as well.
This method should be overridden by the region subclass.
I think this should be a constant.
This file is part of the OpenZipkin project. Copyright 2015-2018 The OpenZipkin Authors. All rights reserved. Use of this source code is governed by the Apache 2.0 license that can be found in the LICENSE file.
I think this is the only place where we show the OSD. I think we should be able to remove this.
I think this is not needed anymore.
This is a bit of a hack, but I think it's the only way to get the behavior we want. I'm not sure if there's a better way to do this.
I think this should be `http://` instead of `https://`
nitpick: typo: fragmento -> fragment
I think this should be `max_query_limit` instead of `max_query_limit, max_query_limit`
I think we should be able to remove this LEGACY MODE! and just set the defaults in the validator.
I think this enum is not used anywhere.
I think that this test is not needed. The `autoRowSize` plugin is tested in the `AutoRowSize.js` file.
I think this is not supported. I think we should throw an exception here.
I think we should use `Long` here, since we don't know if the sequence number is negative or not.
I think this is a bit dangerous. If the counter is not reset, it will keep grinding forever. I would suggest to add a counter to the constructor and reset it to 0 when the counter reaches 1000000.
I think this is a bug fix. The previous code was wrong.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this error message is a bit misleading. It's not that file logging is disabled, it's that the user didn't specify a filepath.
This error message is a bit misleading.
This is a leak.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
This file is part of Hyperledger Besu.
I think we should use a different prefix for these new types. I'm thinking `0x100: ...` or `0x200: ...` or something like that.
I think this should be `symbolic link` (with an `i`)
This is the default, so we can remove this.
This import is not needed.
I think this should be `return false` instead of `return true`
This is a bit of a hack, but it's the only way I can think of to get the correct location.
This is a bit of a hack, but it's the only way I could get the editor to render in the right place. I'm not sure why the editor is not rendering in the right place by default.
I think this should be `RelaxedReclaimPurgeNode` to be consistent with the other methods.
show or out during test only support batch size of 1
I think we can remove this check.
I think this is the only change that is not backwards compatible. I'm not sure if we can do anything about it.
This test is now testing the wrong thing. It should be testing that `schemaVersion` is set to 1 when `schema` is specified.
I think this should be a warning, not an info.
nit: I think we should use `zap.String("image-provider", provider.Name())` here as well.
This is a bit of a hack, but it works. I'm not sure why the `explode` doesn't work.
This import is unused.
This example watches a variable based on a file-based blob.Bucket with JSON.
It is important that the returned list is sorted in ascending order.
This is a bit confusing, since it's not a toggle. Maybe `reverse_selection` is not the best name?
I think this should be `accept-no-param-doc = yes` to test the `no` case.
This is a bit of a hack, but I don't see a better way to do this. I'm not sure if there's a way to get the permissions of the socket file from the server, and I'm not sure if there's a way to get the permissions of the socket file from the client. I'm not sure if there's a way to get the permissions of the socket file from the server, and I'm not sure if there'
I think this is a good change. I'm not sure if it's worth changing the `get<>` calls to `r`, `g`, and `b` though.
I think this is a good change. I'm not sure if we should remove the empty line here, but I think it's fine.
Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
This is the only change that is actually needed to make this work. The rest is just cleanup.
This is a bit weird, but I think it's correct. It's appending the same slice twice, so it should be the same as appending it once.
I think this is the only place where we need to set the type.
I think we should use `LOG(WARNING)` here.
I think this is a bug fix. The body should be sent for POST and PUT requests.
I think this is a bit too long. I'd say 10 seconds is a reasonable max.
I think this should be true, since the writer is on the same process as the reader.
This is a change in behavior. The `forEach` loop will not wait for the `generateTest` function to complete. The `for` loop will wait for the `generateTest` function to complete.
I think we should use `myId` here instead of `nodeKey`
This is a bit weird. I'd expect the error to be returned here.
I think this is the only place where we use `perr` instead of `err`. I think we should be consistent.
This is a bit of a hack, but it's the only way I could get the ordering to work. I'm not sure if this is the right way to do it, but it works.
This is a bit of a hack, but it's the only way I could get this to compile on Android. I'm not sure why this is needed, but it's not needed on Linux.
I think this should be `SingleImageImportLoggable` (capitalized)
It's like {@link RA.spreadPath|spreadPath}, but preserves object under property path.
I think we can remove this line.
I think this should be `Vectorized bool` instead of `Vectorized Expression`.
I think this should be `HasKeyGenerationForUser(user keybase1.UID) (bool, error)` since it's not checking for a specific key generation.
I'm not sure if this is the best way to get the version number, but it seems to work.
Standards: Please add a space after commas.
Please avoid wildcard imports.
This method is not used.
This is a bit of a nit, but I think it would be better to use `StringSliceEqual` here as well.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why the `nested->type.struct_def` is null.
nit: remove empty line
I think this should be `countly.events.js` instead of `countly.events.concat.js`
I think this should be `AspnetRouteTemplateResourceNamesEnabled` instead of `AspnetRouteTemplateResourceNamesEnabledEnabled`
I'm not sure if this is the right thing to do here. I think we should probably just return the error here and let the caller handle it.
I think this should be `T? Data { get; } = default;`
I think this should be `props.value.includes(child.props.value)` instead of `props.value.includes(child.props.children)`
I think this is the only place where we need to check if the devices cgroup exists.
This is a breaking change. We should not catch Exception here.
I'm not sure if this is the best way to do this, but it's the only way I could think of to make this testable. I'm open to suggestions.
Please remove empty line.
I think we should keep `x-gtar` here, since it's a valid archive type.
CARAFE time forward: 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
This refresh will be bounded by the visibility that the {@code IsolationLevel} of that transaction exposes. For example, if we are in a context of {@code READ_COMMITTED}, this refresh will update to the latest state of the table. However, in the case of {@code SERIALIZABLE} where this table hasn't mutated within this transaction, calling refresh will have no impact as the isolation level constrains all observations to within the transaction
This is a bit of a hack, but it's the only way I could think of to get the file names from the MSDataFileScans. I'm not sure if there's a better way to do this.
This is a bit of a hack, but it's the only way I could get the script to load. I'm not sure if there's a better way to do this.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
I think this is the only place where we register the unreserve function. I think we should move this to the batchstore constructor.
I think we can use `MAX_RETRY_LEVEL` to replace `3` in `retryCommit` method.
I think this is a bug. The `authConfig` should be the `sdkAuthConfig` and not a copy of it.
This import is not needed.
I think this is a bit too much. I think 1.15 is too much. I think 1.1 is enough.
I think this should be `ks.Index` instead of `ks.DatetimeIndex`
This is a bit of a nitpick, but I think it would be better to use `StringUtils.isNotBlank()` here.
`value` is a pointer, so it can be nullptr.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is the version of the database. If you change this, you need to increment the version number.
I think this is wrong. The core factor is not always 1.0. It is only 1.0 if the user does not specify a core factor.
I think this should be `DestPorts(r.Config.VXLANPort)` instead of `DestPorts(uint16(r.Config.VXLANPort))`
I think this is a bug. We should be writing the edges to the same table as the xrefs.
I think this is the correct fix. The calling assembly is the assembly of the base class, which is not the same as the assembly of the derived class.
This is no longer needed.
This is a bit confusing. I'd say "When given, save the open windows even if auto_save.session is turned off."
Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
this is a stub, please implement it in the other file
I think this is the only place where we need to add the `selenium` prefix.
I think this should be `GET,POST,PUT,DELETE,HEAD,OPTIONS` to support preflight requests.
This limit has no effect on upgraded connections which are always unlimited.
I think this should be `create_no_window=True` by default.
I think this is a bug. The `info` is not the new info. It is the old info. The new info is `newInfo`. So, the `info->getResidueNumber()` should be `newInfo->getResidueNumber()`.
This import should be grouped with the other imports.
This is wrong. You need to clear the opaque region in the next commit.
I think this is the only place where we need to do this.
(style) line over 80 characters
I think this is the only place where we use `kbp` as a prefix. I think we should just use `git` as the prefix.
I think this should be an error.
I think this should be `NumExtraElements` instead of `NumExtraRecords`.
nit: missing space after `\`
This is a breaking change. I think we should rename this to `MaterializationOrObservation` and add a new type `Materialization`.
This is a bit of a hack, but it's the only way I can think of to get the IPv4 address out of the IPv6 address. I'm not sure if there's a better way to do this.
Use the new Ruby 1.9 hash syntax.<br>Line is too long. [122/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is a good change, but I'm not sure if we should be passing in the key here. I think it would be better to just pass in the list of project ids.
This is a bit of a weird import, but it's used in the `make_sensor` function below. I'm not sure if there's a better way to do this.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `tealLogicSigSize` and `tealAppSize` instead of `tealLogicSigSize` and `tealAppSize`
This is a breaking change.
I think this should be `ErrOverflow is the error when a broker ingress is sending too many requests to PubSub.`
I'm not sure if this is the best way to do this. I'm not sure if we should be storing the full rules in memory. I'm not sure if we should be storing the full rules in a map. I'm not sure if we should be storing the full rules in a map of maps. I'm not sure if we should be storing the full rules in a map of maps of maps. I'm not sure if we should be storing the full
nit: this test is not testing the table name, it's testing the location.
I think this should be `ExternalCgroup bool` instead of `ExternalCgroup string`
I think this should be `application/json` instead of `application/x-amz-json-1.1`
I think this should be `expectedRunningCDs` to match the name of the field.
I think this should be ` - see: ` instead of ` - see: `
This is a bit confusing. I think we should just use the sequence number from the manifest being appended.
This should be done before the packs are repacked. Otherwise, the index files are deleted before the packs are repacked.
I'm not sure if this is the right thing to do here. I think it's fine, but I'm not sure if it's the right thing to do.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think it would be better to move this to `prepare` method.
Layout/EmptyMethod: Put empty method definitions on a single line.
I think this is a typo.
This class is empty. Please remove it.
I think this should be `style['text_font_size'] = '%dpt' % element.fontsize` (lowercase `p`)
I think this is a bug fix. The body should be sent for POST and PUT requests.
I think this should be an int.
I think this should be `IntegrationIds.AdoNet.MySql` instead of `IntegrationIds.AdoNet`
This is a workaround for a bug in the X server. The bug is that the X server does not flush the output buffer when it is closed. This causes the X server to hang when the X server is closed while a window is being dragged. This workaround forces the X server to flush the output buffer when the window is closed.
I think this should be `throws IOException` instead of `throws  IOException`
I think this is a bug. We should not be excluding Specs.
This import is unused.
I think this should be `req->res.content_length < self->args.min_size` (or `req->res.content_length < self->args.min_size + 1`) to be consistent with the `if` below.
This is the only change in this file.
I think we can use `context.Context` to cancel the processor.
This is not a good idea to put this in the `api` package. It's not an API endpoint.
Please remove empty line.
I think this is the only place where we use `logsDir` as a variable. I think we should use `Path.Combine(logsDir, fileName)` everywhere.
Why do we need to create a new string here?
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit of a nitpick, but I think it would be better to use `offlineMode` instead of `offline_mode` here.
I think this should be `HDF5Reader` instead of `HDF5`
I think we should use `identity.Identity` here.
I think this should be `if (ZMM_ENABLED() && !TEST(FRAG_SHARED, frag->flags))`, otherwise we'll be setting this flag for all fragments, not just the ones that are not shared.
I think this should be `conn->push_stream_ids.max_open = INT32_MAX - 1;` to avoid the case where `conn->push_stream_ids.max_open` is `INT32_MAX` and `h2o_http2_stream_open()` returns `NULL`.
I think this should be `Either {@link Keys#SHIFT}, {@link Keys#ALT}, {@link Keys#CONTROL} or {@link Keys#COMMAND}.`
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I'm not sure if this is the best way to get the path to the script. I'm not sure if it's possible to get the path to the script from the registry. I'm not sure if it's possible to get the path to the script from the registry. I'm not sure if it's possible to get the path to the script from the registry. I'm not sure if it's possible to get the path to the script from
why remove these flags?
This is a breaking change. I think we should have a new enum value for this.
This is the only place where we don't set the secret. Is that intentional?
I think we should use `Span.ServiceVersion = value;` here.
I think this is the only place where we need to do this.
I think we should rename this to `ValidationCategories` to be consistent with the naming of the other enums in the project.
I think this should be `appsv1.ConditionUnknown` instead of `"Unknown"`.
I think we should log the error here.
I think this should be `len(rule.DstIpPortSetIds) == 0`
I think we should use `containsProperty` here.
I think this should be `isotopeModificationType` instead of `structuralModificationType`
I think this should be `attr_accessor` since it's set in the initializer.
I think this is the only place where we're passing the genesis text as a string. I'm not sure if this is the best way to do it.
This is a bit of a weird test. It's not really testing that a dataset cannot be linked to the same dataverse again. It's testing that a dataset cannot be linked to the same dataverse again, and that the response is a 403. I think it's a good test, but I'm not sure it's a good test name.
I'm not sure if this is the best way to do this. I'm not sure if we should be using an interface here. I'm not sure if we should be using a struct here. I'm not sure if we should be using a pointer here. I'm not sure if we should be using a pointer here. I'm not sure if we should be using a pointer here. I'm not sure if we should be using a pointer here. I
nit: can we use `StringAssert.Contains(startInfo.Arguments, string.Format("{0} {1}", Microsoft.VisualStudio.TestPlatform.CrossPlatEngine.Constants.ParentProcessIdOption, parentProcessId));` instead of `StringAssert.Contains(startInfo.Arguments, string.Format("{0} {1}", Microsoft.VisualStudio.TestPlatform.CrossPlatEngine.Constants.ParentProcessIdOption, parentProcessId));
This is not a valid test case. You are not testing the constructor.
I think this should be FALSE.
I think this should be `throws IOException` instead of `throws  IOException`
Line is too long. [105/80]<br>Use the new Ruby 1.9 hash syntax.<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this is a good change, but I'm not sure if we should use `NM` as the default value. I think it would be better to use `null` here and then check for `null` in the template.
This class is deprecated.
I think this should be `if config.AttackTimeout < 0 {`
I think this should be `!string.IsNullOrEmpty(oldValue) && !string.IsNullOrEmpty(newValue)`
I think this should be `report.check_name.startswith('clang-tidy-')` instead.
This is a breaking change. We should not be changing the serialization format.
This is a bit of a hack, but I think it's the only way to get the `UnpartitionedWriter` to work. I'm not sure how to get the `UnpartitionedWriter` to work with the `OutputFileFactory` that is passed in.
I think this is the right fix. The `CommonNameForCertificate` function was returning the `Subject.CommonName` field, which is the `Subject.Organization[0]` field. This is the same as the `Spec.CommonName` field, but it's not the same as the `Spec.DNSNames[0]` field.
I think this should be `server` (singular).
I think this is a good change, but I'm not sure if we should be using `get()` here. I think it's safer to use `containsKey()` and then `get()` if it exists.
I think this is a good change. I'm not sure if we should do this in all assertions, but I think it's a good idea.
I'm not sure if this is the right way to do this. I'm not sure if the `Aggregate` is the right way to do this. I'm not sure if the `if` is the right way to do this. I'm not sure if the `is` is the right way to do this. I'm not sure if the `usesStackTrace` is the right way to do this. I'm not sure if the `StackTraceUsage
This test is a bit pointless, since it's just testing that the function returns the same values as it's given.
This is a bit of a problem. strnlen_s() is not available on all platforms. I'm not sure what the best solution is. I'm not sure if we should just use strlen() and ignore the warning. I'm not sure if we should just use strlen() and ignore the warning. I'm not sure if we should just use strlen() and ignore the warning. I'm not sure if we should just use strlen() and
need_unmap (bool): Whether to unmap the targets. Defaults to True.
I think we should add a `->orderBy('p.id')` here. Otherwise we might get the same products twice.
I think this is the only place where we need to pass the cancellation token.
remove this line
I think this is a breaking change. I think we should add a new constructor and deprecate the old one.
I think this should be `Errorf` since it is a failure.
I think we should use `ORDER_BY` instead of `ORDER_PATH` to be consistent with the rest of the code.
This option will disable the {@link AutoColumnSize} plugin.
Layout/EmptyLineAfterGuardClause: Add empty line after guard clause.
This workaround is only needed for Qt 5.11.2.
This is wrong. The min_x and min_y are the coordinates of the reference output.
I think this should be `os.path.join(os.path.dirname(__file__), '../../', fname)` (without the `os.path.abspath`)
Why not use `network::NetworkUtils::getAvailablePort()` directly?
This is not a valid example.
This is a bit of a hack, but it's the only way to get the thread name to show up in the thread viewer. I'm not sure if there's a better way to do this.
Use 2 (not 1) spaces for indenting an expression spanning multiple lines.
I think we should add a default value for this.
These two fields should be private.
nit: I think we should be consistent with the other interfaces and use `IHttpParser<T>` instead of `IHttpParser`
I think this should be `searchTerm.map(searchTerm -> engineCategory.getSubCategories().stream().anyMatch(engineSubCategory -> engineSubCategory.getPackages().stream().anyMatch(version -> version.getVersion().toLowerCase().contains(searchTerm.toLowerCase()))))`
I think we can use `pretrained=None` here.
I'm not sure if this is a good idea. We're using a dictionary instead of a concurrent dictionary, which means that we're not locking the dictionary anymore. I'm not sure if this is a good idea. We're using a dictionary instead of a concurrent dictionary, which means that we're not locking the dictionary anymore.
I think we should also check if the request ID is valid.
This is a minor release, so the version number should be 1.4.1.
I think we can remove this file now.
> 0 is mean the number of proposal is not 0.
I'm not sure if this is the right place for this. I think it should be in `enqueueBlocksToDelete` but I'm not sure how to do that.
I think this is a bit of a hack. I'm not sure if there's a better way to do this.
This is the only change that is not related to the PR.
This should be `transpose_layout`
I think we should add a validation for this field.
Layout/MultilineMethodCallIndentation: Align .and with .redirect_to on line 101.
This is the only place where we're creating an environment. I think it's fine to have the spinner stop here, but I'm not sure if we should be stopping it in `CreateEnvironment` as well.
This is a change in behavior. The previous implementation used crypto/rand.Rand.Read to generate random bytes. The new implementation uses math/rand.Read to generate random bytes. The new implementation is not cryptographically secure.
This test is now only valid for the `OnlySAN` feature set.
nit: unused import
Style/MutableConstant: Freeze mutable objects assigned to constants.
I think this is a bit misleading. The parent policy is not the policy that the rule is associated with. The parent policy is the policy that the rule is a member of.
Line is too long. [83/80]<br>Space inside { missing.<br>Space inside } missing.
This is a duplicate command.
I think this is the only place where we need to do this.
This class is not used anywhere. Can it be removed?
I think we should log the exception here.
This is the runtime name that we use for the nvidia runtime.
I think this is a good change, but I'm not sure if it's worth it. It's a bit more code, and it's not obvious to me that it's a win.
I think this is a bit misleading. The values are only for Linux 3.14 and later, but the `const` is for all platforms.
I think we should remove this flag and just use the new code.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `VerifyIDInTrustDomain` or something similar.
This is a breaking change.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `receiveSettings( { adblocker: false } )`
Line is too long. [101/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is a bug. We should not be converting the value to a string here.
This is the font used for the category headers.
This is the only change in this file.
I think this should be `all-apis-forwarding-to-active-cluster` to be more clear.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we can use `pretrained=None` here.
I think this is a bit confusing. I think it would be better to say "time a node waits before starting to mine the next block" or something like that.
This is not correct. The media can be an int or a string.
nit: I think we should use `NewObjectDatabaseWithIndex(kv, NewIndex(kv))` here.
This is a bit of a hack, but it's the only way to get the websocket server to run in the background. I'm not sure if there's a better way to do this.
I'm not sure if this is the right way to do this. I'm not sure if there are any other characters that we should be removing.
This is a bit of a hack, but it's the only way I can think of to get this to work. I'm not sure if there's a better way to do this.
I think it would be better to use `te::abs_error` here.
I think this should be `stats "github.com/mysteriumnetwork/node/client/stats"`
I'm not sure if we should be ignoring errors here.
This is a bit of a nitpick, but I think it's better to use `ROMOL_SPTR` here, since it's the type of the return value of `canonicalize`.
This is a polyfill for `NodeList.prototype.forEach` for IE.
This class is not meant to be instantiated.
I think this is a bug fix. The previous code was not working for some cases.
I think we should move this to the top of the list.
I think this should be `cloud-run-events-system`
I think this is a bug. If `attr_value['string']` is `None`, then `attr_value['string'] == value` will be `False` and the `if` will not be entered.
I think this is a bug. The `DisabledPrivacyRpcMethod` is used to disable the method, but it is not used to disable the `PRIV_DISTRIBUTE_RAW_TRANSACTION` method.
I think this should be `addToStaticNodes = false` by default.
I think this should be `traceparentCollection?.FirstOrDefault()`?
This is a bit confusing. `LayoutEntry` is a type, but `RangeGenerator` is a function. I think it would be better to rename `LayoutEntry` to `LayoutEntryType` or something.
This is a bit of a hack, but it's the only way I can think of to get GPUs on FreeBSD. I'm not sure if this will work on all versions of FreeBSD, but it should work on 12.0.
I think this is the right thing to do. The default is to write the BOM, but we don't want that.
I think we can use `self.bbox_roi_extractor = context.bbox_roi_extractor[stages]` directly.
I think this is a bit confusing. I think it would be clearer to say that `allAffectedNodeIDs` is a list of all the nodes that had their underlying data changed, even if it wasn't an user-visible change.
I think this is a breaking change. I'm not sure if we should keep it or remove it.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I'm not sure if this is a good idea. It's not really a container implementation, it's a container type. I'd prefer to keep the implementation as a separate concept.
I think this should be `%v:\n%s` (note the space between the two `%`s)
I think this is a bug. We should not be changing the permissions here.
I think this should be `SkipOnServers []string // if the test needs to be skipped on particular servers`
This import is unused.
This is a bit of a nitpick, but I think it's better to use `re.match` here. `re.fullmatch` is a bit more expensive, and it's not really necessary here.
Missing space after comma.
I think this should be `IConnectionHeartbeatFeature`
I think this should be `private static`
I think we can use `torch.onnx.is_in_onnx_export_mode()` instead.
I think this is a good idea, but I'm not sure if it's worth it. The regex is fairly simple and the pattern is not likely to change. I'd rather keep it simple and not worry about the performance hit.
I think this is a bug. `Block.prototype.hash` should be called here.
This is a debug statement. It should be removed.
This is a bit of a nit, but I think it's better to use `++scan` here.
This is no longer needed, as the `TTemplateParamClass` is handled in the `elseif` above.
This is a bit confusing. I would expect the shrink to be done in the `createSenderResources` call.
This is the only place where we set the local IP address. I think it's fine to do it here, but I'm not sure if we should be doing it in `AddTaskIPAddress` as well.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit of a hack, but it's the only way I could get the tests to run. I'm not sure why it's necessary.
This is a bit of a hack, but it works. I'm not sure if there's a better way to do this.
I think this is the only change that is needed to make this test pass.
I'm not sure this is the right place for this import. I'd rather have it in the `kinto/__init__.py` file.
I think this should be `CLIENT_ASSERT(instr->label_cb == NULL || cb == NULL || instr->label_cb == cb, "label callback function is already set");`
I think we should just remove this line. The `inTransaction` flag is set in the session, and we can just check that.
This is a bit weird, but I think it's ok.
This is a duplicate of the code in `appModules/__init__.py`.
I think we should use `count` instead of `limit` to be consistent with other APIs.
I think this should be `multisend [JSON_DATA]` instead of `multisend 'JSON_DATA'`
This is a change in behavior. The old code would have used the hash of the string as the key. The new code will use the hash of the string and the format. This is a change in behavior.
This file is part of Kythe.
I think this should be `self.config.options.listen_host` instead of `self.config.options.listen_port`
This is a bit of a hack, but it's the only way I could get it to work. I'm not sure if there's a better way to do this.
I think this is a bug fix. If the input string does not contain the placeholder open or close characters, then we should not attempt to replace anything.
I think this should be `SubnetGatewayIPV4Address string `json:",omitempty"`
I think we can remove this field.
This is a bit of a nit, but I think it's better to use `require.NoError(t, err)` here.
This is the only place where we set the log destination. I think it's better to have the `caddy.LogDestination` variable be a global variable, and then have the `caddy.Start` function set it. That way, we can have the `caddy.LogDestination` variable be set in the `main` function, and then we can have the `caddy.Start` function set it to `os.Stdout` if the user
nit: should not need to import the ec2 sdk here
I think this is the right fix. I'm not sure why we were checking for `ExpectData` here.
I think this should be `/-/static/logo.png` instead of `/-/verdaccio/logo`
I think this is the only place where we write out notifications.
Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
I think this should be `<=`.
I think this should be `ServiceDefinitionDocumentState.Merged` instead of `ServiceDefinitionDocumentState.Individual`
I think we should call this `secretsmanager` instead of `ssm` to be consistent with the other secrets manager capabilities.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is the path to the base SVID. It is used to determine if the agent should rotate the SVID.
I think this should be `PullInterval time.Duration` instead of `Duration` because `Duration` is a type alias for `time.Duration` and `time.Duration` is a pointer.
This is a bit of a hack, but it works. I'm not sure how to get jest to run from gulp.
This file is not used.
nit: remove empty line
I think we should add a `non-zero` here.
nit: this is not needed, you can remove it.
This method is not used anymore.
why not use the same path as CertFile?
I think this should be `paych` instead of `paymentChannel`
I think this is the only place where we're using `LocalSquashBranchID` as a branch ID. I think we should just remove it and use `NullBranchID` instead.
I think this should be `P` as well.
I think this is a good change. I'm not sure if we should rename the interface, but I think it's a good change.
This is the only change that is required to make this work.
I think this is the only change that is needed.
This is not a good way to check for root. The user could have a uid of 0 but not be root. The correct way to check is to call geteuid() and compare it to 0.
nit: I think this should be `updated.addPreviousMetadata(base.file().location(), base.lastUpdatedMillis())`
I think this should be `ReadPreference.primaryPreferred` instead.
This is not a good practice. You should use the static import.
I think this should be done before the `klog.V(4).Info(log("created path successfully [%s]", dataDir))` line.
Missing space after #.
This is a bit ugly, but I don't see a better way to do it.
I think this should be `ip_header->ihl * 4` to account for the fact that the IP header is variable length.
Line is too long. [105/80]<br>Use the new Ruby 1.9 hash syntax.<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
nit: `fStruct` -> `struct`
I think this should be `sidebar.analytics.visitor-loyalty` instead of `sidebar.analytics.user-loyalty`
I'm not sure if this is the best way to do this, but it seems to work.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a breaking change. I'm not sure if we should do this.
I think this should be `if (p_jmsg.count("compress_method") > 0)`
I think this is the only place where we use `videoTestElement` so we can remove it from the `let` declaration.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this method is not used anywhere.
nit: remove empty line
I think we should use `wpApiFetch` here instead of `fetch` to be consistent with the rest of the codebase.
I think this is a good idea, but I'd suggest adding a note that these are only used by the algod executable.
This test is not needed anymore, because the unpacker is not used anymore.
Nit: Please remove this empty line.
(style) line over 80 characters
I think this should be `Weh_x` (with an underscore).
I'm not sure if this is the right way to do this. I'm not sure if we should be using the keep connected flag at all. I think we should just be using the keep connected flag to keep the VPN up. I think we should just be using the keep connected flag to keep the VPN up. I think we should just be using the keep connected flag to keep the VPN up. I think we should just be using the keep connected flag to keep the
I think this should be `resume_from_failure: Optional[bool] = False` to match the type of `resume_from_failure` in `execute_plan`.
I think this should be `allow-all-egress-normal` to match the other test.
This is a bit of a hack, but it's the only way I can think of to get the correct grantee name for the root user.
I think we should not set the `ContainerName` here.
This file is part of the Sonata Project package.
I think this is a bug. `reportArgs` should be declared in the `useEffect` hook.
I think this is the only place where we use the PVC name. I think we should use the PV name instead.
Style/ClassVars: Use class variables instead of instance variables.
This is where we would use the private state to do the validation against
Layout/ExtraSpacing: Unnecessary spacing detected.<br>Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
I think this is a good change. I'm not sure if we should have a default value for this, but I think 8 is a good value.
This is a private class, so it should be prefixed with an underscore.
Metrics/CyclomaticComplexity: Cyclomatic complexity for format_markdown is too high. [10/6]<br>Metrics/PerceivedComplexity: Perceived complexity for format_markdown is too high. [10/7]<br>Metrics/MethodLength: Method has too many lines. [10/5]<br>Metrics/LineLength: Line is too long. [1
I think we should use `neve_add_settings_to_hfg_rows` here.
Please remove this line.
This is a BC break. The method signature should be changed to `public function fileExists(Hash $hash): bool;`
I think this is the right fix. I'm not sure why we were setting this to `IResource` in the first place.
I think this should be a warning.
This is a bit of a nit, but I think it's better to use `goog.isNumber` here.
This is a bit of a hack, but it's the only way I can think of to get the type name to show up in the docstring.
I think this is a bit of a hack, but it works. I'm not sure if there's a better way to do this.
This is a bit of a hack. I'm not sure how to do this properly. I'm not sure if it's even possible. I'm not sure if it's even worth it. I'm not sure if it's even worth it. I'm not sure if it's even worth it. I'm not sure if it's even worth it. I'm not sure if it's even worth it. I'm not
I think this should be in the `deps` list.
I think we should use `getById` here, because we want to throw an exception if the article is not found.
This class is not serializable.
I think we should make this a pointer, so that it can be nil.
This is a bit of a hack, but it's the only way to get the MMaped flag to be set correctly.
This is not correct. It should be `if (n >= length()) return this;`
This import is unused.
I think this should be `ChecksumAddress` (capitalized)
Can't upgrade meta from V1 to V3
I think this should be `if (variableInMap) {`
I think this should be removed.
This is a model object.
This is a bit of a nitpick, but I think it's better to have the `g_value_get_object` call on the next line, so that the `g_value_dup_object` call is only called if the `g_value_get_object` call succeeds.
Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
I'm not sure if this is a good idea. It's not clear to me what the caller is trying to do. I'm not sure if this is a good idea. It's not clear to me what the caller is trying to do.
This is a bit of a hack, but it's the only way I could think of to get the resolution op to be included in the graph.
I think this should be `len(n) - 1` since `clen` is used to find the index of the first null byte.
I think this is a bug. The `name` attribute is required.
This is just layout as far as the user is concerned.
I'm not sure if this is a good idea. I think it's better to keep the old hashes and add a new one.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should use `String(256)` here, too.
This is a bit confusing, as `ibftTwo` is a `BftTransactions` instance.
I think we should keep the `entry_path_type` and `entry_path_description` parameters, as they are used in the `get_entry_path` method.
`AppId` -> `appId`
This is a bit weird, but I think it's ok. We're appending to a slice that is already initialized.
I think we should use `WorkflowType` here.
I think this is a bit of a misnomer. I think it should be `MakeLoggerForceEnableDebug`.
This import is unused.
I think this is the only place where we still use `*` as a wildcard.
Please add a space after the `=>` operator.
I think this is a bit confusing. I think it would be better to say "if --min-gas-price is in the list and condition is that --miner-enabled should not be true, we log a warning."
I think we should keep the `tagIds_` and `tagNames_` here.
I think this is a bug. The `queryRelation` is not used here.
I think this should be `H2O_HTTP2_ERROR_NO_ERROR` (or `H2O_HTTP2_ERROR_INTERNAL_ERROR` if you want to be more specific).
nit: `RemoveReachableFiles` is a class name, not an action name.
I think we should be able to get the region from the machine object.
This is a query request.
I think this is a bit confusing. The default is null, so it's not overridden.
This is the default value for `SpanCreationSettings.Parent`.
Remove empty line.
This is a regression. We should not be setting the padding to 0 here.
This is a bit of a hack. I'm not sure if there's a better way to do this.
(style) space required before the open parenthesis '('
I think this is the only place where we use the `dataresidency.StoreSingleton` directly. I think we should move this to the `dataresidency` package and use it there.
I think this should be `debug.signal_name(signal) in self.BLACKLIST` (or `not in` if you prefer)
I think this should be `mFirstContentfulPaint` (without the `F`)
Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit confusing. The `urlParams` are the parameters that are passed to the query, but the return value is the URL. Can we rename this to something like `getServiceAccountSiteURLWithParams`?
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit more restrictive than the previous format. I think it's fine, but I'm not sure.
I think this is a breaking change. I think we should keep the default sampler as it was before.
This class is not used anywhere.
I think this should be `uint8` instead of `uint16` since the error code is only 1 byte.
I think this should be `return nil, fmt.Errorf("open bucket %q: invalid query parameter %q", u, u.Query().Get(param))`
This is not part of the interface.
nit: throw std::runtime_error("Value of nbits is Negative")
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit of a nit, but I think it's better to use `yarpcerrors.CodeOK` here instead of `yarpcerrors.ErrorCode(err)` since the latter will panic if `err` is nil.
I think this is not needed anymore.
I'm not sure if this is the best way to do this. I'm not sure if we should be setting the format on the package object or the package builder. I think it's the package builder, but I'm not sure.
I think this should be a `FileNotFoundException` instead of `IllegalArgumentException`
I think this should be removed.
I think this should be `forge.puppetlabs.com` and `forgeapi.puppetlabs.com` should be the aliases.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this is a bug. If the localField is not a real path, then it should be a virtual path. In that case, the localFieldPath should be the virtual path.
I'm not sure about this. I'm not sure we should expose this in the API. I think it's better to have a `GET /v1/capabilities` endpoint that returns a list of capabilities.
I think this file is not needed.
I think this should be `FAILED_TO_LOAD` (all caps) to match the other enum values.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should keep the old path `/graph` for compatibility.
I'm not sure if this should be a global variable. I think it should be a per-thread variable.
This is a breaking change.
I'm not sure if this is the right place for this. I think it should be in `dr_stats.h` and `dr_stats.c` (or `dr_stats_internal.h` and `dr_stats_internal.c`).
I think this should be `INFO` level.
This import is not used.
Standards: Please add braces to this conditional statement.
I think this should be in the `test/functional/replset_tests.js` file.
I think this is the only place where we need to reset the timer.
I think this is a bug fix. The old code would have failed if the precursor was a negative number.
This is a bit hard to read. Can you please add a space after the `,` and before the `]`?
This is a bit of a weird name. I'd prefer something like `SCOUT_RAID_IDS` or `SCOUT_RAID_ID_LIST` or something.
I think we should use `sigs.k8s.io` as the prefix for all our annotations.
I think this should be a `FINE` level message. It's not a warning, it's just a message.
This method is not used.
This is a breaking change.
I think we should keep the old name for now, and deprecate it in a future release.
I think this should be a `String` instead of a `URI`
I'm not sure if this is the best way to do this, but it works. I'm not sure how to get the `__examples__` folder to be part of the webpack build.
I'm not sure if this is the right way to do this. I'm not sure if the assembly is already loaded into the load context.
I think this should be configurable.
This is a bit of a nitpick, but I think we should use `const existingTag = { accountID: '999', propertyID: 'UA-999-9' };` instead of `const existingTag = { accountID: '999', propertyID: 'UA-999-9' };`
I think this is a leftover from the refactoring.
Metrics/LineLength: Line is too long. [105/120]
I think we should use `countlyCommon.addParamsToUrl` here.
I think we should not change the error message here.
I think we should keep the old method name for backward compatibility.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should use `com.amazonaws.ecs.capability.task-cpu-mem-limit` instead of `ecs.capability.task-cpu-mem-limit` as the attribute prefix.
I think this test is too fragile. It's not clear what the test is trying to do. I think it's trying to test that the build file is generated, but it's not clear what the build file is supposed to look like. I think it's also trying to test that the build file is deleted, but it's not clear what the build file is supposed to look like. I think it's also trying to test that the build file is deleted
Please remove this import.
This is a singleton, so we should be able to remove the `getInstance` method and just use `INSTANCE` directly.
I think this is a good change, but I'm not sure if we should be passing the template name as a local variable. I think it's better to just use the template name in the partial name, like `app/views/answers/form_templates/boolean_question.html.erb` and `app/views/answers/form_templates/string_question.html.erb` and so on.
I think this is not correct. If the version is null, then the version is not an enterprise edition.
I think we can use `apis.SupportedDiskType` here.
This is a bit of a hack, but it's the only way I could get the login page to load. I'm not sure why this is necessary, but it works.
This is a bit of a nit, but I think it's better to use `axe.utils.getNodeAttributes` here instead of `node.attributes` because it's more explicit.
Style/MixinGrouping: Put require for mixins before regular requires.
I'm not sure if this is the best way to do this. I'm not sure if there's a better way to do this.
I think this should be "A name such as Europe or Overseas" (without the "such")
I think we should also set the `StorageClass` field in the volume object.
This suppresses telemetry from exporter's own code to avoid live-loop situation.
This is a duplicate of the above.
I think we should not set this here.
I think this should be `collection.configName` (with a dot) to be consistent with the other properties.
I think we should return an empty string here instead of null.
I think this should be an error.
I think this should be moved to the `EndMethodHandler` so that we can record the telemetry after the method has been called.
This file is not used anymore.
I think this should be `SpanContext` instead of `SpanReference`
I think this is wrong. The copyright year should be 2017.
This function removes the white spaces in the name, and also remove the pointer declaration "*" (it have no sense in python)
This is the only change that I'm not sure about. I'm not sure if we should be loading the log module here. I think it's better to load it in the `logfile` branch below.
I think this should be `node.as_string().startswith('from .') and not node.as_string().startswith('from ...')`
I think this should be `Console.Error` instead of `Console.WriteLine` so that it doesn't get mixed with the output of the test.
I think this is the only place where we need to change the session.
I'm not sure why this is needed. I'm not sure what the problem is.
This is a bit of a hack, but it's the only way I could get the response to be sent before the tag is added to the context. I'm not sure if this is the best way to do it, but it works.
I think we should also support `on_input` here.
This is a bit of a hack, but it's the only way I can think of to prevent the player from being attacked by a PvP creature.
This is a bit of a weird one. I'm not sure if we should be logging this or not. I think we should, but I'm not sure if we should be logging the error or not.
Please remove the extra comma at the end of this line.
I think this should be 2020-2021.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `encryption.EncryptedReferenceSize`
I think we should return nil here.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
Please remove unused imports.
This method is not used.
I think this is a bit dangerous. If the collection is already a single partition, this will rechunk it into a single partition. I think we should check for that case and return the collection unchanged.
nit: move this line to the end of the file.
I think we should use the same hashes as mainnet.
I think this is a good change, but I'm not sure if it's worth it. I'm not sure if it's worth it to have a separate line for each field. I think it's fine to have a separate line for each field if it makes the code more readable. I'm not sure if it's worth it to have a separate line for each field if it makes the code more readable. I'm not sure if it's worth
I think this is a good change. I'm not sure if we should have a `is2xxSuccessful()` method in `HttpStatus` though. I think it's a bit confusing. I'd rather have a `isSuccessful()` method.
I think this should be `data._attachments[filename].version` instead of `data._attachments[filename].versions`
I think we should be able to remove this line.
This is the only change I made to the defaults. I'm not sure if this is the right thing to do, but it seems to work.
This is a bit of a hack, but it's the only way I could think of to make this work. I'm not sure if there's a better way to do this.
I think we should remove this line.
I think we should use the same pin numbers as the ESP32.
I think this should be a separate PR.
I think we should make this a constant, and then we can use it in the `Makefile` to set the `COMPOSE_VERSION` variable.
I think this is the only place where we use `cls_name` instead of `class_name`. I think we should be consistent.
nit: can we use `StringUtils.contains` instead of `String.contains` ?
This should be a `bool` instead of a `boolean`.
This import should be removed.
I think we should use `DefaultCAFile` and `DefaultCertFile` instead of `DefaultCAURL` and `DefaultCertURL`
This is the only place where we use the `config` package. I think it's better to move the `config` package to the `fs` package.
This is a breaking change. I think we should just remove this method.
I think this should be `missing-param-doc` (and the same for the other tests below).
This is a bit of a hack, but it's the only way I could think of to get the nvidia runtimes into the daemon.json. I'm not sure if this is the best way to do it, but it works.
This is a bit of a hack, but I couldn't figure out how to get the config into the send_email function. I'm not sure if this is the best way to do it, but it works.
This method is not used in the codebase.
I think this is a bug. We should not be converting a Series to a DataFrame here.
I think this should be done in the constructor of `Account` instead.
This is a copyright statement. Please remove it.
This is a bit of a hack, but it's the only way to get the ± symbol to show up in the regex.
This is the label for a checkbox in the Advanced settings panel.
I think this is a good change, but I'm not sure if we should also lowercase the field names in the `encoder` struct. I think it's fine to lowercase the field names in the `encoder` struct, but I'm not sure if we should lowercase the field names in the `encoder` struct.
Style/EmptyMethod: Put empty method definitions on a single line.
I think this is a typo.
This is a TODO for the next release.
I think this is a leftover from the refactoring.
Please use `use Shopsys\FrontendApiBundle\Model\GraphqlConfigurator;` instead of `use BadMethodCallException;`
I think this should be `CatchBlockLogException` instead of `CatchBlockLogExceptions`
This is a bitmask, so it should be an int.
I think this should be `KOKKOS_TOOLS_ENABLE_LIBDL` instead of `KOKKOS_ENABLE_LIBDL`
I'm not sure if this is the best way to do this. I'm not sure if it's possible to undo a tab close. I'm not sure if it's possible to undo a tab close in a way that is consistent with the way the tab was closed. I'm not sure if it's possible to undo a tab close in a way that is consistent with the way the tab was closed in a way that is consistent with the way
I think this is the only place we use `os/exec` directly. I'd prefer to use `exec.ExecCmd` instead.
I think this should be `BACKEND_SERVICE_ACL` or something similar.
This is a bit weird, but I think it's fine. I think the main reason we have this is to make sure that we don't accidentally use `T` in the code. I think we should be fine with this.
This is a bit of a weird one. I'm not sure if it's a bug or not. I'm not sure if it's a bug or not. I'm not sure if it's a bug or not. I'm not sure if it's a bug or not. I'm not sure if it's a bug or not. I'm not sure if it's a bug or not. I'm not sure if it
This test is not needed anymore.
I think this should be `if (asSmarts) {`
nit: I think we should also check for `CriOS` here.
I think this should be `--force` to be consistent with the other commands.
I think this should be `opts_.cpp_std >= cpp::CPP_STD_17 &&` (note the `cpp::` prefix).
This is a breaking change. We should add a deprecation warning.
Style/RescueStandardError: Avoid rescuing StandardError.
I think this is a good idea, but I'd prefer to see it in a separate commit.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
This is a bit of a hack, but it seems to work. I'm not sure if there's a better way to do this.
This is a bit hard to read. I'd suggest splitting it into multiple lines.
I think this should be `mux.HandleFunc` instead of `httpMux.HandleFunc`
I think we should also check that the duration is not negative.
nit: `struct` -> `arg`
This is a map from canonicalized key to original key.
I think this is a good change, but I'm not sure if we should be changing the text here. I think it's better to leave it as-is and just change the `bravePageVisibility` variable to `bravePageVisibility = 'Automatically sends crash reports to Google'`
I think this should be `BiFunction<? super T, ? super U, ? extends R> mapper` instead of `BiFunction<? super T, ? super U, R> mapper`
I think we should also check the `Spec` here.
This is the name of the target to run. If not provided, the default target will be used.
I think this should be `http://*:8080/` instead.
I think this is the only file that needs to be regenerated.
I think you can remove this line.
I think we should be able to remove this line.
I think we should add a `cache_for` here, so that we don't have to recalculate this every time.
(style) line over 80 characters
I think this should be `TLS certificate chain and hostname of solicited routes will not be verified, do not use in production!`
This should be 6.6.2, right?
I think this should be `force-qr` to be consistent with the other subcommands.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is the same as `df.spark.explain(mode="extended")`.
why change the name?
I think this should be `t.Fatalf` instead of `t.Errorf`
nit: I think we should use `using var` here.
I think this is a bit of a hack. I'd rather have a separate function for Python 2.
I think this is a bit of a hack. I'd rather have a `getRoute()` method on the datasource that returns the route name.
I think this is a good idea, but I'm not sure we should be waiting for 8 seconds here. I think we should be able to get away with 1 second.
I think this should be `RootDirectory / "packages" / "libsqreen" / "1.1.2.2"`
I think we should keep the v10 import here.
I'm not sure if this is the right place to put this. I'm not sure if it's even the right place to put it at all. I'm not sure if it's even the right place to put it at all.
I think this test is not needed. The constructor already tests the version.
This is a bit weird. I think it's better to use `check.opt_list_param` here.
This import is unused.
I think this should be `log.Errorf` instead of `log.Infof`
I think we should use the default network mode here.
I think this is a good idea, but I'm not sure if we should call it `includes_exercises?` or `has_exercises?` or something else. I think `has_exercises?` is a little more clear, but I'm not sure if it's a good name. Thoughts?
I think this should be `if not conf.get("SQLALCHEMY_TIMESCALE_URI"):` to avoid a `KeyError` if the key is not present.
I think this is the right thing to do. If the journal is disabled, we should just return the error.
This test is a bit odd. It's testing that the default argument is not evaluated in the scope of the function, but it's not testing that the default argument is not evaluated in the scope of the function. I think it's testing that the default argument is not evaluated in the scope of the function, but it's not testing that the default argument is not evaluated in the scope of the function. I think it's testing that the default argument is not evaluated in the
This is the only place where we are using the `flowOperations` interface. I think it would be better to have a `flow.Add()` method that calls `flowOperations.Add(flow)`.
This should be `NoRegionError(BaseEndpointResolverError)`
I think this is a breaking change. I'm not sure if we can do this.
This is a bit of a nit, but I think it's better to use `nil` here.
This is a bit of a hack, but it's the only way I could think of to get the frame name. I'm not sure if there's a better way to do this.
I think this is a good change. I'm not sure if we should be testing the return values of the `Register` function, but I think it's a good idea to check for errors.
This is a bit of a hack, but it's the only way I could get the checks to be parsed before the checks are translated. I'm not sure if there's a better way to do this.
I think this should be `dockerfile path expected, got %s`
I think this is not needed anymore.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit weird, but I guess it's fine.
This is a bit of a nitpick, but I think it's better to have a blank line between the `@bdd.given` and the function definition.
This is a bit of a hack, but it's the only way I could think of to get the yank text from the prompt. I'm not sure if there's a better way to do this.
I think this should be 16.
This is a change in behavior. The previous version of this function would return an error if `pidof` failed. Now it will return `false` if `pidof` fails.
This is a breaking change. We should probably have a migration path for this.
I think this should be `if aws.CredentialsAssumeRole != nil && aws.CredentialsSecretRef.Name == ""`
This is a segfault. I'm not sure why.
why use config.Default.DB here?
This is a bit of a hack, but it's the only way to get the block republished. I'm not sure if there's a better way to do this.
This is the change that fixes the test.
I think this is a good change. I'm not sure if we should rename the function though. I think it's a bit confusing to have a function called `detectStale` that doesn't actually detect stale endpoints. I think it would be better to rename it to `updateStaleEndpoints` or something like that.
(style) space required before the open parenthesis '(' (style) space required before the open parenthesis '(' (style) space required before the open parenthesis '(' (style) space required before the open parenthesis '(' (style) space required before the open parenthesis '(' (style) space required before the open parenthesis '(' (style) space required before the open parenthesis '(' (style) space required before the open parent
Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
This is a bit ugly, but it's the only way to avoid duplicating the code.
I think this should be `int64(o.MaxPayload) > int64(o.MaxPending)`
Please avoid wildcard imports.
This is a bit of a hack, but it works. I'm not sure if there's a better way to do this.
This import is unused.
I think this should be `InitialWorkingDir` (capital I) as well.
I think we can remove this test.
I think this should be `[]string` again.
I think this should be "Include additional server-side path during comparison and copy."
I think this is a bit misleading. The schema is not dereferenced, but the original schema is.
I think this is not necessary.
This file is part of logilab-common. It's copyrighted by LOGILAB S.A. (Paris, FRANCE) and licensed under the terms of the MIT license. See the LICENSE file for more details.
I think this is the only place where we need to pass `scol` to `DataFrame` constructor.
I think we should use `FLAGS_pids_dir` here.
I think this is the only place where we need to check for the head.
This is the change that makes the test pass.
I think we should keep the TPR names for now.
I think we should also log the `sErr.ErrStatus.Details.Causes[0].Field` here.
I think this is a bit more readable as `if not package_stats or not isinstance(package_stats, dict) or not {'total_files', 'total_bytes'}.issubset(package_stats):`
I think we should rename this to `Auth` or `Security`
I think this should be `options=None` instead of `options=Options()`
This is a bit of a hack, but it's the only way I could get the tests to pass. I'm not sure why the permissions are different on my machine, but I'm guessing it's because I'm on a Mac. I'm not sure if there's a better way to do this.
I think this should be `*net.UDPConn, error`
I think this should be `int.MaxValue` instead of `-1` to indicate that we should use the default value.
I think this is a bug. We should never stop at max_bb_instrs - 1. We should stop at max_bb_instrs.
This is a change in behavior. The previous code would have allocated a zero-length array. I think this is the correct behavior.
I think we should keep the old name for backward compatibility.
Please use the correct spelling "hinzufügen" instead of "hinfügen".
I think we can use `OPENEBS_IO_INSTALL_DEFAULT_CSTOR_SPARSE_POOL` as the env key.
I think this should be `github.com/algorand/go-algorand/data/basics/base64`
I think we should keep this check for IE9. It's not a problem for other browsers.
I think this should be `null: false, default: 0` instead of `false, 0`
I think this should be `output.UserOut.Warnf("Warning: the provided docroot at %s does not currently exist. Using default docroot.", docrootRelPath)`
I think this should be `result.stdout.strip.empty?` and `result.stderr.strip.empty?` to match the other `unless`es.
I'm not sure if this is the right place to put this. I'm not sure if it's even possible to put it in the right place.
I think this is a breaking change. I think we should keep the old method name and add a new one.
Layout/AlignParameters: Align the parameters of a method call if they span more than one line.
This file is covered by the GNU General Public License. See the file COPYING for more details.
This is a bit of a nitpick, but I think it would be better to move this `useRequestInterception` call into the `beforeAll` block.
This is a bit weird, why do we need to call `view_set_fullscreen` here?
I think this should be `Uri` instead of `string`
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `log.V(logf.TraceLevel).Info("not found", "err", err)`
I think this is a bug. The flowId is not the flowDefinitionId. The flowId is the executionId. The flowDefinitionId is the flowId.
Please remove the extra space here.
This test name is a bit misleading.
I think this should be `Microsoft.Rest.TransientFaultHandling.ShouldRetryHandler.#Invoke(System.Int32,System.Exception,System.TimeSpan&)`
why not use `ChainID()`?
I think this is a bug. `request` is a `std::unique_ptr` and `request->size()` is not a valid operation.
nit: I think we should use `localhost` here.
Style/ClassVars: Replace class var @missing_text with a class instance var.
I think this is the only place where we need to pass an empty struct.
Line is too long. [111/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
`beanCls` is nullable, so `beanCls.getAnnotation(RpcSchema.class)` may throw NPE.
I think this should be `disable_annotations = true`
I think we should keep the `common` namespace.
nit: I think we should use `Types.LongType.get()` here.
I think this should be nullable.
I think this is a bug. `GetShardID` returns `ShardID` which is an `int32`. `strconv.Itoa` expects `int`.
I think this is a good change, but I'm not sure if we should be using `angular.extend` here. I think it's better to just use `angular.merge` and then we don't have to worry about the order of the arguments.
I think this should be `requireEach(inRange(0, 10))` (notice the `Each`)
I think this should be `emptyWithNulls()` to be consistent with the other methods.
I think this should be `elements/{element}` instead of `element/{product}`
nit: this is not a dragon.
All collection changes must be done on the main thread.
I think we should be able to remove this line.
This is the only place where we start the server and then stop it. I think we should keep it here.
I think this is the only place where we're calling `StartTimingWrite` with no arguments. I think we should just remove the `StartTimingWrite` method and call `BytesWritten` directly.
I think this is a bug fix. The original code was wrong.
I think this should be `getters.getAliasProp(*alias_, *prop_);`
This is a bit of a weird one. I think we should just remove this block entirely. If we're not running on windows, we should always have a transport.
I think this should be `offlineMode = plugins.getConfig("api").offline_mode || false;` to avoid undefined errors.
This is the only place where we use `self._get_selenium_options()` and it's only used to set the `acceptInsecureCerts` option. I think it would be better to move this to the `self._get_firefox_options()` method.
I think we should use `ErrNotFound` for all of these.
Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
I think this is a bit of a code smell. It's not clear to me why you're using a vector of dependencies here. It seems like you should be using a vector of subpasses, and then adding dependencies to each subpass.
I think we should be consistent with the rest of the codebase and use lowercase for struct fields.
I think this should be a warning.
I think this is a bug in the test. It should be `mpl_renderer.comms['default'] = self.default_comm`
I think this should be FALSE, FALSE, FALSE. The CQDs are not sent down to the child queries.
This is a bit of a hack, but it's the only way I could get the library to update when the user clicks on the "Apps" tab. I'm not sure if there's a better way to do this.
I think we should be able to remove this import.
Style/MutableConstant: Freeze mutable objects assigned to constants.
import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody; import javax.ws.rs.core.MediaType;
This is no longer needed, as we now use the new JUnit 5 API.
This error message is a bit confusing. I think it would be better to say "given multisig preimage hashes to neither Sender nor AuthAddr".
I think we should keep this enabled. It's a good way to detect when the cluster is unavailable.
I think this should be `const`
I think this is the only change that's needed to make this work.
nit: unused import
nit: I think we should be consistent with the naming of the `inputSchema` parameter. I think it should be `schema` everywhere.
I think this is a bit confusing. I would suggest to use `to - s.BlockNumber` instead.
I think this is the wrong place to do this. The configProto is not the same as the configProto that is passed to the constructor. The configProto that is passed to the constructor is the one that is read from the file. The one that is read from the file is the one that is passed to the constructor. So the one that is passed to the constructor is the one that is read from the file. The one that is read from the file is the one that
This is a bit of a hack, but it's the only way I can think of to avoid re-uploading the same action for a target. I'm not sure if there's a better way to do this.
I think this should be `/se/grid/newsessionqueue/size` to be consistent with the other endpoints.
Layout/TrailingWhitespace: Trailing whitespace detected.
This is a bit of a hack, but it's the only way I could get the signature algorithm factory to be instantiated before the vertx instance is created. I'm not sure if there's a better way to do this.
I think this interface should be in the `Ergonode\Multimedia\Domain\Service` namespace.
I'm not sure if this is the right way to do this. I'm not sure if we should be passing the spanId to the constructor. I think it would be better to have a factory method that creates a new span context with the given spanId.
This is a recursive mutex, so it should be unlocked in the destructor.
I think this should be done in `fbo.applyMDUpdatesLocked` after the `fbo.applyMDUpdatesLocked` call.
I think this is the only place where we use `computed.alias` so we should be able to remove the `computed` import.
This is a bit of a hack, but it works. I'm not sure if there is a better way to do this.
I think this is the only change that is not backward compatible.
I think this should be `--no_chromium` to be consistent with the other options.
This method is not used in the codebase.
I think we should remove this using statement.
I think this should be `1.8.x` to match the other aliases.
I think it would be better to use `array_key_exists` instead of `isset` here.
I think we should avoid this. It's not a good practice to import all static members of a class.
This is a bit of a hack, but it's the only way I could think of to get the values to unpack for NamedTuple. I'm not sure if there's a better way to do this.
Please remove empty line.
I think this is a bit too clever. I'd prefer to see a simple `if (step[step.length-1] == "'")` check.
I think this is a bit confusing. I'd say "Translate the AsciiDoc source FILE(s) into the backend output format (e.g., HTML 5, DocBook 4.5, etc.)" or "Translate the AsciiDoc source FILE(s) into the backend output format (e.g., HTML 5, DocBook 4.5, etc.)" (or "Translate the AsciiDoc source FILE(s) into
Use 2 (not 4) spaces for indentation.
This is not true. We block SIGSEGV and SIGBUS in the signal handler.
I think this is a good change. I'm not sure if we should be using the `BundleUtil` here, though. I think we should be using the `BundleUtil` in the `Access.java` class, and then just use the string here.
I think this should be `authPath` (lowercase) to match the other fields.
I think we should log the exception here.
I think this should be `return` instead of `await ProduceEnd()`?
This fixture is no longer used.
Please use Yoda conditions.
Please add a blank line after the `declare(strict_types=1);` statement.
Please use the correct spelling "ligado" instead of "ligado".
`split table` -> `split table region`
I think this should be `dispatcher.beforeClickOn(element, driver);`
I think we should add a `json:"-"` here to avoid the `ipAddresses` field from being serialized.
I think this is the only place where we use `regUse` and `regRelease` functions. I think we should move them to `snapshot` and `image` packages.
I think this should be `local_mem_size` instead of `max_work_group_size`
This is a bit weird. The tunnel is closed, but we still need to destroy it. I think we should just remove this line.
Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
This is the default label for the status widget. You can change it by overriding the `widgetTitle` method in the widget class.
I think we should also test `tail(10, 10)` and `tail(10, -990)`
This is not correct. The player is not moving to the destination.
This is a bit of a breaking change, but I think it's worth it. The `task` command is now a thin wrapper around `execute_task`, which is a much more flexible interface.
I think this should be `True` since it is a `Plot` object.
I think we should keep the default value here.
I think this should be `PauseContainerImageName = "amazon/amazon-ecs-pause"`
I think this is a bug. The `nbrIdx` is not incremented.
nit: unused import
Line is too long. [105/80]<br>Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
I think this is a change in the formatting of the license header.
I think this should be `cfg.EnableProcessBlockStats`
I think this is a bug. The `from_motorway` parameter is not used.
I think this should be `const` instead of `public const`
This is a bit of a nitpick, but I think it would be better to call this `theatreConfig` to match the variable name.
Style/MutableConstant: Freeze mutable objects assigned to constants.
I'm not sure if this is the best place to put this. I'm not sure if it's even necessary. I'm not sure if it's even possible to disable the spinner. I'm not sure if it's even possible to disable the spinner in a way that doesn't break other things. I'm not sure if it's even possible to disable the spinner in a way that doesn't break other things in a way
This is a bugfix, so it should be in a separate commit.
why do we need to change the testTransferHash?
This is a change in behavior. The old code would have returned the timestamp with the offset of the original timestamp. The new code will return the timestamp with the offset of UTC.
I'm not sure if this is the right place for this. I think it should be a property of the command, not the command wrapper.
I think this is a good change, but I'm not sure if we should rename the method. I think it's a bit confusing to have a method called `set_record_timestamp` that actually does two things. I think it would be better to have two methods, one called `set_record_timestamp` and one called `bump_and_store_timestamp`.
This is a bit of a hack, but it's the only way I can think of to get the atom map number to be written out. The atom map number is a 1-byte unsigned integer, but the `streamWrite` function expects a `char` as the second argument. So, I'm casting the `tmpInt` to a `char` and then using the modulo operator to get the correct value.
This is a bit of a hack, but it's the only way I could think of to get the old time to be used in the new time intensity.
This method is not used.
I think this is a bug. The default value should be true.
This is a bit of a hack. I'm not sure if there's a better way to do this.
I think this is not required.
I think we should keep these fields. They are used by the frontend to determine which client library version is being used.
I'm not sure if this is the right way to do this. I'm not sure if this is the right way to do this.
I think this should be 500000000000000000L (500 billion) instead of 500000000 (500 million).
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
nit: I think we can remove this test as it's now covered by the `createDefault` test.
This is a bit ugly, but I don't see a better way to do it.
This is a bit of a hack, but it's the only way I can think of to generate the imports for the global namespace.
This method should be removed.
I think this should be `Start applying %d manifests to namespace %q` (without the `to`)
typo: RESUTL -> RESULT
I think this should be `egressConfig *config.EgressConfig` (notice the `*`)
This is a breaking change. I think we should have a `Root` method that returns a single root.
This is a label of everything
This flag may have unexpected consequences when uploading/downloading files. If both this flag and "--drive-use-created-date" are set, the created date is used.
This is not thread safe. The flow controller may be in the middle of a call to unregister_writer.
I think this should be `None` instead of `''` as the default value.
remove empty line
This is wrong. You need to use the hash_table_size(d->completed_files) here.
Style/GuardClause: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
This file is distributed under the University of Illinois Open Source License. See LICENSE.TXT for details.
This file is covered by the GNU General Public License. See the file COPYING for more details.
I'm not sure what this is for. I'm not sure what the `GraphSummaryToolbar` is either. I'm not sure what the `UserControl` is either. I'm not sure what the `// for designer` is either. I'm not sure what the `//GraphSummaryToolbar` is either. I'm not sure what the `//UserControl` is either. I'm not sure what the `// for designer` is
I think we can use `num_stages` instead of `stage_with_dcn` here.
I think we should check the project id in the `application.sync` RPC.
This is a bit of a hack, but it seems to work. I'm not sure if there's a better way to do this.
nit: I think this should be `Encoding.ASCII.GetBytes("hello, world")`
Please remove this line.
This is a bit of a hack, but it's the only way I could get the compositor to resume. I'm not sure why it's not resuming on its own.
This is a bit of a hack, but it's the only way to get the callback to work. I'm not sure if there's a better way to do this.
I think this should be `v1.9.0-master` to match the other versions.
Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
This should be `?ReflectionNamedType|null`
Line is too long. [105/80]<br>Use 2 (not 3) spaces for indentation.
This is a bit confusing. I would have expected the opposite.
I think we should keep SIGKILL here. It's not a graceful shutdown signal, but it's a signal that we should shut down immediately.
This is a bit confusing. I think it would be better to have a separate method for the case where `service` is `null`.
I think this is a good change, but I'm not sure if we should use `DD_INTEGRATIONS` as the default value. I think it's better to use the default value of `DD_DOTNET_TRACER_HOME` if it's not set.
This is a bit of a hack, but it's the only way I could get the keys to be sent in the correct order. I'm not sure if there's a better way to do this.
This is a bit of a nit, but I think it's better to use `std::vector::assign` here.
This is a bit of a hack, but it's the only way I can think of to get the read preference to be passed down to the cursor. I'm not sure if there's a better way to do this.
I think this should be a `map[string]struct{}` to avoid allocating a new bool for every claim.
I think this should be `time.Since(startTime) < 30*time.Second` (note the `>`)
I think this test is redundant, since it's already tested in `TestAuthenticate_WhenSignatureIsCorrect`
I think we should use `fs::FileUtils::dirname()` here.
I think this is a bug. The subscriber should be created in the loop.
I'm not sure if this is the best way to do this. I'm not sure if we should be setting this in the first place. I'm not sure if we should be setting it to the current working directory. I'm not sure if we should be setting it to the current working directory if it's not set. I'm not sure if we should be setting it to the current working directory if it's not set to the current working directory. I
Line is too long. [105/80]<br>Space inside { missing.<br>Space inside } missing.
I think this is a bit of a breaking change, but I think it's worth it.
This is a BC break. The config is now passed to the mailer.
I think this should be `github.com/algorand/go-algorand/crypto/signature`
`gJobMgr` is a global variable, it is not necessary to check whether it is null.
This is a bit of a hack, but it's the only way I could think of to get the composite root to work. I'm not sure if there's a better way to do this.
This code example demonstrates how deny uploads of objects without server-side AWS KMS encryption to an Amazon Simple Storage Solution (Amazon S3).
I think this is the only change that is actually needed.
This is a unicode string, so you don't need to decode it.
This method is used by the `HttpClientDiagnosticListener` to get the `http.url` tag value.
This is a bit of a hack, but it's the only way I can think of to get the correct color. I'm not sure if there's a better way to do this.
The 'Xunit.Extensions' namespace is not used.
nit: `source.iceberg.reader.fetch-batch-size` -> `source.iceberg.reader.fetch-batch-size`
This is a breaking change. I think we should just remove this import.
1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.
I think this should be done in the playback manager.
I think this should be `KOKKOS_ENABLE_DESUL_ATOMICS` (no `IMPL_`)
I think this should be `const { ReadPreference } = require('mongodb');`
This import is unused.
I think this should be `maximumPullRetries - 1` since the first pull will not be retried.
This is a bit of a nitpick, but I think it's better to use `strlen` here.
This test is no longer relevant.
I think this should be `const`
Line is too long. [81/80]<br>Space missing after comma.
nit: I think this should be `use-starting-sequence-number-default` to match the name of the config property.
I'm not sure if this is a good name for this check. It's not really a tautology, but a self-comparison.
.. Source type.
I think this is the only place where we need to update the IPFamily field.
This is a regression. The message was changed in #1000.
I think this should be `const Name = "vsphere"` (without the `string` type)
I think we should use `edge.node.kubernetes.io/role` instead of `node-role.kubernetes.io/edge`
I think we should remove this line. We don't need to install git on the VM.
`returnPartly` is not used.
This link is dead.
I think we should not update the policy here. The policy is already updated in the volumePolicy.Spec. We should only update the policy in the volumePolicy.Spec.
This import is unused.
I think this should be `http://localhost` to match the default in the config.
I think this is a bug.
I think this is the only place where `config.EncoderAppPathDisplay` is used. I'd suggest to rename it to `config.EncoderAppPath` to be consistent with the rest of the code.
I think this should be `logrus.WithError(err).Warnf("invalid configuration: %v", err)`
This is no longer needed as we now have a default rule in the chain.
I'm not sure if this is the best way to do this, but it works. I'm not sure how to get the `__examples__` folder to be part of the webpack build.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
- loss (Tensor): The semantic loss for semantic head.
why not use `version` directly?
This is a bit of a hack, but it's the only way to get the syscall number from the Mach trap.
This is a change in behavior. I think it's better to keep it as a warning.
This method is not used anywhere. Please remove it.
This method is only used in `dagSeed(final long, final long)` and `dagSeed(final long, final long, final long)`. I think it would be better to move it there.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `mvvmcross.platforms.android.binding.droid.views`
ami_version: The version of the Amazon Machine Image (AMI) to use when launching the job flow. Defaults to 1.0.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit of a hack, but it's the only way I can think of to get the library list to update when the document is loaded from a file.
I think this should be 700L, not 700.
I'm not sure if this is the best way to do this. I'm not sure if `header.id` is always the same as `header.getAttribute('id')`. I'm not sure if `header.id` is always a string. I'm not sure if `header.getAttribute('id')` is always a string. I'm not sure if `header.id` is always a valid DOM element ID. I'm not sure if
Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
tpfp_func: function to calculate tp and fp.
I think this should be `1024 * 1024` instead of `1048567`
I think this is a good change. It's not clear to me why we would want to set the log level from the command line. I think it's better to set it in the code.
Metrics/LineLength: Line is too long. [105/120]
I think we should use the service slug here, not the service name.
I think this should be a `MissingAuthorization` instead of a `boolean`.
I think we should check if the chain is supported before calling the `Withdraw` method.
Please remove this file.
This test is not testing anything.
This is a bit weird, but I think it's correct. The `$chars` array is only used to determine the length of the string, so it's not used after that.
I think this should be `private` again.
I think we should call this `AdditionalIngressRulesByRole` to make it clear that it's a map from role to rules.
Line is too long. [105/80]<br>Use the new Ruby 1.9 hash syntax.
I think this should be `return 0` instead of `return float(False)`?
I think we should default to `false` and only enable it if the gateway API is present.
I think this is the only place where we're using the `ctx` from the request. I think we should just pass the `ctx` from the request to `fieldsFromJWTSvidParams` and remove the `ctx` parameter from that function.
`checkExprDepth` is called twice.
please use `github.com/iotexproject/iotex-core/address` instead of `github.com/iotexproject/iotex-address/address`
I think this should be `MvxContentDialogPresentationAttribute`
This is the only place where we increment the registered counter. I think it's fine to remove it.
Metrics/LineLength: Line is too long. [105/120]
This method is unused.
I think we should call this `aws-tags` to be consistent with the other flags.
I think this should be `IPv4: %s, IPv6: %s, ` instead of `IPv4: %s, `
I think this should be `V(logf.DebugLevel)`?
I think this is not correct. If `beforeChangeResult` is an array, it should be checked if it has at least one element.
nit: space after if.
Nit: Can we have a single patch template for both the cases?
nit: `if` is not needed here.
This is a bit of a nitpick, but I think it's better to use `String.valueOf(sourceIDs.size())` instead of `sourceIDs.size() + ""`.
I think this should be `string?` instead of `JsonRpcUrl?`
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit confusing. I think it would be better to say "if there is an issuer on the JWT, and the account does not have the issuer as an issuer"
This is a bit of a weird import. I think it's used in the `ipsets` package, but it's also used in `policy.go`. I think it's probably fine, but I'd be interested in hearing what others think.
I think this should be `payments.during-session-debug` (with a dot) to be consistent with the other flags.
I think this is a good change, but I'm not sure if we should call this `twoThirds` or `twoThirdsFinalization` or something like that.
I think this is a good fix, but I'm not sure if we should be doing this in the `prettyBytes` function. I think it's better to do it here, where we know the value is a number.
I think this should be 0.3.
I think we should also check if the link is valid before adding it to the span.
I think this should be `kwargs.get("protocol") or "https"` to avoid the `None` error.
I think this should be `afterAction?.Invoke();` instead of `afterAction?.Invoke(value);`
I think this is wrong. The `visitor` is not a `QueryVisitor` but a `QueryVisitor`. So you should call `visitor.visitLeaf(this)` here.
I think this is the only place where we need to set `isHydrating` to false.
I think this should be `Info` level.
I think this should be `cci->num_regs_skip == 0` instead of `cci->num_regs_skip <= 2` because we don't want to skip XSP and XBP.
I think it would be better to use `Collection` here.
I think this is the same as the previous version.
This class is not used anymore.
This is a bit of a hack, but it's the only way I could get the test to pass. I'm not sure why the `page.waitForResponse` isn't working.
This is not needed, as it is set to 0 below.
This is a leak. You need to free the theme here.
I think this should be `prime-downgrade` to match the `prime-upgrade` plan name.
I think we should stop the server if we can't ping the proposal.
This is a bit of a hack. We should probably have a `Code` constructor that takes a `WorldState` and a `Address` and then we can just call `Code(frame.getWorldState(), contract)` here.
This is a bit of a hack, but it's the only way I could think of to avoid the race condition where the `flush` goroutine is running and the `Close` goroutine is running at the same time. I'm not sure if there's a better way to do this.
I think this is a bug. The `update` method is supposed to be called with the current time.
This test is now failing because the test directory has been renamed.
I think this is the only place where we use `controllerutils.GetHiveNamespace()` instead of `constants.HiveNamespace`. I think it's fine to use the constant here, but I'm not sure if we should be consistent.
This is a debug log, so I think it's fine to use `Debugf` here.
I'd prefer to see this as a `public static final` field in `K9MailLib` rather than an enum.
I think this is the only place where we need to check for `editMode` and `selectAllPhotosUpToFav`
I think we should use the same name for both of these.
This is a bit of a hack, but it's the only way I could get the message to render properly.
I think this is a bit of a hack. I'm not sure if there's a better way to do this.
This is a bit of a hack, but it's the only way I could think of to get the absolute path of the source file. I'm not sure if there's a better way to do this.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `uint8` instead of `uint32` to save space.
I think we should use the context from the AWS SDK.
Metrics/LineLength: Line is too long. [105/120]
I think this should be `IntPtr` instead of `IntPtr`
I think this should be `no_model1_train` (or `no_model1_eval`)
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
This should be `?\DateTimeInterface`
[IngressClass](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class)
This is the only change that I'm not sure about. I'm not sure if it's better to use `sys.exit` or `exit`. I'm not sure if there's a difference between the two.
I think this should be `pkg/apis/ops/v1alpha1`
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should return the `Index` here as well.
I think this should be `V(4)` since it's a sub-step of the `V(2)` log message above.
I think this is a bug. If we have a role `foo` and an implicit node `bar`, then the selector should be `[role="foo"]:not([role]), [role="bar"]:not([role])`.
This is a bit confusing. The `url` is the server URL, not the URL of the resource. The `url` is used to determine the origin of the request.
I think we should add a validation to ensure that the service account is valid.
I'm not sure if this is the right place for this. I think it should be in the `PutBlob` method.
I think this is the only place where we use `CODE_TTL_DEFAULT` directly. I think we should use `CODE_TTL` instead.
This is a breaking change. I think we should keep the old name for now.
I think this should be a `if (file_exists(...)) {` instead of `if (!file_exists(...)) {`
This should be `maxrequestbodysize` (singular).
This is a bug fix. The old code was copying the wrong number of bytes.
I think this is a bit of a misnomer. It's not a catchpoint file that's being written, it's the catchup service that's writing the catchpoint file.
This line is not needed.
This is the only change I made to the peerlist. I removed the capacity field and the Capacity() method. The reason is that the capacity is now set in the peerlist constructor.
This is a blocking call, so it should be called from a different thread.
This is a test class, so it should be named with the suffix "Test".
I think this should be `azurereportgroup`
I think we should add a `Version` column to the `cluster_metadata` table.
remove empty line
I think this is the only place where we need to validate the conflict detection filter.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This test is not very useful. It's just checking that the type definitions are valid. I'd rather have a test that checks that the types are used in the code.
I think this should be a const.
This method is not used.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should add a `// +optional` here.
This test is now testing the wrong thing. It should be testing the `sendX509SVIDResponse` function.
This is a bit of a hack, but it's the only way I could find to suppress the message.
I think we should use `sharedMount` instead of `shared` here.
I think we should use `require.NoError` here.
I think this is the only place where we use `np.stack` directly. I think we should use `dask.array.stack` instead.
This import is unused.
I think this is the only place where we need to check for `resourcesField.isMap()`?
This should be `1.16` now.
This is a change in behavior. The force.h header is now included in the domain.h header. This is to allow the force.h header to be included in the domain.h header without having to include the force.h header in the user's code.
I think this is a bug. We should not be here if we are not a mirror.
> EnableOpenTelemetry(Action<OpenTelemetryBuilder> configureOpenTelemetryBuilder) [](start = 12, length = 52) I think this should be `EnableOpenTelemetry(Action<OpenTeppingBuilder> configureOpenTelemetryBuilder)`
I think this is a good change. I'm not sure why we had this as a separate type before.
I think this should be `gocloud.dev/secrets/gcp`
This is a bit of a hack, but it's the only way I can think of to prevent the peer from being added to the peer list if it's already connected.
This is a dragon.
This line is too long.
I think this is a bug. The test is testing that the status code is set to `Ok` but the code is setting it to `Internal`.
This is a bit of a hack, but it's the only way to get the Apex ruleset to load. I'm not sure if there's a better way to do this.
I think this is a bit confusing. I would rather have a separate stage for "Senders" and "Bodies" (or "TxHashes" and "UncleHashes").
I think we can use `util` directly here.
I think this is the only place where we use `webkitGetAsEntry` so we can just use it here.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
This is a bit of a hack, but it's the only way I could think of to get the address from the nested dict.
Unused import statement.
why not return err?
This is not the best way to do this. You should use a `CursorLoader` to load the data from the database.
This is a breaking change. I think we should keep the old method and deprecate it.
I think this should be `default:"8080"`
This should be `python-daemon<3.0,`
nit: can we use `!slaOptions.isEmpty()`?
I think this is a bit confusing. The URL opener is not a default. It's a customization.
Style/MutableConstant: Freeze mutable objects assigned to constants.
I think this is the only place where we need to pass the cursor state to the server.
remove empty line
Line is too long. [111/80]
I think we should add a `MinimumTime` property to this class.
I think this should be `Vue.config.productionTip = false`
I think this is a bug. The `doNotUnref` map is only used for the `addUnrefToFinalResOp` function, so it should be local to that function.
I think this is the only place where we need to check for `excessDomChildren` and not `oldDomChildren` because we don't want to remove the children that were already removed by the previous error boundary.
Nit: I think we should use `fmt.Errorf` instead of `errors.New` here.
I think this should be `info` as well.
This is a breaking change.
This is a bit of a hack, but it's the only way I can think of to get the text of a read-only edit box.
nit: I think we should rename this to `asmsecretresource` to match the other resource packages.
This is the change that makes the test pass.
I think this should be `SparkWriteOptions.DISTRIBUTION_MODE`, not `SparkWriteOptions.DISTRIBUTION_MODE_OPTION`
This file is only used on linux and macOS.
This is a python new-style format string used to format the message information. See doc for all details
This is a bit of a weird one. I'm not sure if it's a bug or not. I'm not sure if the memset_s is supposed to be on the struct or the pointer to the struct. I'm not sure if it's supposed to be on the struct or the pointer to the struct. I'm not sure if it's supposed to be on the struct or the pointer to the struct. I'm not sure if it'
EXP:map[string]interface {}{"spec":map[string]interface {}{"replicas":int64(1),"template":map[string]interface {}{"metadata":map[string]interface {}{"labels":map[string]interface {}{"app":string("nginx"),"tier":string("frontend")},"name":string("nginx")},"spec":map[string]interface {}{"containers
I think this is the only place where we use `zfs` directly. I think we should use `bin.ZFS` here.
This file is part of RDKit and covered by $RDBASE/license.txt
This is a change in behavior. The old code would have returned the deleted documents. The new code will not.
This is the only change in this file.
I think we should add a `pretrained` field here.
nit: I think we should keep the import as is.
This is a debug print statement. It should be removed.
I think we should be able to remove this. I think the `rootUrl` is set in the `ember-service-worker` package.
I think this should be `deprecated_fields = {}` as we don't want to deprecate any fields.
I'm not sure if this is the best way to do this. I'm not sure if there's a better way to do this.
This is a bit of a weird test. It's testing that the output is a string, but it's not testing that the output is the expected string. I think it would be better to test that the output is the expected string.
I think this is a bug fix. The original code was not handling the case where the annotation query contained a key without a value.
This is a bit of a hack, but it's the only way I could think of to get the player name to be standardized. I'm not sure if there's a better way to do this.
This file is empty.
I think this is a bit confusing. I think it would be better to return a `func() error` that calls `Close` on the returned database.
I think this is the right fix.
I think this is a bug. The `get_ldr_module_66` function is supposed to return `NULL` if the module is not found.
I think this is a bug fix.
I think we should add a `CertificateRequestReasonDenied` reason.
I think this is a good idea, but I'm not sure if we should do it here. I think it's better to do it in the `MolOps::addHs` function, so that it's done in the same place as the other modifications.
I am really loving upcase. The most valuable part for me was how I was able to dissect "upcase" app and see how it was built. Having the access to the repo and seeing how codes were structured was such a priceless lesson.
I think this should be 15%?
I think this should be `forseti_findings_{}.json` to match the filename.
This is a bit of a hack, but I couldn't find a better way to do this. I'm not sure if this is the right error code to use, but it's the only one that seems to be consistent across all the services.
This is a bit of a hack, but it's the only way I can think of to get the resync to happen.
I'm not sure if this is a good idea. I'm not sure if it's a good idea to change the names of these parameters. I'm not sure if it's a good idea to change the names of these parameters. I'm not sure if it's a good idea to change the names of these parameters. I'm not sure if it's a good idea to change the names of these parameters. I'm not sure if it'
This is a macro, not a function.
I think this is a good idea, but I'm not sure we should be using `shared_context` for this. I think it's better to just use `before(:each)` and `after(:each)` directly. `shared_context` is for reusable examples, not for reusable setup/teardown.
This is a bit of a hack, but it's the only way I could think of to get the remote host. I'm not sure if there's a better way to do this.
I think this is the only place where we use `setFlags` instead of `addFlags`. I'm not sure if it's a good idea to use `setFlags` here.
This is a duplicate of ErrCodeNoSuchBucket.
I think this should be `List<TableIdentifier> tableIdentifiers = tables.stream().map(t -> TableIdentifier.of(namespace, t)).collect(Collectors.toList());`
I think we should be able to remove this file.
I think this should be `OPSZ_16` instead of `OPSZ_CACHE_LINE`.
please remove the extra comma at the end of the line.
typo: stastics -> statistics
Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
I think we can use `antrea/pkg/apis/networking/v1beta1` directly.
I'm not sure where this should go. I'm thinking it should be in the `addShape` function, but I'm not sure.
I think this should be removed.
I think this should be `new MetricsConfig.MetricsConfigBuilder().build();`
This is the current scope from the context.
I think this test is redundant with the one below.
I think we should add this to the `utils.Eth1Flags` list.
This is a bit of a hack, but it's the only way I could get `__dir__` to work. I'm not sure if there's a better way to do this.
I think we should remove this import.
I think this is the only place where we need to pass the consumer interface.
I think this should be `GetEx(addr basics.Address, cidx basics.CreatableIndex, ctype basics.CreatableType) (basics.AccountData, error)`
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this is the only place where we're using the `acme.AuthorityOptions` struct. I'd like to see it be a bit more explicit, and have the options be passed in as a struct.
This is a bit of a hack, but it's the only way to get the `wl_event_loop_add_signal` function. I'm not sure if there's a better way to do this.
This is a breaking change. We need to make sure that we don't break any existing workflows.
`EnvironmentFiles` should be `EnvironmentFiles` (singular)
Line is too long. [105/80]<br>Use 2 (not 3) spaces for indentation.
I think this should be `m_was_finalized` instead of `m_was_initialized`
This is a breaking change. We should not remove this.
This is a bit of a weird name for a function. I'm not sure if it's a leftover from the old validation layers or if it's just a naming thing. I'm not sure if it's worth changing it.
why not use `num_data_` directly?
nit: can we use `getStartTs().getVersion()` instead of `getStartTs().getVersion()`?
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
This is a bit of a hack, but it's the only way to get the open container attribute to work. I'm not sure if there's a better way to do this.
This is a bit of a hack, but it's the only way I could think of to pass the response headers to the `build_base_http_request` method. I'm not sure if there's a better way to do this.
I think this should be `info` as well.
Line is too long. [105/80]<br>Tab detected.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit of a hack, but it works. I'm not sure why the snackbar isn't showing up automatically.
This should be done before the `convert` call.
This is a breaking change.
I think this method is not used anymore.
Determines whether to create dictionary entries when the input has no value mapping.
I think we should add a `POST` handler here as well.
This is a bit of a problem. If the first token is not a `(`, then the function will return without doing anything. I think this is a bug.
This import should be grouped with the other `github.com/ncw/rclone` imports.
I think we should panic here.
I think this is the only place where we use `txib.GetEncodedLength()` instead of `protocol.Encode(&txib)`?
I think this should be `virtualNode.actualNode.id` instead of `virtualNode.id`
This method is not used anywhere.
This error is no longer used.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be "DVN"
This method is not used anymore.
This is a copyright symbol.
I think this should be `return error(Response.Status.BAD_REQUEST, ex.getMessage());`
This is a breaking change. We should not be using the `spire/pkg/common` package anymore.
I think this should be `workerSigner, err := view.AccountSignerAddress(ctx, waddr)`
I'm not sure if this is a good idea. I think it's better to have a `Without` field in the `Upstream` struct.
This is a bit confusing. I think it would be better to say "You can't drag an output to an input."
I think this should be `output.UserOut.Warnf("Warning: the provided docroot at %s does not currently exist. Using default docroot.", docrootRelPath)`
This is the only change that I'm not sure about. I think it's better to keep the backdrop logic here, but I'm not sure if it's better to keep the backdrop logic here or to move it to `renderDetailPageBackdrop`.
This file is not used anymore.
This is a no-op, but I'm not sure if it's a good idea to have a global tracer.
This is the only change in this file.
I think this is the only change that is needed to make the tests pass.
I think we should use `klog` instead of `klogv2` here.
This is not needed.
This method is deprecated. Use {@link SortedMap#comparator()} instead.
I think this is a good change, but I'm not sure if we should be using `catch` at all. I think we should be using `then` and `catch` together. I think we should be using `then` to verify that the session was returned to the pool, and `catch` to verify that the session was closed.
I'm not sure if this is needed. I think it's just to avoid the race condition.
This is a bit of a weird API. I'd prefer to see a `pony_asio_event_is_disposable` function.
This is a bit of a nitpick, but I think it would be better to use `\\w` instead of `A-Za-z_` here.
This is a bit of a hack, but it's the only way I can think of to get the file size and modTime without having to open the file.
I think this is a bug. The `attemptsCount` variable is not used.
Style/ClassAndModuleChildren: Class and module children of RandomNumberGenerator should be placed before constants.
This test is failing because the query is not returning the right result. The query is returning the salary of the employee with last name 'Thompson' and the salary of the employee with last name 'Thompson's manager'. The query should return the salary of the employee with last name 'Thompson' and the salary of the employee with last name 'Thompson's manager'.
This is a bit of a hack, but it's the only way I could get the HTML to display properly. I'm not sure if there's a better way to do this.
This is a bit of a hack, but it's the only way I could think of to get the `isVisible` function to work with the `axe._tree` object. I'm not sure if there's a better way to do this.
I think this is the only place where we need to check for the empty string.
I think we should add a `default: "stripe"` here. Otherwise, we'll have to add a `before_save` callback to set the default value.
I think this should be `write.metadata.delete-after-commit.enabled` to be consistent with the other configs.
I think this should be `data-list` (singular)
This is not a valid C program.
I think we should emit the error event here, so that the user can handle it.
Line is too long. [105/80]<br>Space inside { missing.<br>Space inside } missing.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
nit: I think this should be `removeChild` instead of `removeNode`
Style/AttrAccessor: Use attr_accessor instead of attr_accessor.
This method is not used.
This is a bit of a hack, but it's the only way to make the item ids match the client's.
I'm not sure if we should be using underscore.js in the core. I think we should try to keep the core as small as possible.
Line is too long. [105/80]<br>Use 2 (not 3) spaces for indentation.
I think this is a good candidate for memoization.
This file is only used on linux.
This is no longer used.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
why not just check if block.WorkingSet == nil?
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is not needed anymore.
This is a recursive mutex, so we can't use `std::lock_guard` here.
I think this should be `0` instead of `"0"`.
I think this should be `if (!isHybrid() || BootConfig.getBootConfig(frontActivity).shouldAuthenticate())`
This is a bit of a hack, but it's the only way I could get the print.js to work. I'm not sure why it doesn't work in the main world, but it does work in the extension world.
This is a bit of a pain to read, but I think it's better than the previous version.
I think we should be able to remove this line.
This is the only place where we need to check for nulls.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this interface is not needed. The `ConnTrackDumper` interface is enough.
I think this is the only place where we need to check for the audit log.
I think this should be `IsolationLevel` instead of `System.Data.IsolationLevel`
I think this should be `readActiveBlockProducersByHeightTests` as well.
I think we should use `azkaban.job.logging.kafka.globalDisable` instead of `azkaban.server.logging.kafka.globalDisable` since it's a job property.
I think this is the only place where we can use `?.` because `reader.Value` is always a `JToken` and `JToken.Value` is always a `object` which can be `null`.
Style/MethodMissing: Do not use method_missing. Instead, use a delegator.
This is the end.
This file is empty.
This comparator is not used anywhere.
I think this is a bug. The `JavadocComment` constructor should be called with the `comment` argument.
I think this should be `siteInfo.AddRow("PHP version:", desc["php_version"])`
I think this is the right fix. The `country` field is a pointer, so it can be `nil`. But the `*country` is a string, so it can't be `nil`. So the `if` statement is checking if the pointer is `nil` and not if the string is empty.
why we need to change this?
I think this should be a warning.
I think this is a bit confusing. I think it would be better to say that `repoNode` allows repo directories to be removed via `RemoveDir`.
I think we should return an error here.
I think this should be 3000.
I think we should rename this to `CustomRouterAuth` to be consistent with the other option.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we can use `tableInfo.getPrimaryKey().getIndexColumns()` directly.
This is a BC break. The form builder name must be lowercase.
I think this is not the right place to handle this. I think it should be handled in the `SelectSubscriptionActivity` itself.
I think we should retry here, too.
This is a bit confusing. I think it would be better to say "if the user hasn't specified a port in the config, we must use the default peering port for the network"
I think this is the only place where we need to check for the key projection.
I think we should keep the original value here.
I think this should be `github.com/docker/docker/pkg/archive`
I think this should be `return err`
This is the only place where we call `performSILLinking`. I'm not sure why we're not calling it here.
I think this should be `LIKE :query` instead of `LIKE :fuzzy_value` to be consistent with the rest of the code.
I think this is a good name. I'm not sure if we should call it `ArtifactBuckets` or `ArtifactBucket` though. I'm not sure if we should call it `ArtifactBuckets` or `ArtifactBucket` though.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
Style/GuardClause: Use a guard clause instead of wrapping the code inside a conditional expression.
I think this should be `eni.guard.RUnlock()`
I think this regex is a bit too strict. It will match `<a href="api-version">` for example. I think it should be something like `<a\s*.*\shref\s*=\s*[\'\"]([^\'\"]*)[\'\"][^>]*>`
Style/TrivialAccessors: Use attr_reader instead of a trivial reader method.
This is a breaking change. I'm not sure if we should do this.
This class is not used anywhere.
nit: I think we should be consistent with the other interfaces and use `IHttpMethod` instead of `HttpMethod` here.
I think we should use `strings.HasPrefix(podName, "antrea-controller")` here.
This is a bit of a hack, but it's the only way to get this working on OpenBSD.
I think this should be `false` by default.
I think this should be `separator` instead of `seperator` (same below)
I think we should not add this to the `OpenTelemetry.Instrumentation.Http` assembly. The `OpenTelemetry.Instrumentation.Http` assembly is only for the Http instrumentation. The `OpenTelemetry.Instrumentation.AspNet` and `OpenTelemetry.Instrumentation.AspNetCore` assemblies are for the AspNet and AspNetCore instrumentations. The `OpenTelemetry.Instrumentation
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `translator=Translator()` by default.
This import should be moved to the top of the file.
This test is not testing anything.
This is a bit of a nit, but I think it would be better to use `std::to_string` to convert `label` to a string.
I think this is a good change, but I'm not sure why we're not using the CST anymore.
I think this should be `false` here.
This is a bit of a hack, but it's the only way I could think of to get the type of a variable in JavaScript.
nit: I think we should add a `using` for `System.Net.Http`
This is a bit confusing, as the name suggests that it's used for S3 to SNS to SQS, but it's actually used for S3 to SNS to SQS to SQS. I'd suggest renaming it to `TEST_QUEUE_NAME_FOR_S3_TO_SNS_TO_SQS` or something similar.
I think this should be `/var/lib/ecs/data/` to match the other paths.
This is a bit confusing. I think we should just remove this line.
Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
I think this should be `Debug.Printf` too.
I think we should be able to kill the process here, but I'm not sure if we should be killing the process here. I think we should be able to kill the process here, but I'm not sure if we should be killing the process here.
I think this is a bug. We should not be using `interface{}` here.
I think it would be better to throw an exception in the constructor, not in the `read` method.
I think this is a bug. We should not be ignoring empty sources.
I think this is a bit of a misnomer. It's not really a "raw" transaction, it's a "raw" transaction slice.
This is a bit of a hack, but it's the only way I could get the actions to be copied over.
nit: I think we should have a `getThanosBlockNumber()` method in `ConfigOptions` instead of having it here.
This is a bit of a nit, but I think it's better to use `append(members, m.externalNodeCIDRs...)` instead of `members = append(members, m.externalNodeCIDRs...)`. The latter will modify the slice `members` in place, while the former will return a new slice.
This is not a valid route.
This example is missing a call to `v.Close()`.
>holder.h [](start = 12, length = 8) I think this should be `holder.h` (without the `>`)
I think this is the only change that is needed.
This is not used anymore.
nit: please remove unused import
I think it would be better to return a class instead of a tuple.
(style) space prohibited before that close parenthesis ')' (style) space prohibited after that close parenthesis ')' (style) space prohibited before that close parenthesis ')' (style) space prohibited after that close parenthesis ')' (style) space prohibited before that close parenthesis ')' (style) space prohibited after that close parenthesis ')' (style) space prohibited before that close parenthesis ')' (style
I think this should be `kbfsConfigName + ".tmp"` instead.
Please don't use wildcard imports.
This is a duplicate of `pkg/util/testutils/testdata.go`
Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
I think this is a bug. I think we should use `os.path.join(os.path.dirname(__file__), 'config/kinto.ini')` instead.
Metrics/LineLength: Line is too long. [111/120]<br>Metrics/BlockLength: Block has too many lines. [30/25]<br>Metrics/BlockNesting: Avoid more than 3 levels of block nesting.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This method is not used anywhere.
(style) line over 80 characters
I think this should be `IMvxSplitViewController` instead of `IMvxTvosSplitViewController`
Why not using `protocol.ByteCount` here?
This is a bit of a nitpick, but I think it would be better to use `Files.newOutputStream(Paths.get(settingsFileName))` instead of `FileOutputStream`.
This is a bit of a breaking change, but I think it's ok. We're not going to support BPF on Windows, so we should just remove the code that tries to do it.
This is the last place where we log the framework description. I'm not sure if we should keep this.
This is a breaking change. I think it's fine, but we should make sure we're ok with it.
I think this should be `swarm.EncryptedHashSize * 2` instead of `swarm.SectionSize * 2`
The config is an array, so we can cast it to an array here.
Style/SymbolProc: Pass &:state as an argument to count instead of a block.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this test is redundant with the one below.
I'm not sure if this is a real improvement. I'm not sure if the JIT will inline the getter and make it faster.
I think this should be `analyzer_cmd.extend(['--export-fixes', result_handler.fixit_file])` (note the extra `s` in `export-fixes`)
I think we should keep this as a public variable.
This regexp is now too permissive. It will match any line that contains `# pylint:` and will not match any line that does not.
I think this is a leftover from the refactoring.
I think this should be `bool IsMainThread` to be consistent with the other methods.
I think we should not allow `diagonal` flip for masks.
This file is not part of the test platform.
This is a bit of a hack. I'm not sure how to do this properly.
NIT: I think we should add a license header to this file.
I think we can use `local_ip` to replace `local_ip_str` in `GetLocalIP` and `GetLocalIPStr`
This is a bit of a nit, but I think it would be better to use `String.Format` here instead of `String.Concat`.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `Debug` as well.
I'm not sure if this is the right way to do this. I'm not sure if we should be setting these to `None` here. I think we should be raising an exception here, and then the caller should handle it.
This is a bit weird. I'd expect the version to be printed when running the tests.
nit: I think this should be `~/.config/gcloud/application_default_credentials.json` (with the dot)
I think this should be `leafDefaultFirstPingInterval` (same as above)
I think this should be `self.local.add_tarball(name, filename, {cache: uplink.config.cache})` instead.
I think this is a bug. The `history` permission should be `read` only.
This is a bit weird, but I think it's necessary to get the sqlite3 driver to register itself.
This import is not needed.
I think this is a bug fix. I think we should be using `net.SplitHostPort` here.
I think this should be `v0.3.0-router-expose` to be consistent with the other tags.
I think this should be `crt.IsCA` instead of `crt.KeyAlgorithm`
This file is generated by `go generate` and should not be edited.
I think this is a bug. The `debug` and `trace` flags are not supposed to be per-client. They are per-server.
This is a bit of a hack, but it's the only way I could get the row group start position to be set correctly. I'm not sure if there's a better way to do this.
This is a breaking change. I think we should just remove this and have the user use `InMemoryIntermediateManager` directly.
This include is not needed.
I think this is a good change. I'm not sure if we should be ignoring errors here.
I think this is a breaking change.
I think this should be `IllegalArgumentException` instead of `IllegalStateException`
This is a bit of a nitpick, but I think it would be better to use a single space here.
This is a bit of a nit, but I think it's better to use `!=` instead of `||` here.
I think this is a bug. The first argument should be the service name.
This file is covered by the GNU General Public License. See the file COPYING for more details.
I think this is not needed.
This test is not correct. The method `fetchInstallableApplications` should return an empty list.
nit: I think this should be `errx (EXIT_FAILURE, "This program takes three or no arguments");`
This is a test.
This should be `!number`
I think this should be `long:"include"` and `long:"exclude"` to be consistent with the other commands.
I think this should be `AppName() string` instead of `AppName() (string, error)`
I think this is a good idea, but I'm not sure if we should be passing the settingsService into the JsonPrinter constructor. I think it would be better to pass it into the jsonAsDatasetDto method. That way, we can keep the JsonPrinter class as simple as possible.
This is a bit dangerous, as it will remove the node from the AST, but not from the source code. I'm not sure if this is a problem, but it might be.
I think this test is not needed anymore.
I think this should be a `final` field.
This is a bit of a weird error message. I think it would be better to say something like "rekeying not supported for this network" or "rekeying not supported for this account type".
I think this is the right change. I think the `DropAggregationConfig` is a leftover from the initial implementation.
This should be `string` instead of `string|null`
This is a change in behavior. I think it's better to keep the old behavior.
why ignore error?
I think this is a bug. The backgroundCtx should be passed to the network.GossipNode.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Line is too long. [105/80]<br>Use the new Ruby 1.9 hash syntax.<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit of a hack, but it's the only way to get the timer to sleep for a variable amount of time.
I think this should be `INFO` level.
I think this is a bit misleading. It's not impossible to start a container with this flag set, it's just that the container will not have device permissions configured.
I'm not sure if this is the right place for this. I'm not sure if it's even necessary. I'm not sure if it's even a hack. I'm not sure if it's even a good idea. I'm not sure if it's even a good idea to use structlog. I'm not sure if it's even a good idea to use structlog in a way that requires this. I'm not sure
I think this is a bug. The `Require.nonNull` should be kept.
This is not needed. The arrayList is already initialized in the constructor.
I think this is the only place where we need to change the default ismaster response.
I think we should return an error if the policy is not found.
I think this should be `Connect <your-id> <provider-id>`
Please remove empty line.
I think this should be a bool flag.
I think this should be `record.Conn.DyingAndDoneExport = true` instead of `record.DyingAndDoneExport = true`
This is a breaking change.
This import is unused.
This is a bit of a nit, but I think it would be better to use `response.headers.get('Access-Control-Allow-Headers', '')` instead of checking if it's in the response.headers dict.
This rule needs a "xpath" property value in order to function.
Line is too long. [105/80]<br>Use the new Ruby 1.9 hash syntax.<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be a TEXT column, not an INTEGER.
I think this should be `journalPausedFromConflict tlfJournalPauseType = 1 << iota`
This is a bit of a hack, but I think it's the best we can do. We need to be able to pass the state to the cache, but we can't pass the state to the cache constructor. So we have to do this.
I think this is a bug fix. The `preference` property was being used as the mode.
I think we should keep these enabled.
I'm not sure if this is a good idea. I'm not sure if it's worth it to have a struct that is only used once. I'm not sure if it's worth it to have a struct that is only used once.
I think we should keep the health check here.
I think we should keep the EnableCleanupReplicationTask() check here.
This method is not used in the test. Can we remove it?
I think we should use `res2net101_v1b_26w_4s` instead of `res2net101_v1b_26w_4s_mmdetv2` in the model zoo.
I think this should be `Metrics` again.
I think this should be `TOKEN_EXP_DEFAULT = {'days': 1}`
I think this should be `BlockHeightFunc` to be consistent with the other interfaces.
I think this class is not needed. You can use `NotFoundHttpException` directly.
I think this is a bit of a hack. I'd rather see a `getKey()` method on `RememberMeServices` that returns the key.
This is a no-op, so we can just remove it.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why the `ip6` argument is a `Net6` object, but it is. I'm not sure why it's a `Net6` object, but it is. I'm not sure why it's a `Net6` object, but it is. I'm not sure why it's a `Net6`
nit: I think we should be consistent with the other `OnEnd` methods and use `T?` here.
I think this should be `PREF_QUEUE_ADD_TO_FRONT` instead of `prefQueueAddToFront`
I think it would be better to use `\Shopsys\FrameworkBundle\Model\Pricing\Group\PricingGroupInterface` here.
I think this should be `if (oldVersionCode < 1070197) {`
I think this is wrong. The alignment is 4 bytes, but the value is 1 byte. So the value should be `uint32(1) << 32` or `uint32(1) << 24`.
I think this is a typo.
I think this should be `maxSegmentsPerCell=kwargs.get("maxSegmentsPerCell", 255)` and `maxSynapsesPerSegment=kwargs.get("maxSynapsesPerSegment", 255)` to be consistent with the other parameters.
I think this should be done before the `WriteMessageAsync` call.
This returns a Series with the data type of each column. The result's index is the original DataFrame's columns. Columns with mixed types are stored with the object dtype.
I think this should be `axe.commons.aria.isRange`
I think this method should be static.
This import is unused.
I think this should be `klog.V(4).Infof("Host Port is defined for Container %s in Pod %s, thus extra NPL port is not allocated", container.Name, key)`
I think this method is not used anywhere.
This should be `public function findBy(array $criteria, ?array $orderBy = null, ?int $limit = null, ?int $offset = null): array`
I think this should be `Debugf` as well.
I think this is a good change, but I'm not sure if it's worth the effort. The user can always change the column headers later. I think it's better to just leave the headers as-is and let the user change them.
This is a bit of a hack, but it's the only way I could think of to get the qualifier from the ARN. I'm not sure if there's a better way to do this.
I think we should also add `api.SpecReplication` here.
I think this is not needed anymore.
This file is empty.
nit: I think this is a good change. I think we should also update the doc to reflect this.
This is a bit of a hack, but it seems to be the only way to avoid the error. I'm not sure why it's happening, but it seems to be related to the fact that we're adding the same option twice. I'm not sure why we're adding it twice, but I'm not sure how to avoid it.
This file should be named `index.js` instead of `index.jsx`.
I think this should be `lobGlobals = new ExLobGlobals(NULL, NULL);`
This is the only place where we update the mount points. I'm not sure if we should keep this. I think we should just remove it.
I think this is the only place where we need to check for nil.
TheBASEFEE -> The base fee of this header.
I think this is not needed. The `self.settings.get('version', self.JMETER_VER)` will return a string.
I think we should be able to remove this interface.
I'm not sure if this is the right value to use here. I'm not sure if it's even necessary to set this at all.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why the `QVariant.Type` enum doesn't work here.
This should be `payload.length !== 20`
I think this should be `fix` instead of `autoFixes` to be consistent with the other options.
These are no longer used, right?
I think this should be `INFO` level.
Metrics/LineLength: Line is too long. [101/100]
I think this is a typo.
Nit: I think this should be `assert.Equal(t, "default", ...)`
Please avoid using wildcard imports.
I think this is a bug. slider_pos is a float, and you are indexing into an array of ints. I think you want to round slider_pos to the nearest int.
I think this should be `Load Balanced Web App` to match the actual manifest.
Metrics/LineLength: Line is too long. [111/120]
I think this should be `InitContext` instead of `init`
This import is not used.
>clrstack -i is unsupported on this target. >The ICorDebug interface cannot be constructed. >
This is the change that makes the hashed data available.
I think this is not needed.
Layout/SpaceInsideHashLiteralBraces: Space inside { missing.<br>Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
I think this is a bug. The `stripped` variable is not used in this function.
Please remove the tabs.
This is a bit of a nit, but I think it's better to use `Record<string, string>` instead of `{ [name: string]: string }`. The latter is a type alias, so it's not really a type, it's just a shorthand for the former.
Importing from docutils is not allowed. Please use the `sphinx.addnodes` module instead.
This is a bit confusing. I think it would be better to have a separate command for this.
I think this is the only place where we need to check the progress.
I'm not sure if this is the best way to do this. I'm not sure if it's possible to get the build date from the go compiler. I'm not sure if it's possible to get the build date from the Makefile. I'm not sure if it's possible to get the build date from the git repo. I'm not sure if it's possible to get the build date from the go linker. I'm not sure
This is a very simple ping-pong protocol. It measures RTT with other peers.
This is a test of the pylint disable directive.
This is a bit weird. I'm not sure why we're using a different package name for the interface.
I think this is a good change. I'm not sure if we should be using the `Platform` value at all, but I think we should be using the `AppType` value.
I think this should be `unless options[:tty].nil?`
I think this should be `components` instead of `componenets` (and the same below).
I'm not sure what this is supposed to be.
I think this should be `messages.delete_plural` since we're deleting multiple medications.
I'm not sure if this is a good idea. I think it's better to keep the interface names as they are.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is a good change.
I think this should be LogError.
This is a temporary interface for interacting with IPLD objects.
I think we should use `yaml:"docker_labels"` here, and `yaml:"labels"` in the `ServiceSpec` struct.
I think this should be `default(RuntimeContextSlot<T>)` instead of `null`.
nit: I think we should use `engine.hive.enabled` as the default value for `iceberg.engine.hive.enabled` as well.
I think this should be `^(?!'.self::SYSTEM_ATTRIBUTE_PREFIX.')[a-zA-Z0-9_]+$` to match the `NOT_SYSTEM_ATTRIBUTE_PATTERN` above.
I think this is not necessary. If `gallery` is a tensor, `gallery.device` will be the device where `gallery` is allocated.
I think this is a bitmask, so it should be 0b01010000.
I think this should be `c.state.Config.Remote.VerifyOutputs && !isTest` (the `!` is missing).
I think we should pass the ovsctlClient to NewConnTrackOvsAppCtl.
If `if_not_exists` is true, the error code should be `SUCCEEDED`, otherwise it should be `E_EXISTED`.
I think this is the only place where we use `boost::make_shared` (and `boost::shared_ptr` in general). I'm not sure if we should be using `boost::` at all. I think we should be using `std::` instead.
This file is part of Site Kit by Google. You may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
I think this should be `options.headers || {}` to avoid mutating the original options object.
I think this is the only way to mock the apigateway service. I'm not sure if there is a better way to do this.
This import should be moved to the top of the file.
why change the vote to transfer?
This is the only change that is required to enable the browser login.
I think this should be `USERS_ENDPOINT` to be consistent with the other constants.
I think this is not needed anymore.
This is a bit of a nit, but I think it would be better to use `successful.map(file => file.id)` instead of `successful.map(file => file.id)`
I think this should be `Your password contains leading/trailing whitespace - in previous versions of rclone this was stripped`
The prePersistEntity is deprecated since EasyAdmin 1.x and will be removed in 2.0 veresion. Use persistEntity instead
This is not a good way to do this. You should use `ctx.Repo.Commit.ID` instead.
typo: tisoftware -> software
I think this should be a static class.
This is a bit of a hack, but it's the only way I could think of to get the test to pass. I'm not sure if there's a better way to do this.
I think we should use `v1.Service` here.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a breaking change.
This is a breaking change.
missing space after ','
This file should be removed.
I think we should also remove the name file if the node name is not unique.
I think this is the only place where we can use `?.` instead of `GetMethod()`?
Style/MutableConstant: Freeze mutable objects assigned to constants.
I think we should keep the `config.Network` struct as it is. It's a struct with only two fields, and it's not worth the effort to make it a pointer.
This is a breaking change. I'm not sure if we should do this.
nit: I think we should use `NewEmptyMemoryPlugin` to be consistent with the other plugins.
I think we should use `random.random()` here.
This file should be deleted.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I'm not sure if this is a good idea. I'm not sure if it's a good idea to have a test name that is so long. I'm not sure if it's a good idea to have a test name that is so long. I'm not sure if it's a good idea to have a test name that is so long. I'm not sure if it's a good idea to have a test name that is so long.
This class is not used in the current build.
Please remove empty line
I'm not sure this is the right place to put this. I'd rather have a `proj_is_s2` function that returns a boolean.
I think this should be `targetsForLevel.GetStackTraceUsage()` instead of `targets.GetStackTraceUsage()`?
I think this should be `if (wasDeleted && shutdownHook != null)`
nit: remove empty line
This method is not used.
This is the only place where we use `CloseNotifier` interface. I think it's better to remove it.
This is a bit confusing. I think it would be better to say "Return a fully-qualified data location for the given filename."
I think we should be able to remove this line.
I think this should be `RpmDependenciesDirectory = "/var/lib/rpm"` (with a trailing slash) to match the other constants.
I think this is a good example of how to use `alias` to avoid having to write a computed property.
This is a hack to get stacktraces on SIGUSR2. I'm not sure if it's the best way to do it, but it works.
This is a bit weird, but I think it's ok. I'm not sure why the linter is complaining.
I think this is a good change. I'm not sure if we should rename the annotation, though. I think it's a bit confusing to have a name that implies that it's unsafe to use in a multi-threaded environment, but it's actually safe to use in a single-threaded environment. I think we should just keep the name as-is.
This is a constant that is used in the `fcgi` package.
I think this is not needed.
This is a bit weird. Why do we need to do this?
I think this should be `current_min_count` (without the `mode`)
This is not correct. The compressed string is not necessarily the same size as the uncompressed string. You need to decompress both strings and then compare them.
hi
I think this is the only place where we are using ZMSImpl directly. I think we should be able to remove this and use ZMSImplFactory everywhere.
I think this should be `OperatingSystem` instead of `Os`
nit: can we use `TableColumn.physical()` instead of `TableColumn.of()`?
I'm not sure if this is a good idea. It's not clear to me what the purpose of this method is.
Please remove the trailing comma.
This is a duplicate option.
Please add a comma at the end of the line.
I think this should be `public PropertyBagDictionary(PropertyBagDictionary initializer = null)`
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure if there's a better way to do this.
nit: I think we should add a `using` for `HttpsConnectionFilterOptions` here.
I think this should be `%(__version__)s` instead of `%(version)s`
I think this is the only place where we use the block header. Can we just use the block footer here?
I think this should be `unless ENV['DISABLE_SANDBOX_WARNING'] == 'true'`.
This is a breaking change. I think we should add a new method to the interface and deprecate this one.
This is a bit of a hack, but it's the only way I can think of to get a temporary file in /var/tmp. I'm not sure if there's a better way to do this.
This is a bit of a weird pattern. I'm not sure if we should be doing this. I think we should just return the error and let the caller handle it.
I'm not sure if this is the best way to do this. I'm not sure if we should be using `import()` here. I'm not sure if we should be using `window` here. I'm not sure if we should be using `appMode` here. I'm not sure if we should be using `standalone` here. I'm not sure if we should be using `site` here. I'm not sure if we should
nit: can we remove this import?
This field field prohibits :other from being present.
I think this is the only change that matters.
Please add the flag for the Arabic language.
I think this is the only place where we're using `axe.commons.aria.lookupTable.role` and `axe.commons.aria.lookupTable.attributes` directly. I'm not sure if we should be using `axe.utils.getStandards().ariaRoles` and `axe.utils.getStandards().ariaAttrs` instead.
I think this is wrong. The copyright is 2014.
I think this is the only place where we use the templated bytes. I think we should just use the templated bytes here.
This test is failing for Spark3, so has to fix it in the parent class. Ignoring for now, as still Spark3 is not supported.
I'm not sure if this is the right place to do this. I think it should be done in the `output_cb` function.
I think this is the only change that matters.
I think this should be `ErrWantSelf` (capital W)
I think we should use `int64` here.
I think this should be `from .iec104 import ...` instead.
I think this is a bug. The default profile should have an empty selector.
I think this is a typo.
Please add a space after the colon.
I'm not sure if this is the right thing to do. I'm not sure if we should be setting the content-type header at all if it's already set. I'm not sure if we should be setting it to multipart/form-data if it's already set to something else. I'm not sure if we should be setting it to multipart/form-data if it's already set to something else. I'm not sure if
This is a breaking change. We should not be using `core` in the driver. We should be using `error` instead.
This is a bit of a weird test. It's not really testing anything.
I think this should be `if (UserPreferences.repeatEpisode() && !wasSkipped && nextMedia != null)`
I think this is a good idea to remove this.
(style) line over 80 characters
This is a bit of a hack, but it's the only way I could think of to prevent the file from being created. I'm not sure if there's a better way to do this.
I think this is a bit confusing. I think it would be better to say "Initialize a new role using a local *cookiecutter* template. This allows the customization of a role while still using the default generated ``molecule`` folder. This is similar to an ``ansible-galaxy init`` skeleton. Please refer to the ``init scenario`` command in order to customise the default generated ``molecule`` folder."
I think this is the right way around.
This is a bit of a nitpick, but I think it would be better to say "Note that many functions including array indexing use the apply method rather than square brackets" (without the "raher").
This is a bit of a hack. We should be able to do this in the `EnsureBinary` call above.
I think this is a good idea, but I'm not sure if we should use `import_string` here. I think it's better to use `importlib.import_module` instead.
This should be `obj.focusRedirect.obj`
I'm not sure if this is the best way to do this, but I'm not sure how else to do it. I'm not sure if there's a way to get the interface from the plugin package without importing it.
I think this is a breaking change.
This is a bit of a hack, but it's the only way I could think of to remove the plugin from the container.
This is a module of statistical data structures and functions used in learning algorithms and for analysis of HTM network inputs and outputs.
I think this is the right fix. I'm not sure why this was failing.
I think this is a breaking change. We should add a new field to the API and deprecate the old one.
nit: extra newline
This is a BC break, we should not fallback to master.
I think this is wrong. The effective principals should be `['system.Authenticated', 'bob']`
I think this is too long. I think we should be able to run the tests in under 20 seconds.
This is a map of candidate values. The key is the index of the variable, and the value is the candidate value.
This import is unused.
I think this should be `rMS.Annotations` as well.
I think this is the root cause of #10080.
I think this should be `breakpoint = attrs.get("breakpoint", "")` to avoid a `None` value.
I think this is not needed.
I think this is a typo.
I think this is a bug. It should be `props[key.toLowerCase()] = props[key.toLowerCase()];`
This is a breaking change. I'm not sure if we should do this.
I think this should be `nodeName.toLowerCase()` instead of `virtualNode.props.nodeName`
I think this is the only place where we need to set the header.
I think this is the only place where we use `ad.Source` as the device name. I think we should use `ad.DeviceName` here instead.
This is a static initializer block. It is executed when the class is loaded.
This is a bit of a hack, but it's the only way I could think of to get the size of the best list.
I think we should add a note here that this is only required if the network is in a different project than the Forseti project.
This is a bit of a hack, but it works. I'm not sure why the `Select` method doesn't work here.
I think this is the only place where we need to set `background=False` to avoid the tab being focused.
I think we should just remove this function.
This is a bit of a nitpick, but I think it would be better to move this check to the `validate_parameters` function. It's not a big deal, but it's a bit cleaner to have all the parameter checks in one place.
> a valid range. 1. `a` is not necessary. 2. `valid range` is not necessary. 3. `valid range` is not clear.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should call this `FrameworkCustom` instead of `FrameworkOpenTelemetry` since we are not using OpenTelemetry anymore.
`weight` should be `None` if `class_weight` is not `None`
This class is not used in the public API. Please remove it.
I think we should remove this line. It's not used anywhere.
This method is empty. Consider removing it.
Line is too long. [105/80]<br>Use 2 (not 3) spaces for indentation.<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be a `ValueError` instead of a `AssertionError`
I think this is a bug in eslint. It should be disabled for the next line.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is the only change that is not related to the bug. I'm not sure if it's a good idea to change the test data.
This is a POST route, but the route is called with a GET request.
This method is only used in this class, so it can be made `private`.
This is used for testing purposes.
This class is empty. Please remove it.
This is a regression.
I think this is the only place where we need to call this method.
This is a bit of a nit, but I think it's better to use `auto` here.
I think this should be `itemdetails` (without the `.html`)
I think this is a typo.
Line is too long. [112/80]<br>Space inside { missing.<br>Space inside } missing.
I think this should be 0022.
I think we should check the filter here.
This is a breaking change.
I think this is the only place where we need to use `wp_json_encode` instead of `json_encode` because we need to make sure that the output is always valid JSON.
nit: remove empty line
'mean PAAHead does not support test-time augmentation'
I think it's better to use `if (!noteIds || !noteIds.length)` here.
This is a bit of a weird interface. I'm not sure if it's worth it.
I'm not sure if this is the best way to do this. I'm not sure if we should be passing a pointer to a pointer. I'm not sure if we should be passing a pointer at all. I'm not sure if we should be passing a pointer to a pointer to a pointer. I'm not sure if we should be passing a pointer to a pointer to a pointer to a pointer. I'm not sure if we should be passing a pointer to
I think this is the only place where we're not using `defer` to clean up. I'm not sure if that's intentional.
I'm not sure if this is the best way to do this. I'm not sure if there is a better way to check if a host is a loopback IP.
I think this is the only place where we need to use `raw-loader` in the codebase.
I think this test is failing because of the new bond length. I'm not sure how to fix it.
Line is too long. [105/80]<br>Use %w or %W for an array of words.
Use || instead of or.<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
`a` and `b` are pairs of `Value` and `bool`, so `a.first` and `b.first` are `Value`, `a.second` and `b.second` are `bool`. So, `a.first > b.first` is not right.
This is the only place where we call stopEventWalk(). I think it should be called in the else block above.
This test is not needed anymore.
I think this should be `bee` instead of `bee binary`
I think this should be `project.getBuildDir().getAbsolutePath()` instead of `project.getProjectDir().getAbsolutePath()`?
I think we should be using `klog/v2` here.
This is a bit of a hack, but I don't see a better way to do this.
This file demonstrates how to send a message using the Amazon Simple Notification Services (SNS) topic using the AWS SDK for Ruby.
I'm not sure if this is the best way to do this. I'm not sure if we should be passing this in as a string and then parsing it in the `addons.go` file. I'm not sure if we should be passing this in as a string and then parsing it in the `addons.go` file. I'm not sure if we should be passing this in as a string and then parsing it in the `addons.go`
I think this is a bug fix. I'm not sure why we were missing the kw_defaults.
I think we should call this `InMemDisabled` to be consistent with the other configs.
I think this is a bit confusing. I think it would be better to just say "failed to prepare running deploy source data" and then add the error as a second line.
This is a breaking change. I think we should keep the old behavior for now.
I think this should be `TOKEN_EXP_MINUTES` instead of `TOKEN_EXP_DEFAULT`
I think this test is not needed, because the `test_records_can_be_created` test already covers this case.
This is a debug statement.
I think this should be `from boto.vendored.six.moves import UserList`
This is a new dependency. Is it used?
I think we should use `android_keystore_password` and `android_key_password` for consistency with the other config options.
I think this should be `mockDircache` (singular)
This is a breaking change.
This is a leak.
I think we should be able to use `context.getMethod().getRequestStreaming()` and `context.getMethod().getResponseStreaming()` directly here.
nit: I think it would be better to use `Iterables.isEmpty` here.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
Please remove this line.
I think this is the only place where we need to do this.
This is not needed anymore.
I think we should use `ENV["NO_WELCOME_EMAIL"]` instead of `ENV["NO_WELCOME_EMAIL"] == "true"` here.
I think this should be `this.countRows() > 1` instead of `this.countRows() >= 1`
This benchmark is a bit strange. It's a baseline, but it's also a benchmark that runs `RequestParsingData.InnerLoopCount` times. I think it's better to have a benchmark that runs `RequestParsingData.InnerLoopCount * RequestParsingData.Pipelining` times.
This is a bit of a hack, but it works. I'm not sure if there's a better way to do this.
nit: move this import to the top of the file.
This file should be named `index.js` instead of `index.jsx`.
This is a regression, I think.
This is a bit ugly, but it's the only way to do it without changing the `sendInventoryItem` function.
This import is unused.
I think this is the wrong way around. We expect an error when the instance is not found.
I think we should just remove this class.
I'm not sure if this is the right fix. I think we should be able to bind base classes, but we need to make sure that we don't try to bind them in the wrong context.
This is a bit weird. Why do we need to destroy the tablet tool here?
I think this should be `if (config->http_proxy)` instead.
This is a bit dangerous, as it will print the response to the console. I'd rather suggest to use `print_r` or `var_dump` instead.
This is a map of state for the current matcher. It is keyed by the name of the matcher.
Please remove empty line.
nit: remove empty line
I think this is the only place where we are wrapping errors. I think we should keep it.
This is a breaking change.
please use `import {Component} from 'react'` instead of `import React, {Component} from 'react'`
This test was removed because it was causing a warning in the test runner.
I think this is wrong. `dic.words` is a `String[]` and `dic.wordHashes` is a `HashSet<String>`. The size of the `String[]` is the size of the array, not the size of the strings it contains.
I think this should be `MySQLType.TypeTime` instead of `MySQLType.TypeDuration`
This is a breaking change. I think we should add a `@experimental` tag to this method.
I think this should be `c.cnpInformer.Informer().GetIndexer().ByIndex(ClusterGroupIndex, cg.Name)`
This is a bit of a hack, but it's the only way I can think of to get the test to fail. I'm not sure if there's a better way to do this.
This is a bit of a hack, but it's the only way I can think of to ensure that the variable is set after the core loop has started running.
I think this is a typo.
remove this line?
I think this is a good change. I'm not sure if it's worth it to add a new dependency for this.
I think this should be 100.
Restore the clock
This is a bit of a hack, but it's the only way I could get the test to pass. I'm not sure why the test is failing, but I think it's because the `qr` slice is being modified by the `append` call. I'm not sure why the `append` call is modifying the slice, but I think it's because the `qr` slice is a slice of pointers. I'm not sure why the `
I think this is the only place where we can't use `onError` because we need to call `onSuccess` after the `onError` call.
I think this is a good change, but I'm not sure if we should do this for all the icons. I think we should only do this for the icons that are not set by the user.
nit: remove empty line
I think this should be `KeyStore` (lowercase)
This is a bit weird, but I think it's correct. The `fallthrough` is necessary because the `case` is not the last one.
Line is too long. [105/80]<br>Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
This is a breaking change.
Style/MutableConstant: Freeze mutable objects assigned to constants.
Please don't use wildcard imports.
I'm not sure about this import. I'm not sure it's a good idea to import a template file. I'm not sure it's a good idea to import a template file from a module that is not a template. I'm not sure it's a good idea to import a template file from a module that is not a template from a module that is not a template. I'm not sure it's a good idea to import a template file
I think this is a bit too long for the line. Maybe we can split it into two lines?
I'm not sure if this is a breaking change. I'm not sure if we should add a new method to an existing interface. I'm not sure if we should add a new method to an existing interface. I'm not sure if we should add a new method to an existing interface. I'm not sure if we should add a new method to an existing interface. I'm not sure if we should add a new method to an existing interface. I'm
This is a bitmask, so it should be an int.
This is a breaking change.
This benchmark is not runnable. It has no benchmarks.
I think this should be `UVarint32` to be consistent with the other types.
I think we should rename this to `rewardCalculatorFactory` to be consistent with the other parameter names.
I think this is a bit confusing. I think it would be clearer to say that `unflushedReady` is closed when `unflushedPaths` is non-nil.
This is a bit of a hack. I'm not sure if there's a better way to do this.
This is the only change that I'm not sure about. I'm not sure if we should be stripping unlearned columns here. I think it's probably fine, but I'm not sure.
why not use `act.ConvertFromActionPb(act)`?
This is a breaking change. I think we should have a separate commit for this.
I think this is a bit more readable as `parentRole === 'list'`
nit: I think this should be `nat_lvl1_drop_reason` or something similar.
I think this should be `os.environ.get('GOOGLE_APPLICATION_CREDENTIALS', 'bigquery-credentials.json')` to avoid a `KeyError` if the environment variable is not set.
I think it would be better to use `Parameter|null` instead of `\Shopsys\FrameworkBundle\Model\Product\Parameter\Parameter|null`
This is a test package.
I think this should be `secondary` instead of `slave`
I think this is a typo.
I think this is a good idea, but I'd prefer to have it in a separate PR.
This is a bit weird. I would expect the `else` to be before the `if` and the `return false` to be after the `if`.
I think this should be `cleanup = singleFilePath.isEmpty() && req.getParams().getBool(ConfigSetParams.CLEANUP, false);`
This is a bit of a hack. I'm not sure how to do this properly. I'm not sure if the accounting is correct. I'm not sure if the accounting is correct. I'm not sure if the accounting is correct. I'm not sure if the accounting is correct. I'm not sure if the accounting is correct. I'm not sure if the accounting is correct. I'm not sure if the accounting
This file is only used on linux,android.
I think this should be `astroid.Index` instead of `astroid.Const`
why not use `action.Sign` here?
I think this should be debug.
Line is too long. [105/80]<br>Use the new Ruby 1.9 hash syntax.
This is a change in behavior. The destructor used to throw an exception if close() failed. Now it doesn't.
I think this is a bit dangerous, since it's not thread safe. I think we should just return the maps and let the caller do the locking.
This is a bit confusing. I think we should just remove this field and always use `getBatchSize()` instead.
This import is not needed anymore.
Line is too long. [105/80]<br>Space inside { missing.<br>Space inside } missing.
This is a breaking change. The `getSourceDataArray` method was used by the `play` method to get the data array. Now it's using the `getSourceData` method.
This is a bit of a nitpick, but I think it would be better to use `exception.ToString()` here instead of `exception`.
This should be `objects=['default', 'ipywidgets', 'vscode']`
Please remove the trailing comma.
This is a bit of a hack, but it's the only way I can think of to get the layout direction to be set correctly. I'm not sure if there's a better way to do this.
I think this should be `FLB_ERROR` instead of `FLB_RETRY` since it's a fatal error.
I'm not sure if this is a good idea. I'm not sure if we should be using a prefix at all. I'm not sure if we should be using a prefix that is specific to Preact. I'm not sure if we should be using a prefix that is specific to Preact and not React. I'm not sure if we should be using a prefix that is specific to Preact and not React and not React. I'm not sure if we
I think this should be `context.Context` instead of `gocontext.Context`
This is a typo.
I think this should be `sh.if` instead of `sh.elif` since it's the first condition.
Please add the copyright statement.
This is a bit of a hack, but it's the only way I can think of to get the object expression to work. I'm not sure if there's a better way to do this.
I think this should be `return "", nil`
I think we can remove these attributes.
I think this is a bug fix. I think we should be able to merge two indexes with the same name but different columns.
This is the only place where we use `FLAG_ACTIVITY_CLEAR_TASK` so I think we can remove the `if` statement.
I think we should use `repo.ListRepos` here.
I think this should be `if (this.schema.discriminatorMapping && fields && this.schema.options.discriminatorKey)`
I think this should be "unauthenticated" instead of "anonymous"
This is a bit of a hack. I'm not sure how to do this properly.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
I'm not sure if this is the best way to do this. I'm not sure if we should be passing the feature collection around like this. I'm not sure if we should be passing the feature collection around like this. I'm not sure if we should be passing the feature collection around like this. I'm not sure if we should be passing the feature collection around like this. I'm not sure if we should be passing the feature collection around like this.
Style/RedundantSelf: Redundant self detected.
I think this should be `info` or `debug` instead of `finest`.
I think this should be `range_type=None` by default.
I think this should be `public static final String paramsPrefix = "_tt";`
This should be `fs.Errorf`
I think we should keep the buckets we had before. I think we should also add a `hive_kube_client_request_seconds_bucket` metric that is a counter of the number of requests that fall into each bucket.
This is a bit of a hack, but it's the only way to get the right parameter name. I'm not sure if there's a better way to do this.
I think this should be a MessageDlg.ShowError() call.
I think we should also add `testnet-beta` here.
EvalHook and DistEvalHook is a deprecated, please use "mmcv.runner.EvalHook" or "mmcv.runner.DistEvalHook" instead
This import should be grouped with the other stdlib imports.
What's the TODO here?
I think we should add a `Timestamp` parameter to the `addEvent` method.
This is a bit of a problem. The `txt` array is a pointer to a string, which is a pointer to a char. So when we move the `other` object, we're moving the pointer, not the string. So when we move the `other` object, we're moving the pointer, not the string. So when we move the `other` object, we're moving the pointer, not the string. So when we move the `other` object
This is the only menu item that was not used. I removed it.
This file is not used anymore.
I think this should be `sysprep_windows_image` to be consistent with the other flags.
I think we should be able to use the `options` parameter here, instead of hardcoding `ignoreUndefined: false`.
For the 'media' resource you can also specify: imageMaxWidth - Resize all media manager image uploads to be within this with (in pixels, 0 = ignore) imageMaxHeight - Resize all media manager image uploads to be within this height (in pixels, 0 = ignore) imageQuality - Set this quality to all media manager image uploads (1-100)
I think this is the only place where we use the `Name` field. I think we can remove it from the struct and the `ContainerMetadata` struct.
I think this is a bug fix. The default value should be `null` and not `DBOpenHelper.DEFAULT_DB_NAME`.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this is a bit confusing. The constructor is called `JwtIssuerAuthenticationManagerResolver` but it actually creates a `ResolvingAuthenticationManager` which is a wrapper around a `JwtIssuerAuthenticationManagerResolver`. I think it would be better to rename the constructor to `ResolvingAuthenticationManager` and remove the `JwtIssuerAuthenticationManagerResolver` constructor.
why change this?
I think this is a good change, but I'm not sure if we should be doing this in the `Coercing` implementation. I think it would be better to do this in the `GraphQLScalarType` implementation.
This test is not needed anymore.
This is a breaking change.
Please add a space after the `=>`.
I think this should be `this.map((item, index) => item.toJSON ? item.toJSON(index.toString(), cache) : item.toJSON(index.toString(), cache));`
I think this should be `AWS_CONFIG_FILE` instead of `AWS_SHARED_CREDENTIALS_FILE`
I think this should be `colocatedWith` (or `colocated_with`) to be consistent with the other keys.
I think we should use the `allowfullscreen` attribute here.
Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
This factory is used by the make_stubber fixture found in the set of common fixtures.
This is a bit weird. I'd expect the parent to be set to null.
I think this should be `oomWaitingJobMeter` (lowercase `w`)
This is a bit of a hack, but it's the only way I could get the test to pass. I'm not sure why the remote client is returning nil here.
I think this should be "transferred" not "transfered"
I think we can remove this interface.
I think we should keep the old names for backward compatibility.
IOTX unit instead of Raul?
This is a bit of a hack, but it's the only way I could get the tests to pass. I'm not sure why the tests are failing, but I think it's because the `hex` function is returning a string with a `0x` prefix. I'm not sure why it's doing that, but I'm not sure how to get around it.
This class is not used anywhere.
I think this is the only place where we are not checking for null or empty.
This is a bit confusing. It looks like you're removing all the checksums that are NULL. But the function name suggests you're removing all the checksums that are not NULL.
This is a bit of a hack, but it's the only way I could get the current attribute to show up in the HTML. I'm not sure if there's a better way to do this.
I think this is a bug fix. The `split` method will return an array with the original string if there is no match. So if the string doesn't contain a `?`, the array will be of length 1.
I think this is a bug. We should not be passing a pointer to a pointer.
I think we can remove this file.
This method is not used anywhere.
This is a bit of a nit, but I think it's better to declare the variable here, and then assign it on the next line.
I think this should be `defer s.recordStepTime(startTime)`
This is the only place where we set the result to nil. I'm not sure if it's a good idea to set it to nil here. I think it's better to return the result from the plan.
I'm not sure if this is the right way to do this. I'm not sure if we should be setting this property here. I think it's better to set it in the `Create` method.
I think we should also test `ks.fillna(0, inplace=True)` here.
I think we should use `Failed` for all of these.
I think this should be `if (!attacked || attacked == this)`
This is a breaking change. I'm not sure if we should do this.
I think this should be `msg.Date.min = "Path `{PATH}` ({VALUE}) is before than minimum allowed value ({MIN}).";`
This should be a warning, not an error.
This parameter is no longer used.
I think this is a good change. I think we should also make the same change in `WaitForAllTxnsToConfirm` in `fixtures.go` so that we don't have to change it in all the tests.
This is a bit of a hack. We should probably have a better way to handle this.
I think we should use `selfService` instead of `selfserve` to be consistent with the rest of the code.
This test is no longer relevant.
@squeed @liggitt I think this is the reason why the `reprocessCNP` is called twice. The first time is when the CNP is created, and the second time is when the CNP is updated. The `reprocessCNP` is called twice because the `enqueueAppliedToGroup` is true when the CNP is updated. I think we can remove the `enqueueAppliedToGroup` parameter and just call `reprocessCN
I think this should be `if (eventEmitter) { return; } else { ... }` so that we don't return if `eventEmitter` is falsey.
I think this is the only place where we use `InternalContext` - can we just use `Context` everywhere?
I think this is a good change, but I'm not sure if we should be using `err` as a variable name. I think `error` would be more consistent with the rest of the codebase.
This is a bit of a weird pattern. I'd expect `enabled_features_found` to be `nullptr` if the feature is not enabled. Is this a bug in the validation layers?
I think we should move these to `helpers` since they are not specific to storage.
This function is blacklisted.
This is a bit of a nit, but I think it would be better to use `sys.version_info` here.
I think this is a breaking change. I think we should keep the old usage and add a new one.
This function is called during sendrecv() routine to select the available sockets.
I think this is the only place where we need to add the `selenium` prefix.
I think this is a bug. The `Exact Match` column should be included here.
I think this is the wrong message. The cluster controller has not yet set the owner reference, but the AWSCluster controller is paused.
This method should return an array with the following keys: - `filename` - `alt` - `path`
I think this should be `false` here.
I think this is a good example of how to use the `computed` function. I'm not sure if it's necessary to use the `i18n` property as a dependency, but I think it's a good idea to do so.
I think we should add a `name` column here.
I'm not sure if this should be in libcalico-go or not. I think it's probably fine to have it in libcalico-go, but I'm not sure if it's worth adding it to libcalico-go.
This file is not used.
I think this is the only place where we can use `prepend` instead of `append` (and `reverse` at the end).
I think this should be `PLUGINS_ZK_PATH` or something like that.
This should be moved to the top of the file.
Why not use `std::make_shared` here?
Indentation should use tabs instead of spaces.
I think this should be `Integer.MAX_VALUE` instead of 0.
I think this should be `fields.length` instead of `10`
I think this should be `ConfigFor(Plugin) *PluginConfig`
I think we can use `return_value=None` instead of `MagicMock()`
I think this is a bug. The type should be unknown.
nit: I think this should be `Predicate<T> isDeleted = t -> false;`
This is a bit of a hack, but it's the only way I could think of to get the subjects to be sorted.
This method is not used anywhere.
This is a bit of a nitpick, but I think it would be better to use `cls._timeout is socket._GLOBAL_DEFAULT_TIMEOUT` here.
This is a bit of a hack, but I couldn't figure out how to get the `OkDialog` to work. I'm not sure why it doesn't work, but it seems to be a timing issue. I'm not sure if this is the best way to do this, but it works.
I think this should be `machineScope.V(2).Info("Unable to locate EC2 instance by ID or tags")`.
I think this import should be moved to the top of the file.
This is a bit of a nit, but I think it would be nice to have a test that checks that the error message is correct when the solids are defined in different pipelines.
I think this is a typo.
This is a bit of a problem. I'm not sure what to do here. I'm not sure if we should just ignore these events, or if we should queue them and then ignore them if they don't connect back to the desktop. I'm not sure if there are any other UIA events that can be fired on a UIAElement with no windowHandle.
This is a bit of a hack, but it's the only way I could get the test to pass. I'm not sure why the order of the output is different between the two versions of the code.
This is a breaking change.
I think we should not use the alias here.
I think this is the only place where we need to exclude nvcc.
Nit: I think this should be `LOG` instead of `LOGGER` to be consistent with the rest of the codebase.
This is a bit of a hack. I'm not sure why the type of the `High` field is a pointer to a `Basic` type, but it is. I'm not sure if this is a bug in the go compiler or if it's a bug in the LLVM backend. I'm not sure if this is a problem for us. I'm not sure if it's a problem for us.
I think we should rename this to `getArrowBlockNumber` and `getArrowBlockHash` to be consistent with the other forks.
Line is too long. [101/80]<br>Use 2 (not 0) spaces for indenting an expression spanning multiple lines.
I think this should be `Query(ctx context.Context, from, to types.Address, method string, params ...interface{}) ([][]byte, error)` since the signature is not needed.
This is a bit of a hack, but it's the only way I could think of to make this test pass. I'm not sure if there's a better way to do this.
I think this should be `newPointQuery(field, queryRelation, lat, lon)`
I think we should be able to remove this line. The `ServiceNameMappings` property will be `null` if the configuration doesn't contain the `ServiceNameMappings` key.
Line is too long. [105/80]<br>Space missing after comma.
I think this should be `FakeIDByte` instead.
I think this is a typo.
this.constructor // When component is functional component, this is reseted to functional component
I think this should be 1.5. The default is 1.3, but the default is for the old heap. The new heap is 1.5.
This is the only place where we actually change the root directory. I'm not sure if we should do this here or in `reviseRootDir`. I think it's better to do it here, because we want to do it as early as possible.
This method is not supported by this implementation.
This test is no longer relevant.
I think this is a good change. I think we should also change the `TimeUnit.SECONDS` to `TimeUnit.MINUTES` in the `await` call.
This class is no longer used.
This file is part of Invenio. Invenio is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version. Invenio is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MER
I think this should be `if key == "api_sig":` instead of `if key == "method" or key == "api_sig":`
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is a bug. The `data` key should be removed.
I think this is a bug. If the target type is not Long, Double or String, we should throw an exception.
I think this should be `true` if the namespace was added, and `false` if it was already present.
I think this should be `hash=None` instead of `hash=False` (the default value is `None`, not `False`).
This is a bit of a nit, but I think it would be better to use `state.getTypeFromString("org.slf4j.Marker")` here.
This is a change in behavior. Previously, the returned list was unmodifiable. Now it is not.
I think we should use `>=` here, since we don't know what version of mlflow will be installed.
Style/AccessorGrouping: Avoid using self as the first argument of a method definition. If the method is a predicate, use an explicit predicate name. If the method is an attribute writer, use an attribute writer name.
I think we should just default to `true` here.
nit: this is a bit of a weird formatting, but I guess it's fine.
typo: `password` instead of `passowrd`
missing a comma after the `:`
I think it should be `Number of currently running deals`
This is a bit of a hack, but it's the only way I can think of to get the offset to work. I'm not sure if there's a better way to do this.
I think this should be `target.SteadyStateDependencies` instead of `target.Dependencies`
This method is not used in Lucene. It should be removed.
I think this is not correct. If the action fails, the execution should be failed.
This is a bit of a nitpick, but I think it's better to have the `id`s on the same line as the opening tag.
I think this is not needed. The `defer` will be called even if the function returns early.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why `hasattr(x, "__call__")` doesn't work here.
I think this test case is not needed. The test case above already covers this case.
This is a bit confusing. The callback takes a parameter, asFunc, that converts its argument to provider-specific types. What does that mean?
I think we should use `dotnet-core` instead of `dotnet` here.
I think we should call these `Middleware` instead of `Middleware` and `Middleware` to be consistent with the other middleware.
I think this is a good idea, but I'm not sure we should be doing this here. I think it's better to do this in the `SignatureAlgorithm` implementation. This way, we can have a single place where we do this, and we can also have a single place where we can test this.
These are no longer needed.
This is not correct. The macro is defined in 0.9.8f, but not in 0.9.8e. You need to check for the version.
This is a breaking change. I'm not sure if we should do this.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should pin this to a specific version.
Line longer than 120 columns (found 121). [Style]
I think we should remove this.
Style/MutableConstant: Freeze mutable objects assigned to constants.
This class should be public.
This import is unused.
This is a bit of a mess. I'd suggest splitting it into multiple lines.
The schemas in new version are less than the old version, which may cause compatibility problems.
This is a bit of a hack. I'm not sure if this is the best way to do this. I'm not sure if we should be doing this at all. I'm not sure if we should be using a `Map` for this. I'm not sure if we should be using `MutableUserDetails` at all. I'm not sure if we should be using `UserDetails` at all. I'm not sure if we should be using `
I think this is the only place where we need to make an ID from the head MD.
This is not needed, the default is JSON.
I think this is the only place where we need to use `GetClusters()` instead of `Clusters` because `Clusters` is a pointer.
typo: connot both be specified
Line is too long. [85/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `as a clue` instead of `as a cue`.
I'm not sure if this is the right approach. I think we should be able to get the configuration from the `AppContext` in .NET Standard 2.0.
I think this is the only place where we use `ks.SetDefault` so I think we can remove it.
I think this should be `long.MinValue` instead of `1`
I think this should be `aURL = SessionStore.PRIVATE_BROWSING_URI;` instead of `aURL = "";`
I'm not sure why this is happening, but it seems to be a benign error.
This is a test class for testing the `mypy` plugin.
I think this should be `CircuitBreakerManager.build(info.initArgs, solrConfig)`
I think this is a regression. I think we should keep the default padding.
I think this is a good idea, but I'd prefer to keep the colon in the timezone. It's not a big deal, but it's a bit more readable.
This method is used to generate a fake call number prefix.
nit: can we use `TableMetadata.builder()` here?
I'm not sure if this is the best way to do this. I'm not sure if we should be passing the window around everywhere. I'm not sure if we should be passing the focus around everywhere. I'm not sure if we should be passing the window around everywhere. I'm not sure if we should be passing the focus around everywhere. I'm not sure if we should be passing the window around everywhere. I'm not sure if we should be passing
I think this is the wrong way around.
`log.subpiece(4)` is not safe. `log` may be empty.
I think we should add `restore` here.
I think this is a bug. We should not be using `this.plugin.uppy` here.
I think this is a bug fix. The `repo` is a `PluginInfo` object, not a `String` class name.
This is a bit weird. Why do we need to register the counter with the default registry?
I think this should be a `CALI_DEBUG` message.
I think we should use `TimeSpan.FromSeconds(30)` instead of `30000` here.
I think this should be `BooleanClause.Occur.MUST` instead of `BooleanClause.Occur.SHOULD` to match the behavior of the old code.
nit: typo: "if there is an error" -> "if there is an error response"
Please remove empty lines.
This is a bit of a hack, but it's the only way I can think of to get the dimensions to be correct when the user specifies a dimension that is not in the data.
I think this is the only place where we need to check for `isDestroyed` because we are not using `this.splashWindow` anywhere else.
I think this should be `int64_t` instead of `long long`
I think this should be `ResponseMinimumDataRateNotSatisfied` (singular)
This is a breaking change. I think we should deprecate this method and add a new one that takes a `Schema` and a `boolean` flag.
I'm not sure if this is a good idea. I'm not sure if we should be doing this in the packing function.
This should be a single string, not a tuple.
This is a bit of a hack, but it's the only way I can see to avoid the `ArrayIndexOutOfBoundsException` when the target is negative. I'm not sure if this is the best way to do it, but it seems to work.
I think this should be `BaseClkFreq` instead of `BaseClockFreq`
This is a bit of a hack, but it's the only way I could get the tests to pass. I'm not sure if this is the right way to do it, but it works.
I think this is a good change, but I'm not sure if we should be checking for `role` here. I think we should be checking for `role` in the `permitted` list.
I'm not sure if this is the right way to do this. I'm not sure if we should be sending a key press event here. I'm not sure if we should be sending a key press event with a modifier. I'm not sure if we should be sending a key press event with a modifier that is not the default. I'm not sure if we should be sending a key press event with a modifier that is not the default for the tab
This is a `TreeMap` based implementation of `Multimap`.
I think this should be `InterfaceExclude` as well.
I think this import is unused.
This method is deprecated since Symfony 4.2. Please use `AbstractType::getExtendedTypes()` instead.
This is a no-op, but I'm not sure if it's a good idea to call it here. It's not a big deal, but it's not clear to me why we'd want to do this.
This is a copy constructor. It's not used anywhere.
Class Cms\Classes\MediaLibrary has been deprecated, use System\Classes\MediaLibrary instead.
I think this should be `iter_gsuite_group_settings` (singular)
This file is not used anymore.
This is the only place where we set `queue` to `null`. I think it's safe to remove this line.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit of a hack, but I don't see a better way to do this. I'm not sure if this is the best place to do this, but it's the only place I can think of.
I think we should use `platformUnknown` here.
I think we should keep the `OperationName` constant here.
I think we should use `AZKABAN_FLOW_VERSION_2_0` here.
I think this should be `s.metrics.AvailableBalance.Set(float64(balance))`
This is the change that is causing the test to fail. The field is renamed, but the old name is still present in the record.
I think this should be an error.
I'm not sure why this is needed.
nit: `// Propagate skewFromParent to local spans`
Please remove empty line.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this is a bug. The logs_output is a string, but the return value is a list.
This is a bit of a weird one. I think it's better to just return the error here.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think we should not return an empty string here, but a `null` value. This will allow us to use the `?` operator in Twig.
nit: I think we can remove this line.
I think this is the only place where we need to use `actualNode` instead of `node`
I think this is a bug in the test runner. It should be `../../functional/spec-runner/matcher`
I think this is a bit of a hack. I'd rather have a constant for this.
I think this should be `DataDirOnHost` instead of `DataDirOnInstance`
This is a bit weird. I'm not sure if it's better to have this function return a `wlr_drm_format_set` or to have it take a `wlr_drm_format_set` as an argument. I think the latter is better, but I'm not sure.
I think we should use `1000` as the upper bound for DynamoDB.
I think we should use the same name as the Hive property. I think it would be `hive.iceberg.metadata.refresh.max-retries`
I think this should be `metric.Number` as well.
I think we should add a note here that the date_utc is the UTC time and not the client time.
I'm not sure if this is the right thing to do here. I think we should be passing in the logger here.
These two fields are not used anymore.
nit: I think this should be `Zero count argument` (no underscore)
I think this is the only place where we need to check for the timeline extension.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should use `location` instead of `location_factory` here.
I think this is a good idea, but I'd prefer to see it in a separate PR.
`outputs` is not used after this line.
I'm not sure if this is the best way to do this. I'm not sure if we should be using `Object.setPrototypeOf` at all. I'm not sure if we should be using `__proto__` at all. I'm not sure if we should be using `Object.setPrototypeOf` at all. I'm not sure if we should be using `__proto__` at all. I'm not sure if we should be
@sureshanaparti I think this is the only place where we are using `args` as a slice. So, I think we can use `len(args) > 0` instead of `len(args) != 0` here.
I think this should be `externalStatus` rather than `EXTERNAL_STATUS` (same for the other constants below).
I think this should be `testSuite.name === 'pin-mongos' || testSuite.name === 'pin-mongos-auth'`
Style/MutableConstant: Freeze mutable objects assigned to constants.
I think this should be `internal`
This is a change in behavior. The previous behavior was to use the field name as-is, and the new behavior is to use the field name in a case-insensitive manner.
I think we should use `antrea/pkg/apis/networking/v1beta1` instead of `k8s.io/api/networking/v1` in this file.
I think this should be `param_list = [param.strip() for param in params.split(",") if param]`
nit: please remove the extra space here
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why this is necessary, but it seems to be.
I think we should have a default value for this parameter.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `map[int64]struct{}` instead of `map[string]struct{}`
R:  { host: 'localhost', port: 27017, path: '/tmp/mongodb-27017.sock' }
I'm not sure if this is a good name. I'm not sure what the difference is between this and `Outbox`.
nit: I think this should be `Test the scenario where the secondary is killed from the start. The replication strategy should fetch all the missing tlog files from the leader.`
I think this should be done after the `container.Start` call.
I think this is a good example of how to use `foldLeft` to do a `reduce` operation. I'm not sure if it's a good idea to use `foldLeft` for `reduce` operations, but it's a good example of how to do it.
This is a bad idea. You should not catch Exception. You should catch the specific exception that you expect to be thrown.
This is a bit of a hack, but it's the only way to get the display name to be empty. I'm not sure if there's a better way to do this.
This import is unused.
I think we should be using the `price_in_dollars` method here instead of dividing by 100.
This is the only change that matters.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `GenerateSHA256PasswordHash`
I think this is a bug fix. I think we should be able to set a default value of `false` for a boolean field.
This is a bit of a nit, but I think it's better to use `Puppet.lookup(:bolt_inventory, optional: true)` and `Puppet.lookup(:bolt_executor, optional: true)` here. It's not a big deal, but it's a bit more explicit.
I think this should be `CStorVolumeSource` instead of `CstorVolumeSource`
This is a bit of a hack, but it's the only way I could think of to get the includes to work. I'm not sure if there's a better way to do this.
Style/GlobalVars: Freeze mutable objects assigned to global variables.
I think this should be `Task<bool>` - the appstart can return a bool to indicate if it handled the start or not.
This is a bit of a hack. I'm not sure if this is the right way to do this.
I think this is the only place where we use the sugared logger. I think we should just pass the logger directly to the transformer.
I think this test is flaky because of the long poll expiration. I think we should increase the expiration time to something like 100ms.
I think this should be `options.roles || []` instead of `typeof options.roles === 'string' ? [options.roles] : []`
I think this is a good idea, but I'd prefer to see it in a separate commit.
nit: I think this should be `logger.info("Starting to refresh continuous aggregates for year_offset %s and year_count %s", year_offset, year_count)`
I think this should be `if len(args) > 1` since we don't want to allow `kbfs list for-push` but `kbfs list for-push foo` is fine.
I think this should be `src/Datadog.Trace.nuspec` instead of `deploy/Nuget/Datadog.Trace.nuspec`
I think this is the same as the one above.
I think this should be `luaA_object_emit_signal(L, -3, "swapped", 2);` instead.
This is a test of the rawCode command.
I think it would be better to use `h2o_linklist_t` for this.
This is a bit of a hack, but it's the only way I could think of to get the elevated docs to show up in the response. I'm not sure if there's a better way to do this.
I think this should be an error, not a warning.
I think this is the only place where we need to check for minimal mode.
I think this is a good candidate for a retry decorator. I'm not sure if it's worth it to make it a decorator, but it's worth considering.
I think we should just call this `RoutingKey` and not `ShardKey`.
I think this should be `PeerTrackerAttestor` (capital P)
`spaceLock` is not used anymore.
I'm not sure if this is the best way to do this. I'm not sure if we should be exposing the dictionary directly. I think we should probably have a method to get the properties and then we can do the filtering.
This is a bit of a hack, but it's the only way I could get the server to work. I'm not sure if this is the best way to do it, but it works.
I think this should be `network-audit-results.json` instead of `networkLogFile`
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is a good idea. I'm not sure if we should do this for all the other `getOps` methods, though.
I think this should be `cgroup.Resources.MemorySwap = configs.MemoryUnlimited`
This should be `errNotImplemented`
These are no longer used.
I'm not sure if this is the best way to do this. I'm not sure if we should be setting the storage class on the key object if it's not set in the response. I think we should probably just set it to `None` and let the user decide what to do with it.
This is not correct. The `delegatedRepository` is not the only field in this class.
I think we should make these configurable. I think we should also make them configurable in the calico/node container.
I think this is a bit more readable: `this.givenFeeSat = opts.fee || opts.feeSat;`
I think this should be `IdentifyForChat`
This is no longer used.
I think we should use `promise.amount` instead of `promise.amount` for consistency with the other flags.
I think this is a bug. The test should be `ln2, "127.0.0.1:" + ln2port, true`
This is a bit of a nitpick, but I think it would be better to use `for (int i=0; i<browserState.getTabs().size(); i++)` and `for (int i=0; i<mSessions.size(); i++)` instead of the for-each loops.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `nowPlayingItem.RunTimeTicks || 0` to avoid a possible divide by zero error.
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think this should be `googlesitekit.Settings` instead of `googlesitekit.SettingsLegacy`
I think we should rename this to `GSUITE_SERVICE_ACCOUNT_KEY_FILE` as well.
I think we should use the defaults here.
nit: I think it would be better to have the error message be the first thing in the string, so that it's clear that the error is the reason for the failure.
This is a bit of a hack, but it's the only way to get the correct type for `count($arr)` when `$arr` is an array of `int|null`.
Line is too long. [115/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
NIT: Can we move this to the top of the file?
Please remove the space after the full stop.
I think we should set the `SpanKind` tag before the `SpanTypes` tag.
I think this should be 100ms. I think we've seen a few cases where we've had a single block take 100ms to fetch, and we've seen a few cases where we've had a single block take 100ms to fetch, and we've seen a few cases where we've had a single block take 100ms to fetch, and we've seen a few cases where we've had
I think this should be `BOOLEAN` instead of `INT` to be consistent with the other boolean columns.
This method is not used in the PHP plugin.
This is a bit of a hack, but it's the only way I can think of to get the bond stereo check to work for the new bond stereo enum.
I think this should be a `tinyint(1)` instead of a `bool` to save some space.
Nit: Please remove empty line.
I think we should not lock here.
I think this should be `0` instead of `1` (and the same for the `else` branch below).
I think this is a good idea, but I'm not sure if we should do it in this PR. I think it's better to do it in a separate PR.
I think this is a bug. The page should not be skipped. The user should be able to set the modifications on the match page.
I'm not sure if this is needed. I think the linker will remove it anyway.
remove empty line
I think this should be `MatchPriority(priority uint32)` to match the `Match.Priority` field type.
I think we should remove this one. It's not used anywhere.
I think we should use `tblInfo.getPkHandleIndex()` here.
This class is not used anymore.
I think we should log the error here.
I think this should be `goss` instead of `...`
I think this is a bug. I think we should keep the `resource` count at 1.
I think this should be `CommandDirectOperation` or something similar.
I think this is not necessary.
I think this should be `KeyNodeHostname` as well.
This is a bit confusing. I would say "No shared memory regions found. Try running osrm-datastore" or "No shared memory regions found. Try running osrm-datastore or osrm-datastore-server"
I think this should be `EnableDNSDiscovery` to be consistent with the other config options.
I think this should be `typeof(InitializeBlockchain)` instead of `typeof(ReviewBlockTree)`?
I'm not sure if this is the right place to put this. I'm not sure if it's even the right thing to do. I'm not sure if it's even the right thing to do.
I think this is a bit of a weird way to do this. I'd prefer to see `if !c.Data["IsApiToken"]` or `if c.Data["IsApiToken"] != true`
I think this should be `OverrideNginxIngressWhitelistAnnotation string `json:"overrideNginxIngressWhitelistAnnotation,omitempty"`
I think this should be `UpdateLabels(id interface{}, labels labels.Labels)`
This is not needed.
nit: unused import.
I think we should add this to the `Info` struct in `pkg/server/info.go` as well.
Nit: I think we should use `SimulatePrincipalPolicy` here.
nit: remove empty line
This method is not used.
I think this should be `json_output` instead of `json_input`.
This code example demonstrates how to upload an item (file) to a folder within a bucket in Amazon Simple Storage Solution (Amazon S3).
I think this should be a constant, and not a variable.
I think this should be `cgroup.Resources.CpuWeight != 0 || cgroup.Resources.CpuMax != 0`
This is a bit of a hack, but it's the only way to get the block type from the block itself. I'm not sure if there's a better way to do this.
This is a bit hard to read. Can you please split it into multiple lines?
This should probably be taken out when we add smarter column selection as its currently hard coded for the number of columns
I think this is not needed.
This is a good example of why we need to be careful about using `mov` to set a register to zero. It's not guaranteed to be zero, it could be any value. In this case, it's probably fine, but in general, it's not safe to use `mov` to set a register to zero.
I think this should be `SELECT count(*) FROM (%s)` (without the space after `count(*)`)
I think this should be `runtime.NumCPU()`?
nit: this is a bit long, can we make it a constant?
This task does not accept any message. When True, all messages are accepted.
I think this should be `numAttempts < maxAttempts` to be consistent with the original code.
I think this should be `limit: Optional[int] = get_option("compute.max_rows", None)` to match the docstring.
why change the early_stopping_rounds?
I think this should be `appName` instead of `sampleAppName` to be consistent with the other fields.
This is a bit of a hack, but it's the only way I could get the test to pass. I'm not sure why the test was failing before.
This is a breaking change.
I think this should be moved to the `else` block below.
This test is failing because the translation is not found.
I think we can use `torch.finfo(torch.float32).eps` here.
I think this is the only place where we're using `require.NoError` instead of `require.Error` (and vice versa). I'm not sure if it's a good idea to use `require.NoError` for errors that are expected.
I think this should be `('POST', '/session/$sessionId/window/minimize')`.
This is a bit of a hack, but it's the only way I could get it to work. I'm not sure why the `toString()` method doesn't work.
why remove this?
I think this should be `OnNext(value.Key, value.Value);`
I think this is the same as `kdf.to_pandas().unstack(level=1)`?
I think this should be `Times.Once`
I think this is a bug fix.
Please use `android.util.ArrayUtils` instead of `org.apache.commons.lang3.ArrayUtils`.
I think this should be `url` instead of `artistName`
This flag defaults to true and is here in case customers need retrocompatibility only
This is a breaking change. We should add a deprecation warning.
This is a bug fix.
I think we should use `INSERT IGNORE` here.
I think this should be `App` not `app`
why not use std::numeric_limits<double>::epsilon()?
`copy` is not used in this function.
I think this should be `INFO` level.
I think this is the only place where we set the `Error` field. I think we should be consistent and set it everywhere.
This is a breaking change. We should not throw an exception here.
Nit: I think we should use `sigs.k8s.io/cluster-api/cluster/v1alpha3` here.
I think this should be `l = l.payload` instead of `l = l.payload.getlayer(0, _subclass=True)`
This description.py file was generated by: '~/nupic/eng/lib/python2.6/site-packages/nupic/frameworks/opf/expGenerator/ExpGenerator.py'
Please remove empty lines.
This is deprecated. Please remove it.
This is a bit weird, but I guess it's just a test.
I think this is a good change. I'm not sure if we should do this for all runtimes, but I think it's a good idea.
I think this is a bug. The method is not annotated with `@PagedResponse` but the `getAndSavePagedResponseTypeName` method is called.
I think this is a good use case for `Object.fromEntries`
I think this is the only change that is not related to the fix.
I'm not sure if we should be passing these props down to the `Notification` component. I think it's better to have the `Notification` component be self-contained and not rely on the parent to pass it props.
I think this should be `cancelled` to match the field name.
This should be `string` instead of `string|null`
I think this file should be removed.
This function is no longer used.
Please don't use wildcard imports.
I think we should use `self.log` here, not `logging.getLogger(__name__)`
I think this is a duplicate of the check in `decode_opnd_int` above.
I think this is a bug. I think the dispose order should be C, B, A.
I think we should add this to the `AddAspNetInstrumentation` extension method.
I think this is wrong. The `importedname` is the name of the module being imported, not the name of the module that is doing the importing. So, if you have `from . import foo`, then `importedname` should be `foo`.
Style/ClassVars: Use a class variable instead of a class instance variable.
Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
I think we should use the `userDomainPrefix` variable here instead of the `ZMSConsts.USER_DOMAIN` constant.
nit: I think we should use `addRequiredColumn` here as well.
I think this should be `<2.3` to be compatible with Python 2.7.
This is a bit of a hack, but it's the only way I can think of to get the cflags from the environment. I'm not sure if there's a better way to do this.
This is a bit of a hack, but it's the only way I can think of to get the resync to happen.
I think this is the only place where we use `errors.Wrap` and `errors.New` together. I think we should use `errors.Wrap` only.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit ugly, but I couldn't figure out how to get the `load_plugins` function from the `plugin-loader` module.
I think this should be `cStorVolume.Spec.Capacity.String()` instead of `cStorVolume.Spec.Capacity`
I think this is a good idea. I'm not sure if we should keep the file around, but I think it's a good idea to keep it around for debugging.
I think this should be a hook, not a component.
I think this should be `MetricNegLogLikelihood` (capital L)
I think this is the only place where we use the `conversion.Converter` directly. I think we should use the `conversion.NewConverter()` instead.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is not needed anymore.
I think this is a typo.
I think we should use the default value here.
This is a change in behavior. Previously, if the volume was not found, the error was set to `util.PageNotFound` and the error message was printed. Now, the error is set to `util.InternalServerError` and the error message is not printed. Is this change intentional?
This import is unused.
I think this should be `this[kIsMaster] === undefined` instead of `this[kIsMaster] == null` because `this[kIsMaster]` is a `Promise` and not a `boolean`.
I'm not sure if this is a good idea. I'm not sure if the `var` is necessary.
This is a good example of a case where the `static_cast` is not needed. The `bool` constructor will do the right thing with an integer argument.
Please remove the trailing slash from this route.
Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.
I think this is not needed.
This should be `protected $clones = [];` instead of `protected $clones = array();`
I think this should be `axe.commons.utils.tokenList`
This field is already attached.
I think this should be `func(string, string) Policy` instead of `func(string) Policy` since the `policyName` is used to get the policy from the map.
I think this should be `} else {` instead of `} {`
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why it's failing, but I'm guessing it's because of the way the `piddle` module is set up. I'm not sure if there's a better way to do this.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a pointer to a bool. If it's nil, then the default behavior is to call ShouldRetry. If it's set to true, then the default behavior is to call ShouldRetry. If it's set to false, then the default behavior is to not call ShouldRetry.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this is a bit too complicated. I'd just do `if params[:decline] || !params[:read_tou]` and then in the controller check if `params[:read_tou] == "0"` and if so, redirect to the terms of use page.
This is the change that will break the generated code.
This is a bit of a nitpick, but I think it would be better to use `item_view.is_suppressed = false` instead of `item_view.is_suppressed = 'false'`. The latter will work, but it's not the same as `false` in the sense that it's not a boolean value.
I think we should be consistent with the rest of the codebase and use single quotes for strings.
I'm not sure if this is the right place to put this. I'm not sure if it's even necessary.
I think we should call this `SecretBackendSSM` to be consistent with the AWS API.
I think this should be a constant.
Line is too long. [85/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `googlesitekit-user-input__notification--success` to match the other notifications.
I think this should be `h2o_mruby_eval_expr(mrb, "require \"%s/preloads.rb\"", H2O_ROOT);`
I think this should be `strings.HasPrefix` instead of `strings.Contains`
I think we should use `Snapshot` here.
This should be `Maximum` (capital M)
I think this is a good change.
I think this should be a static local variable.
I'm not sure what this is supposed to do. It's not a matcher, it's a predicate.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a breaking change. I'm not sure if we should do this.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `osconfig_not_supported: true` (colon instead of equals sign)
I think this should be `Discipline` instead of `Discipline`
This import is unused.
I think this should be `if ifaceName == "wireguard.cali" {`
I think this should be `s == "linux"` instead of `s == "" || s == "linux"`.
This is wrong. The number of SIMD registers is not the same as the number of SIMD slots. The number of SIMD slots is the number of SIMD registers times the number of threads.
I think this is a breaking change.
I think this should be `isInterface() && !isAnnotation()`
This is a test, so I'm not worried about the value.
I think this is a bit confusing. The CLI tools use these variables, but the workflows don't. The workflows use the `Vars` key, but the CLI tools don't.
remove empty line
I think this should be called `CleanupEndpoint` (singular) to match the other methods.
I think this is the only change that is needed to make this test pass.
I think this should be `('POST', '/session/$sessionId/window/minimize')`.
I think we should use the `video_path` helper here, not the `video_url` helper.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit of a hack, but it's the only way I can think of to make sure that the format pointer is NULL when the library is unloaded. I'm not sure if there's a better way to do this.
I think this should be `Enter minimum one (1), maximum three (3) keywords`
Line is too long. [105/80]<br>Redundant `self` detected.
I think we should remove this config from system namespace.
I think this is the only place where we use the `trail` partial. I think we should move it to the `completed_trails` folder.
This is not needed.
@param array $values of values, an array because of multivalued fields
I think this should be done in `config.New()` instead.
I think this is a breaking change. I'm not sure if we should do it.
I think this should be `gitTag.Insert(5, "b")` instead of `gitTag.Insert(6, "b")`
I think this is a breaking change.
This is a bit weird. I'd expect `require('../objectid')` to work.
I think we should use `CreateTestSentryWithMock` instead of `CreateTestSentry` here.
This is a bit confusing. I think it would be better to have a separate variable for the case where the deployment is new and the merge/booted case.
nit: I think it would be better to use `assert.isNumber` here.
This is a bit of a hack, but I think it's the best we can do. I'm not sure how to validate the cron schedule in a way that is compatible with the `croniter` library. I think the `croniter` library is the only library that can validate the cron schedule, but it doesn't expose any way to validate the cron schedule. I think the best we can do is to check that the cron schedule has 5 parts, which
please use `k8s.io/apimachinery/pkg/util/runtime` instead of `github.com/kubeedge/kubeedge/pkg/apiserverlite/util`
I think this is the only change that is needed.
I think this should be `google-site-kit/v1/core/site/data/notifications` (with a trailing slash).
This test is not needed anymore.
why remove these?
I think this should be `d.fields.MatchFold(revField) != nil` (or `d.fields.MatchFold(revField) == nil` if you prefer).
nit: typo: "empty" -> "empty"
I think this is not needed anymore.
This is the progress event.
I think this is the only place where we need to pass the `debugMode` argument.
nit: unused import
I think we should use `topology.description != null` here.
Line is too long. [81/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `clientconfig` (lowercase)
This is a recursive call. I think it's better to inline the method.
I think we should not expose this interface to other modules.
This is a no-op, right?
Metrics/ClassLength: Class has too many lines. [122/100]<br>Metrics/MethodLength: Method has too many lines. [10/5]<br>Metrics/PerceivedComplexity: Perceived complexity for perform is too high. [10/7]<br>Metrics/CyclomaticComplexity: Cyclomatic complexity for perform is too high. [10/
I think we can use `cfg.nms_thr` directly here.
I think this check should be done here, because it's not done in SyncService.verifyFee.
@sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @sureshanaparti @s
I think this should be `Occur.MUST` instead of `Occur.FILTER`
I'm not sure if this is the right way to do this. I'm not sure if this is the right way to do this.
why add this parameter?
Nit: I think we should use `github.com/aws/aws-sdk-go/aws/session` instead of `github.com/aws/aws-sdk-go/aws` here.
IConnectionHeartbeatFeature, IConnectionLifetimeNotificationFeature [](start = 12, length = 53)
I think this is the only change that is needed.
This is a bit of a nit, but I think it's better to use `const std::string &error_code` here.
I think this should be `files(${DRIVE_FILE_FIELDS})` (without the `,nextPageToken,incompleteSearch` part)
I think this test is not needed anymore.
I think this is wrong. If the second operand is null, then the result should be null.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this is a bug. The id should be the same as the remoteHost.toExternalForm()
I think this is a breaking change. The `ok` button was previously used to indicate that the user wanted to continue with the operation. Now it's just a generic button.
`invocation.setContext(cseContext);` is not necessary.
I'm not sure if this is the right fix. I think it's possible that we're double counting here.
I'm not sure about this. I'm not sure if we should be using the same regex for all languages. I'm not sure if we should be using the same regex for all languages. I'm not sure if we should be using the same regex for all languages. I'm not sure if we should be using the same regex for all languages. I'm not sure if we should be using the same regex for all languages. I'm not sure if we
I think this should be `cls.supported_data_formats` instead of `cls.supported_formats`
I think this should be `w.WriteHeader(http.StatusForbidden)` instead of `w.WriteHeader(http.StatusOK)`
I think this is the only place where we use the service account name. I think we should just use the namespace here.
This is not used anymore.
I think this should be `hasResolvedContainers` instead of `hasResolvedAccounts`
I think we should keep the `CASCADE` and `RESTRICT` here.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this should be `/v1/bzz/files`
Nit: Please remove empty line.
This is a bit confusing. I think it would be better to say "If a returned {@link OneMerge} includes a segment already included in a registered merge, then the commit will fail."
I think this is the only place where we actually check the well-formedness of the transaction. I'm not sure if we should keep this check here.
I think this is the only place where we set the `Properties` property. I think we should be able to remove the `Properties` property from the `StackFrame` class.
I think this is the only place where we use `CubeList` in the codebase. I think we should remove it.
Please add a space after `:`
Layout/EmptyLinesAroundModuleBody: Extra empty line detected at module body beginning.
This is the release version.
Metrics/LineLength: Line is too long. [123/120]
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `except ImportError:`
This regexp is not correct. It will match `OBJECT-IDENTIFIER::=` and `OBJECT-IDENTIFIER::= {` and `OBJECT-IDENTIFIER::= {1` and `OBJECT-IDENTIFIER::= {1.1` and `OBJECT-IDENTIFIER::= {1.1.1` and `OBJECT-IDENTIFIER::= {1
I think this is the only place where we need to pass the data dir.
I think we should log the exception here.
I think this should be `if req.GetXattr() != 0 {`
This is a bug fix. The `currentSnapshot` method returns the manifest list, but the `ManifestReader` is reading the data manifests.
I'm not sure if this is a good idea. It's not obvious to me what the caller is supposed to do with the `consumed` and `examined` values. I'm not sure if it's even possible to use these values correctly.
I think you should use the `max` function here.
I think this is the correct instance URL for the sandbox.
why 2?
This is a bit of a nitpick, but I think it would be better to use `val` here instead of `v`.
I think this should be `retry < 10` (or `retry <= 10`)?
I think we should use `mysterium/node/identity` instead of `id` for the import alias.
I think we should keep `selectAll` here. It's not a command, but it's a menu item.
nit: I think we can remove the `null`s here.
I think this should be "Exception in asynchronous handler {0}"
I think this should be `golang.org/x/net/trace`
This is a hack to suppress numpy warnings. It's a known issue that numpy dtype size changed warnings are printed to stderr. This is a workaround for now.
This is a change in behavior. The previous code would have compared the first `val.via.str.size` bytes of the topic name with the default topic name. This change compares the entire topic name with the default topic name.
I think this is a good change, but I'm not sure if we should be doing this in the `isSDAMUnrecoverableError` function. I think it would be better to do this in the `isUnrecoverableError` function.
This is a bug fix. The previous implementation was incorrect.
IQR = Interquartile range.
This test is broken because of the yaml safe load change. I'm not sure how to fix it.
I think this is the only place where we use `unstructured.Unstructured` directly. I think we should use `runtime.RawExtension` instead.
Please remove this unused import.
This is a bit of a mess. I'd suggest splitting it into a few functions.
I think this should be `query/memoryCircuitBreakerThreshold` instead of `query/memoryCircuitBreakerThresholdInPercent`
This test is not needed. The test above already tests this.
I think this should be `TRUE` by default.
This is a bit weird. I'm not sure why we're checking for `client != restClient` here. I think we should just be able to check for `client != null` and `reactActivityDelegate != null` and call `loadReactAppOnceIfReady` if both are true.
I think this is a bit confusing. I think it would be better to say "The standard definitions of CEL functions and operators can be found in the CEL language definition."
I think this is the only test that needs to be changed. The others are just testing the behavior of the connection.
Layout/SpaceInsideHashLiteralBraces: Space inside { missing.<br>Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
typo: classificationCompute -> _classifcationCompute
I think we should use `POST` here.
This test is not needed anymore.
Layout/SpaceInsideHashLiteralBraces: Space inside { missing.<br>Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
This is a bit of a hack. I'm not sure if this is the best way to do this. I'm not sure if we should be using the max_blocking_time_point here. I think we should be using the timeout that is passed in.
I think we should add this to the `PipedServiceClient` interface.
This is a bit confusing. I think it should be `for k := range dirCacheEntry.dels`
This test is not correct. The `dlitem` check is not checking the `dl` role, it's checking the `dt` role. So this test should pass.
I think this is the only place where we need to dispose the response.
This is a bit confusing. The `output_buffer` is an in/out parameter. It is not a return value.
I think this is a bug fix. The `result` is a cursor, not a result. So we need to convert it to an array.
I think this should be `info` as well.
I think this should be `CABundle string` instead of `[]byte`.
I think this should be `BAN_PUBLIC_USERS_DEFAULT` instead of `BAN_PUBLIC_USERS` to be consistent with the other settings.
I think this should be `Either {@link Keys#SHIFT}, {@link Keys#ALT}, {@link Keys#CONTROL} or {@link Keys#COMMAND}.`
This is no longer needed, as `forwardRef` is now implemented in Preact core.
I think this should be `IF_HOST_X86_ELSE(IF_HOST_X64_ELSE(EM_X86_64, EM_386), IF_HOST_ARM_ELSE(EM_AARCH64, EM_ARM))`.
Style/SymbolArray: Use %i or %I for an array of symbols.
I think this should be `Task.Run(() => onCompletedCalled = true, CancellationToken.None)` to avoid the warning.
I'm not sure if this is the best way to do this. I'm not sure if we should be setting the trusted hosts here. I think we should be setting the trusted hosts in the `AppServiceProvider` and then we can just use the `Request::getHost()` method to get the host.
I think we should not sync genesis block here. Because genesis block is already in the blockchain.
This is no longer used.
I think this is a bug. The `makeSha256Reader` function is returning a `[]byte` and not an `error`.
I think we should do this in `Stop()` as well.
I think this is a good change, but I'm not sure if we should be testing for the exact response here. I think it's better to test for the expected result, which is that the response is a dict.
Line is too long. [105/80]<br>Redundant `nil` detected.
I think we should move this to `azkaban.imagemgmt.Constants`
This is the interrupt pin for the pico.
I think we should add a `campaignMedium` field here.
Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
This file should be reverted.
I think this should be `arguments-differ` instead of `arguments-renamed`
This should be `ClassSelector(default=None, class_=np.ndarray, doc="An explicit set of bin edges."`
I think this is a good default, but I'm not sure if it's the best default. I'm not sure if we should have a default at all.
This method is not used anywhere. Can we remove it?
Please avoid wildcard imports.
I think this should be `FLB_DEBUG` instead of `FLB_PLG_DEBUG`
I think this should be `ADIOS_HAVE_HDF5` instead of `ADIOS_HAVE_PHDF5`
I think this should be `http://localhost:4873/-/verdaccio/`
I think we should add a note here that this is only available in Laravel 8.0+.
This is a bit confusing. I think it would be better to say "if the handler is set to default" or something like that.
This is a bit of a hack, but it's the only way I could think of to get the prefix deleted message to show up. I'm not sure if there's a better way to do this.
This is a bit of a hack, but it's the only way I could think of to avoid the exception being thrown in the main thread.
I think this line is not necessary.
Line is too long. [85/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this is the only place where we need to close the body.
This test is not needed anymore.
I think this should be `verifyToken` as well.
Returns `undefined` if dependencies are loading. Returns `null` if there is no registered context string for the given module. Returns `string` the registered context string, screenWidgetContext for the given module.
This is a bit of a nitpick, but I think it's better to use `tiles[z][x][y]` instead of `planeTiles[x][y]`.
This is a bit confusing. I think we should just use the default charset for the target.
I'm not sure if this is the right thing to do here. I think it's fine, but I'm not sure if it's the right thing to do.
I think we should keep this one.
I think this should be `func SetAnnotations(annotations map[string]string) CertificateRequestModifier`
This is the only place where we emit the InstanceStartupEvent. I'm not sure if this is the right place to do it. I'm not sure if we should emit it here or if we should emit it in the `Start()` method.
I'm not sure if this is the best way to get the capabilities. I'm not sure if we should be using the global here.
I think this should be `github.com/asaskevich/EventBus/v3`
I think this should be `IntegrationTestBuildspecPath` (or `IntegrationTestBuildSpecPath`)
This is a bit confusing. I think we should just call `wlr_xdg_surface_destroy` here.
Layout/EmptyMethod: Method set_test? is empty. You should either remove it, or add a call to a predicate method (e.g. test?), a void method call, or a method call that returns a value.
I think this is the right thing to do. I'm not sure why we were doing this before.
I think this should be `const BatchKey = batchKey`
I think this is a good change, but I'm not sure if we should be changing the compose file template at all. I think we should be able to use the same template for all plugins.
I think this should be `benchmarkInt64HistogramAdd` to match the other benchmarks.
I think this should be `allow.restart.on.execution.stopped` (without the `image` part)
This is a bit of a nit, but I think it would be better to call this `windowHandle` instead of `handle`.
This method is not implemented.
This is a constant, so it should be `static constexpr`.
Prefer single-quoted strings when you don't need string interpolation or special symbols.
This class is empty. Please remove it.
This is not needed.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `models = model.split(' ');` instead of `models = model;`
I think this method should be renamed to `nextPrefixKey` to be consistent with the other methods.
Line is too long. [105/80]<br>Redundant `self` detected.
I'm not sure if this is a good idea. I'm not sure if this is a good idea. I'm not sure if this is a good idea. I'm not sure if this is a good idea. I'm not sure if this is a good idea. I'm not sure if this is a good idea. I'm not sure if this is a good idea. I'm not sure if this is a good idea. I'm not
I think this is the only change that is needed to make this work.
I think this should be `true` by default.
This import is unused.
I'm not sure if this is the right way to do this. I'm not sure if the `Trace.TraceError` method is thread safe. I'm not sure if the `StringBuilder` is thread safe. I'm not sure if the `StringBuilder` is thread safe. I'm not sure if the `StringBuilder` is thread safe. I'm not sure if the `StringBuilder` is thread safe. I'm not sure if the
Extra empty line detected at class body end.
Line is too long. [105/80]<br>Use if/unless instead of if/else.
I think this is a good change. I'm not sure if we should have a `wait_for_at_least_entries` method in the mock consumer, but I think it's a good idea.
This import is unused.
I think this is the only place where we need to override `shouldComponentUpdate` because the `Consumer` component is not a PureComponent.
nit: remove empty line
This is a BC break. The `add` method now expects a class name instead of a type.
This test is now redundant.
This is a duplicate of the function in common.go.
This is a bit weird. I'm not sure why we need to implement this interface.
I think this should be "assert value X is not zero"
I think this should be `ProtocolFragmentationAck` to be consistent with the other protocols.
I think this is a bug.
I think this should be `AlertQueryURL string` (without the `s`) to match the CLI flag name.
I think this should be `getMaxPriorityFeePerGas().get().getAsBigInteger().longValue()` instead of `getMaxFeePerGas().get().getAsBigInteger().longValue()`
I think this is a good change. I'm not sure why we were using a map here.
I think this is the only place where we use `WorkflowTaskTimeoutSeconds` instead of `WorkflowTaskStartToCloseTimeoutSeconds`. I think we should use the latter everywhere.
I think this should be `o.id DESC` to match the other method.
I think this should be `cloudsql_instances` and `cloudsql_ipaddresses` instead of `cloudsql`
Style/PercentLiteralDelimiters: %w- should be %w.
I think we should use `import sinon from 'sinon';` instead of `import * as sinon from 'sinon';` to avoid the `sinon.default` thing.
(style) please, no space before tabs
I think this is a bug fix. The body should be sent for POST and PUT requests.
I think this is the only place where we need to use `localeCompare` instead of `<` and `>` because the proccode is always a number.
This is a bit of a weird pattern. I think we should just have a `get_asset_keys` method on the `AssetStore` class.
Prefer %i over %w for arrays of words.
I think we should keep the rewards trace type here.
I'm not sure if we should remove this entry. I think it's better to keep it for now.
I think this should be `this.driver().loadExtension(path)` instead of `this.driver()['loadExtension'](path)`
Nit: I think this should be `// ©` instead of `// ©`
Please remove the `using namespace std;` statement.
This is a breaking change.
This is the patch for the latest version of stepfunctions-local. Is this the right patch?
This is a typo.
(style) line over 80 characters
I think we should keep this config change.
Please keep the import order as it is.
I think this is a breaking change. I'm not sure if we should be doing this.
I think this should be `len += 2 + (value.Tags != null ? value.Tags.Count : 0) + (value.Metrics != null ? value.Metrics.Count : 0);`
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
nit: remove empty line.
I think this is the only place where we need to do this.
This is a bit confusing. The error message is not related to the WebCal-calendar.
This is a new network, so we should add it to the `Network` enum in `src/constants/network.js`
I think this is the only place where we need to change the protection.
I think this is a bug. If args is empty, then the query should be executed as is.
I think we should use `e.deployCfg.Input.HelmChart.Repository` instead of `chartRepoName` here.
This file is autogenerated via the builtin command.
This is the only change I made to the code. I removed the code that checks for the existence of the CA bundle file, because it's not needed. The CA bundle file is always present on Linux, and it's always present on Windows.
This link is dead.
This is a bit of a nitpick, but I think it would be better to return an empty list here.
This is a breaking change.
This is a breaking change. I think we should add a new method `openInput(String name, IOContext context, boolean preload)` and deprecate the old one.
This is the only change that I'm not sure about. I'm not sure if we should be calling `RunCleanupHandlers` here. I think it's fine, but I'm not sure.
I think this should be `if (type != null && SyndTypeUtils.enclosureTypeValid(type)) {`
This is a bit weird. I'm not sure if it's a bug or not.
I think this is a bit too complicated. I would suggest to use a simple `if` statement and check if the length of the new data is equal to the length of the old data. If not, then do a full update.
(style) line over 80 characters
This method is not used anywhere.
This file should be renamed to `Plugin.php`
I think this should be `int *` instead of `bool *`
This is a bit confusing. I think it would be better to have a separate `if` block for the `RemovePleasings` case.
This import is not needed.
I think this is a bit of a stretch, but I'm not sure what else to call it.
This property is obsolete. Use TargetAssemblies instead.
This function is not used anywhere.
I think this should be `h2o_url_compare_hosts(loc_parsed.host, match->host, match->host_is_unix_path)` instead of `h2o_url_compare_hosts(loc_parsed.host, match->host, loc_parsed.host_is_unix_path)`
I'm not sure if this is the best way to do this. I'm not sure if there is a better way to do this.
I think this should be moved to the `_activate_user` function.
I think this should be done only if `useCIArtifacts` is true.
I think this is a style issue.
nit: please remove the extra space here
I think this should be `Selectors: %s:%s` (without the newline)
This is a bit of a hack, but it's the only way I can think of to get the task name without having to pass it in as a parameter.
(style) line over 80 characters
I think we should remove this author tag.
I think we should use `cookiePath` instead of `cookiePath` here.
I think this is a good example of how to use the `computed` function.
I think this is a typo.
I think we can remove this line.
I think this should be `identity_selector.NewHandler`
This is a bit of a weird log message. I'd expect it to be "completed ExecuteAndWaitProgress for %v" (with a space after the "for").
I think this is the root cause of the issue. If the cgroup is removed, we should not return an empty list.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `t('Editing email template')`
This is a bit weird. I think we should just make this a `func (c testTLFJournalConfig) tlfIDGetter() tlfIDGetter` that returns `c.tlfIDGetter`.
I think we should be able to remove this check. If the response is empty, the `receiveProperties` and `receiveProfiles` actions will be dispatched with empty arrays.
I think this should be `@Nullable`
I think this is a bug. We should not return unavailable here.
Line is too long. [105/80]<br>Space inside lambda literal.
This is a bit of a nit, but I think it's better to check for nil here.
This is a bit weird. I think we should just remove this line.
I think this is a good change, but I would prefer to have a constant for the history depth.
I think this is the only change that is needed.
I think this is the right thing to do. I'm not sure why we were doing this before.
I think we should use a different port for web3.
I think we should use `edgeLock` here.
I think this should be kept.
I think this should be 10 minutes.
This is a change in behavior. Before, if the collection didn't exist, we would throw an exception. Now, we just return null. I think this is the right behavior.
This method is not used anywhere.
Nit: I think we should use `parameter name` instead of `parameter` here.
I think we should use the `googlesitekit-logo` class here, not `googlesitekit-logo-mini`.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this is the only change that is needed. The rest of the changes are just to make the config more readable.
I'm not sure if this is the right way to do this, but I'm not sure how else to do it.
This import is unused.
This is the time when the task failed.
I think this is a good thing. We don't want to be testing that the webserver is running, we want to be testing that the webserver is running and that it's serving the right content.
I think this is the reason why the dns server is not working.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
This is a bit confusing. I would prefer to have a default value for the config setting.
I think this should be `next unless val.is_a?(Hash)` to match the previous line.
This is a bit weird. I think we should just remove the defer and do the unlock in the caller.
I think this should be 3000ms, not 3 seconds.
I'm not sure if this is the best way to do this. I'm not sure if there is a better way to do this.
I think this file should be removed.
nit: can we use the builder pattern here?
I think this should be `const runUnifiedTest = require('./unified-spec-runner/runner').runUnifiedTest;`
Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
I think this should be 0644.
I think this file should be removed.
score_thr is not used?
This class is not used anymore. Can you remove it?
This is a pointer to a pointer. I think we should just pass a pointer.
nit: I think this import is unused.
This test is not doing anything. It is just waiting for the element to be unclickable.
I think this should be `sentryAddrs []string` (plural)
This file is empty.
I think this should be `i + 1` since the index is 0-based.
I think this is a bug. The `reserve` call should be inside the `if` block.
NIT: I think we should remove this file.
This method should return a boolean.
I think this is the only place where we use `commandSet` as a string. I think we should just use the `targetGlobalCommandPath` constant here.
Please add a docblock for this method.
This method signature has changed.
I think this is a bug fix. I'm not sure why this was necessary, but it seems to be.
I think this is a bug. The `list_marker` is a list, so it should be `self.list_marker[0]` here.
I think this is the only place where we need to use the `BftBlockHashing` class directly. I'm not sure if we can avoid this.
Style/RedundantReturn: Redundant return detected.
I think this is a good idea. I'd like to see it in the near future.
Unused import statement.
Line is too long. [105/80]<br>Use the new Ruby 1.9 hash syntax.<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think we should be using `k8s.io/client-go/pkg/api/v1` instead of `k8s.io/api/core/v1` and `k8s.io/client-go/pkg/apis/extensions/v1beta1` instead of `k8s.io/api/extensions/v1beta1` and `k8s.io/client-go/pkg/apis/networking/
I think this is not correct. The foundation bonus should be extended from fairbank to fairbank + 1 year. So the condition should be `epochNum <= fairBankEpochNum + a.foundationBonusLastEpoch`
I think we should keep this in the list of forbidden changes.
This test is not testing anything. It's just asserting that the function returns the same object it was given.
I think we should remove this line.
I think we should use `user.email` here instead of `checkout.user_email` because the checkout is not necessarily tied to a user.
This is a bit of a hack, but it's the only way I could get this to work. I'm not sure why the `mount_volumes` object is not iterable.
I think this should be `if (IsClient() && IsEffectInSpell(spell_id, SE_Charm) && !PassCharmTargetRestriction(entity_list.GetMobID(target_id))) {`
Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think it would be better to have a separate function for escaping.
I'm not sure if this is the best place for this. I'd rather have it in the `logging` package, but I'm not sure if that's possible.
This class is obsolete and will be removed in the next major. Use SplFileObject::fgetcsv() instead.
I think this is not correct. If the log id is not sent, it should not be set to lastLogIdSent_.
This is a bit of a weird pattern. If `segments` is NULL, then `copy->segments` is NULL. If `segments` is not NULL, then `copy->segments` is not NULL. I'm not sure if this is intentional.
remove empty line
I think we should be able to get the sources and mirror info from the `mset.info()` call.
This is a bit of a hack, but it's the only way I could get the test to pass. I'm not sure why the test is failing, but I'm guessing it's because the `message` key is not always present. I'm not sure how to fix this, so I'm just going to ignore the error.
I think this should be `TaskStopped` for both `TaskDead` and `TaskStopped`.
I think this is a bug. If the value is a dict, it should be a dict of filters.
This is a bit of a hack. I'm not sure if there is a better way to do this.
This is a bit of a nit, but I think it would be better to use `os.path.join(args.config_directory, 'Default.sqlite')` here. This will ensure that the path is always relative to the config directory, even if the user passes in an absolute path.
I think this should be `Disconnected` instead of `NotConnected`
This is a typo.
This is a bug fix.
This is the only change that I'm not sure about. I'm not sure if we should be sending the `DockerVersion:` prefix or not. I'm not sure if it's used anywhere.
This is a breaking change. I think we should just remove this case and have the `case bool, int64, uint64, float64, string:` handle the conversion.
This test is not needed anymore.
I think this should be done in the constructor of the `AnalysisCache` class.
I think this should be `int` as well.
I think this is a bit confusing. I would suggest to use `round` instead of dividing by 10 and multiplying by 10.
This should be nullable.
please add a space after the dot.
I think we should be able to remove this TODO now.
bbox_feats.shape[0] > 0 is mean the number of proposal is not 0.
I think this is a bug. The typeWidth should be passed in as a parameter to the method.
why change this?
I think this is a false positive.
This is no longer used.
nit: I think we should remove this line.
I think this should be `type nodeIDKey string` instead of `type nodeIDKey int`.
`DIoULoss` in the bbox head.
I think this is the only place where we need to pass `buildStatic` as a parameter.
This is a bit of a hack, but it's the only way I can think of to get the first account. I'm not sure if there's a better way to do this.
I think this should be `if telemetryConfig.Enable && log.GetTelemetryURI() == "" && !cfg.DisableTelemetry`
I think we should add `destinationServicePort` as well.
I think this is not needed anymore.
I think this is not correct. The trieStore is not readonly. It is the trieStore that is readonly.
I think this should be `getfeerate` (and the help message should be updated accordingly)
This is not used.
Style/MutableConstant: Freeze mutable objects assigned to constants.
why not use the default value?
I think this should be `long` instead of `Long`
I think this is a bug fix. The previous code would have failed if the port was not specified.
I think we should also remove the old data dir if the rename fails.
This is a bit ugly, but I don't see a better way.
I think this should be `database capacity in chunks (and in Bytes): %v (%v)`
I think it would be better to use `\Shopsys\FrameworkBundle\Model\Product\Flag\Flag` here.
I think this should be `dynamicconfig.DurationPropertyFnWithTaskQueueInfoFilters` as well.
I think we should use `HttpRequestHeadersHost` here as well.
This is a bit of a hack, but it's the only way I could think of to make this work. I'm not sure if there's a better way to do this.
I think this is a bit confusing. I would rather have a `RestInvocationContext` object in the context.
I think we should use `const` here.
I think we should add `kms_rules.yaml` to this list.
I think we should keep the error here.
I think this should be `throw new Error('Unable to parse content of ' + file.originalPath + ': ' + e.message);`
I think this is the right thing to do.
I think this is a bug. The width should be the width of the item. The maxWidth should be the width of the item + the width of the scrollbar.
I think this should be a `uint32` instead of a pointer.
I think it would be better to have a separate function for this. It's not a very common case, and it's not clear from the name what it does.
This is a bit confusing. I think it would be better to have a separate method for the case where `service` is `null`.
This is a nitpick, but I think it's better to have the braces on the same line as the `if` statement.
I think this is the only place where we need to check for `IsXNullableReturnType`
Please add a blank line after the `use` statements.
I think this should be `globalize.translate('LabelHardwareEncoding') + ': ' + session.TranscodingInfo.HardwareAccelerationType`
This is no longer used.
This is not needed.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is a bug fix. I think we should keep the `functional` check.
This is a bit of a nit, but I think it would be more readable to use `location_map.size()` here instead of `pipeline->rp_state->dynamic_rendering_pipeline_create_info.colorAttachmentCount`.
This method is not used.
I think this test case should be removed.
I think this should be `isLongrunningReturnValue` to match the other methods.
This is a bit confusing. I'd say: "If wx doesn't know the language, don't try to initialize it."
I think this should be 22 and 23.
This import is unused.
I think this is a bug fix. I think the original code was wrong.
I'm not sure if this should be a `Boolean` or a `boolean`. I'm not sure if we want to allow `null` values. I'm not sure if we want to allow `null` values. I'm not sure if we want to allow `null` values. I'm not sure if we want to allow `null` values. I'm not sure if we want to allow `null` values. I'm not sure if we
Nit: I think we should remove this using statement.
This is a bit of a hack, but it's the only way I could think of to get the config value into the view.
Style/IfUnlessModifier: Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
I think this is a bit confusing. The contexts are not incompatible with yarpc clients, but with the generated yarpc clients.
I think this should be `companion.provider.authProviderName` instead of `companion.provider.authProvider`
This is a breaking change. We should not add extension methods to the public API.
Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Line is too long. [105/80]<br>Use 2 (not 3) spaces for indenting an expression spanning multiple lines.
I think this is a bit confusing. I think it would be better to say "The returned MDs are the same instances that are stored in the MD cache, so they should be modified with care."
This is a bit confusing. I'd say: * @out_variant: (out) (nullable) (transfer full): Metadata * @out_variant: (out) (nullable) (transfer full): Metadata * @out_variant: (out) (nullable) (transfer full): Metadata * @out_variant: (out) (nullable) (transfer full): Metadata * @out_variant: (out)
I think this should be `opts.prefix_size > 0` (or `opts.prefix_size != 0`) to be consistent with the other options.
Please remove the empty line.
I think this is a bit confusing. The tail probability is the probability of getting samples > x. The probability of getting samples further from the mean is the probability of getting samples > x.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
I think this is the only change that is not backwards compatible.
This is a server-side only class.
I think this should be "Additional parameters for the {0} operation.".
This class is empty. Please remove it.
`unknown sentence type`
I think this file should be removed.
Hint to show above the code editor
This command does not accept any arguments.
I think this should be `name.replace(k, v)` (without the `()`)
I think this should be `clef-signer-address` (without the `rpc` part)
I think this should be `--mac_installer_signing_identity` (singular) to match the other options.
I think this is a bug. We should not be ignoring routes with no destination.
This is a bit of a hack, but it's the only way I could get the TypeScript tests to work. I'm not sure why the TypeScript tests can't just require the flatbuffers module, but it seems to be a problem with the way the TypeScript compiler is generating the output.
I think we should use `thanos.io/thanos` here.
Line is too long. [105/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
I think this should be `publicURL` or `public_url` to be consistent with the rest of the code.
This is a bit of a hack, but it's the only way I can think of to avoid having to pass the label around.
I think this should be `duckv1.Source` instead of `duckv1.KResource`
This should be `!ie.ServiceBuilder`
I'd prefer to see these as constants in the header file, rather than macros.
why not use `MintNewSecretBlock` here?
This is wrong. The `:` is a special value that means "not found". You should use `test "$YACC" = :` instead.
I think this should be `#define CATCH_CONFIG_MAIN` (without the space)
I think this is a bug. If the update fails, we should retry.
This is a bit weird. I'd expect the `PLATFORM_IS_BSD` to be defined for both FreeBSD and Darwin.
Line is too long. [105/80]<br>Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
This is a bit of a hack, but it's the only way I can think of to get the array of values without having to create a new array for each value.
This is the only place where we clear the RXDREADY event. I think it's safe to do this here, but I'm not sure.
This is the range of characters that are not allowed in the username.
This is a breaking change. I think we should not change this.
Please remove empty line.
This is a bit of a hack, but it works. I'm not sure if there's a better way to do this.
This is a bit of a hack, but it's the only way I could get the tests to pass. I'm not sure why this is necessary, but it seems to be.
I think this should be `DevnetConfig` instead of `Devnet`
I'm not sure if this is the best way to do this. I'm not sure if it's possible to get the tab from the widget. I'm not sure if it's possible to get the widget from the tab. I'm not sure if it's possible to get the tab from the widget. I'm not sure if it's possible to get the widget from the tab. I'm not sure if it's possible to get the
This is not used anywhere.
This is a bit of a hack, but it's the only way I could think of to get the test to pass. I'm not sure if there's a better way to do this.
I think this is the only change that's not related to the refactoring.
This is a bit of a nitpick, but I think it's better to use `result` instead of `res` here.
I think this should be `fakeStorageClient` to match the other fake clients.
Please add a space after commas.
This is the only change in this file.
I think this is a breaking change. I think we should keep the `client.Client` interface here.
I think this should be a `PerformanceTestSample` object, not a `string` (or `null`)
I think this is a bug. If you have a run config, you should be able to pass it in here.
This is a bit odd; we set the error in response AND return it. However, to preserve the current behavior of YARPC, this is necessary. This is most likely where the error details will be added, so we expect this to change.
Style/MutableConstant: Freeze mutable objects assigned to constants.
I think we should add a TODO here to remove this when we remove the `FlattenedMethodAsyncCallSettings` and `FlattenedMethodAsyncCancellationToken` methods.
I think we should use `setTarget` here.
I think we should add a TODO here to add a link to the spec.
I think this is the only place where we're using the `maxMessages` parameter. I think we should just remove it and always use the `s.maxMessages` value.
This is not needed.
I think this should be `OtherKeys.Replace('\t', '\n')`.
I think we should be using `create!` here, so that we can raise an exception if the comment creation fails.
why not use `log.L().Fatal("NewBlockDAO failed", zap.Error(err), zap.Any("cfg", cfg))` ?
I think this is a good change, but I'm not sure why it's needed. I'm not sure why the test was failing before.
I think this should be `int[]` instead of `string[]`
nit: I think it would be better to use `assertThat(CommonRenderingUtil.getDocLines("a\nb\nc")).containsExactly("a", "b", "c").inOrder();` for all of these tests.
nit: I think we should add a blank line between the struct and the var.
I think we should also update the `Datadog.Trace.ClrProfiler.Managed.Core.nuspec` file.
I think this should be `true` instead of `false`
This is a bit of a weird pattern. I'm not sure if it's a good idea to have a method that returns a boolean and then have the caller do something based on the return value. I think it would be better to have the method that returns a boolean and then have the caller call the method that does the work.
This line is too long. [E501]
This is a BC break.
This is a bit of a hack, but it works. I'm not sure how to get the `approval` object into the template context.
I think we should use `cniNet` and `cniIpam` to set the `cni.net` and `cni.ipam` configs in the `config.yaml` file.
nit: can we use `ManifestFiles.read(manifest, io, null, null)` here?
I think this should be `/se/grid/newsessionqueue/size` to be consistent with the other endpoints.
I think this is not needed, you can just use the `mProduct` variable in the `onActivityResult` method.
Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
> This path is tested by linux.thread-reset and linux.clone-reset. We just haven't run those on ARM yet. [](start = 11, length = 73)
This is a bit of a hack, but it's the only way I can think of to get the correct indentation.
I think this should be `if err != nil { return nil, nil, err }`
This should be `Verbosef` as well.
I think this is a bit confusing. I think it would be better to say "Returns the number of documents in the index, including documents that are being added (i.e., reserved)."
I think this should be 1000000000 instead of 100000000.
I think this should be `Multimedia has %count% relations with products`
I think this is the only place where we pass `data` to `getDataErrorComponent`. I think we should pass it to `getDataErrorComponent` in `getDataErrorComponent` itself.
I think this should be a constant.
This is a bit of a nit, but I think it would be better to use `case e, ok := proxyErr.(net.Error); ok && e.Timeout()` to be more explicit.
I think this should be `if r.ContentLength == 0`
I'm not sure if this is the right place to put this. I'm not sure if it's even the right place to put the LOG. I'm not sure if it's the right place to put the CLIENT_ASSERT. I'm not sure if it's the right place to put the return. I'm not sure if it's the right place to put the if. I'm not sure if it's the right place
Line is too long. [121/80]<br>Prefer single-quoted strings when you don't need string interpolation or special symbols.
Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
I'm not sure if this is the best way to do this, but I think it's the only way to do it. I'm not sure if we can just pass the `autoPolicy` to `caddytls.NewAutomationPolicy` and have it return a `caddytls.AutomationPolicy` that we can use.
I think this is the right fix. I'm not sure why we were checking for `nil` in the first place.
I think this should be `TimeColumn` and `TimeColumnDst` to match the other options.
I think this should be `Ready *bool` to be consistent with the rest of the code.
I think this is a regression. I'm not sure if we should be using `ELLIPSIS` here.
